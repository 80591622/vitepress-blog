import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"shell & ssh","description":"","frontmatter":{},"headers":[],"relativePath":"workspace/Project/linux.md","filePath":"workspace/Project/linux.md","lastUpdated":1713971483000}');
const _sfc_main = { name: "workspace/Project/linux.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="shell-ssh" tabindex="-1">shell &amp; ssh <a class="header-anchor" href="#shell-ssh" aria-label="Permalink to &quot;shell &amp; ssh&quot;">​</a></h1><h2 id="日常用到的shell命令" tabindex="-1">日常用到的Shell命令 <a class="header-anchor" href="#日常用到的shell命令" aria-label="Permalink to &quot;日常用到的Shell命令&quot;">​</a></h2><table><thead><tr><th>命令名</th><th>功能描述</th></tr></thead><tbody><tr><td>clear</td><td>清除屏幕或窗口内容</td></tr><tr><td>env</td><td>显示当前所有设置过的环境变量</td></tr><tr><td>date</td><td>显示系统的当前日期和时间</td></tr><tr><td>cal</td><td>显示日历</td></tr><tr><td>vi 修改文件</td><td>dd删除一行 A编辑选中的最后一行代码 ，</td></tr><tr><td>:set nu</td><td>加索引</td></tr><tr><td>touch</td><td>创建文件</td></tr><tr><td>mkdir</td><td>创建文件夹</td></tr><tr><td>du -ha [文件名称]</td><td>查看目录/文件占用空间大小</td></tr><tr><td>ls -lh</td><td>看文件大小</td></tr><tr><td>ll</td><td>等价 ls -al</td></tr><tr><td>netstat -nltp</td><td>grep 443</td></tr><tr><td>mv</td><td>修改文件名 移动文件 mv index.html .bash_profile</td></tr><tr><td>cat</td><td>查看内容</td></tr><tr><td>sudo vim /etc/hosts</td><td>ws破解</td></tr><tr><td>ssh -p 2289 <a href="mailto:root@182.92.117.162" target="_blank" rel="noreferrer">root@182.92.117.162</a></td><td>登录ssh</td></tr><tr><td>chattr +i .user.ini</td><td>重新恢复文件不可更动属性</td></tr><tr><td>chmod -R 777 pet_07</td><td>赋权限</td></tr><tr><td>r：可读<br>w：可写<br>x：可执行<br><br>-rw------- (600) -- 只有属主有读写权限。<br>-rw-r--r-- (644) -- 只有属主有读写权限；而属组用户和其他用户只有读权限。<br>-rwx------ (700) -- 只有属主有读、写、执行权限。<br><strong>-rwxr-xr-x (755) -- 属主有读、写、执行权限；别的用户组只有读、执行权限。</strong><br>-rwx--x--x (711) -- 属主有读、写、执行权限；而属组用户和其他用户只有执行权限。<br>-rw-rw-rw- (666) -- 所有用户都有文件读、写权限。这种做法不可取。<br>-rwxrwxrwx (777) -- 所有用户都有读、写、执行权限。更不可取的做法。<br></td><td>参数解释</td></tr><tr><td>sudo chown -R $(whoami) or【你的用户名】 /Users/wk/Desktop/projectSvelte</td><td>更改某个目录或文件的用户名和用户组</td></tr><tr><td>yarn version --new-version 1.0.0</td><td>更改版本号</td></tr><tr><td>curl <a href="http://www.wkdevhub.cn:8000/banner" target="_blank" rel="noreferrer">http://www.wkdevhub.cn:8000/banner</a></td><td>http命令行工具</td></tr><tr><td>ping www.wkdevhub.cn</td><td>ping</td></tr><tr><td>kill -9 PID</td><td>杀死这个进程</td></tr><tr><td>npx browser-sync start -s . -f .</td><td>静态页面动态刷新</td></tr><tr><td>browser-sync start --server --files .</td><td>静态页面动态刷新</td></tr><tr><td>rm -rf node_modules/.cache/babel-loader</td><td>umi的bug</td></tr><tr><td>nginx -s reload</td><td>重启nginx</td></tr><tr><td>tar -czvf dist.tar.gz dist</td><td>dist 压缩</td></tr><tr><td>tar -xzvf dist.tar.gz</td><td>解压</td></tr><tr><td>-c: 建立压缩档案<br>-x：解压<br>-z：有gzip属性的<br>-v：显示所有过程<br>-r：向压缩归档文件末尾追加文件<br>-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。<br></td><td>参数解释</td></tr><tr><td>find / -name jenkins</td><td>查看安装目录</td></tr><tr><td>sed -i &#39;&#39; &quot;s/666/777/g&quot; config</td><td>修改文字 666换成777</td></tr></tbody></table><p><code>看一共写了多少代码</code></p><p>find . &quot;(&quot; -name &quot;<em>.vue&quot; -or -name &quot;</em>.jsx&quot; -or -name &quot;<em>.tsx&quot; -or -name &quot;</em>.css&quot; -or -name &quot;<em>.less&quot; -or -name &quot;</em>.scss&quot; -or -name &quot;<em>.js&quot; -or -name &quot;</em>.ts&quot; &quot;)&quot; -print | xargs wc -l</p><h2 id="添加环境变量" tabindex="-1">添加环境变量 <a class="header-anchor" href="#添加环境变量" aria-label="Permalink to &quot;添加环境变量&quot;">​</a></h2><ul><li>临时有效 <ul><li>export PATH=$(pwd)/bin:$PATH</li></ul></li><li>软连接 /usr/local/bin/就是环境变量目录 <ul><li>ln -s /usr/local/nginx/sbin/nginx /usr/local/bin/</li></ul></li><li>用户主目录下的.bashrc 或.profile文件（推荐） <ul><li>export PATH=/Users/wk/mongodb/bin:$PATH <ul><li>执行source ~/.bashrc, 立即生效</li></ul></li></ul></li></ul><h2 id="vim" tabindex="-1">VIM <a class="header-anchor" href="#vim" aria-label="Permalink to &quot;VIM&quot;">​</a></h2><p><strong>批量注释</strong></p><p>从需要被注释的第一行开始，将光标移动到行首，</p><p>按下 <code>Ctrl + v</code></p><p>接着按下<code>方向键</code>下，一直移动到需要被注释的最后一行，</p><p>这时可以看到，这些需要被注释的行的行首第一个字符已经全部被选中</p><p>然后按下 <code>Shift + i</code>，批量插入，</p><p>这时光标会跳到第一行的行首，不用管，继续按下<code>Shift + 3</code>，也就是 <code>#</code>键</p><p>最后按下 <code>Esc</code> 键，就可以看到刚才被选中的行的行首都会加多一个<code>#</code>号</p><p>批量注释完毕</p><p><strong>去注释</strong></p><p>对于一大段被注释的代码，需要去掉注释的时候，也可以一次性操作完</p><p>不用一个一个去删，具体操作如下：</p><p>光标移到需要去除注释的第一行的行首，跟上面的一样，</p><p>按下 ·<code>Ctrl + v</code></p><p>接着按下<code>方向键</code>下，一直移动到需要被注释的最后一行，</p><p>这时候可以看到，行首的第一个字符<code>#</code>已经被选中了，</p><p>然后按下<code>d</code>键就可以全部删掉行首的<code>#</code>字符了。</p><h2 id="shell编程" tabindex="-1">Shell编程 <a class="header-anchor" href="#shell编程" aria-label="Permalink to &quot;Shell编程&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"># run: sh depoly.sh 123 123</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"># 变量定义</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">str</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;test&#39;</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> # 注意赋值不需要空格</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">str2</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;this is </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">$str</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> # 双引号可以直接写入变量</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">str3</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;this is \${</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">str</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">}&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">arr</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;1&#39;</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;2&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"># 数组</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"># echo打印</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">echo</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> this</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> is</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> test</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> # this is test # 被默认为字符串，不会报错</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">echo</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> $str</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> # test # 变量引用需要家$符号</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">echo</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> $str2</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> # this is test</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">echo</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> $str3</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> # this is test</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">echo</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> \${</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">arr</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[1]} </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"># 2 # 数组切割</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"># if判断</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [ </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">$str</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ==</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;test&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> ] </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"># if条件需要在方括号中，并且注意需要空格</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">then</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">    echo</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;successed&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">fi</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">a</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;10&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">b</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;20&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [ </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">$a</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> !=</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> $b</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> ]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">then</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">   echo</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;a 不等于 b&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">fi</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"># 获取参数</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">echo</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}"> $1</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> # 123 #第一个参数</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">echo</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> $#</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> # 2 # 参数个数</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">echo</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> $*</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> # 123 123 所有参数</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"># for循环</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"># C语言风格</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">for</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> ((</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">&lt;=</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">100</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">++</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">))</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">do</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">  echo</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> $i</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">done</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"># Python风格（in的使用）</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">for</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> i</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> in</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">1..100}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">do</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">  echo</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> $i</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">done</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><h2 id="ssh-不能登录服务器" tabindex="-1">ssh 不能登录服务器 <a class="header-anchor" href="#ssh-不能登录服务器" aria-label="Permalink to &quot;ssh 不能登录服务器&quot;">​</a></h2><p>提示警告信息如下：</p><p>arnold@WSN:~$ ssh 120.79.229.197</p><p>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @ WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! @ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY! Someone could be eavesdropping on you right now (man-in-the-middle attack)! It is also possible that the RSA host key has just been changed. The fingerprint for the RSA key sent by the remote host is 08:98:a9:cc:f8:37:20:6b:b4:b1:6c:3a:15:b9:a9:92. Please contact your system administrator. Add correct host key in /home/arnold/.ssh/known_hosts to get rid of this message. Offending key in /home/arnold/.ssh/known_hosts:2 RSA host key for 10.18.46.111 has changed and you have requested strict checking. Host key verification failed.</p><p>原因分析：</p><p>It is also possible that a host key has just been changed.</p><p>我之前对ssh服务器重装了系统，导致所有与原系统建立过ssh连接的系统都无法再建立连接，因为在于原系统建立首次连接时，双方相互记录了对方的公钥（ssh基于非对称密钥技术），在ssh服务主机重装系统后，公钥改变了，任以旧版本公钥的主机自然是无法与新系统连接的。</p><p>网上还有分析为ssh主机被人黑了，并在消除入侵记录时对known_hosts文件做了改动。当然也不排除这种可能，但我估计我是没那个福气了：）</p><p>解决方案：</p><p>删除 <code>~/.ssh/known_hosts</code>文件，或者<code>如果你可以判断出known_hosts中原ssh服务器的公钥，删去那部分</code>，</p><p>然后后再次建立新的连接，即可获得新的公钥。</p><h2 id="关于sshpass使用举例" tabindex="-1">关于sshpass使用举例 <a class="header-anchor" href="#关于sshpass使用举例" aria-label="Permalink to &quot;关于sshpass使用举例&quot;">​</a></h2><p><code>使用-p参数指定登录密码</code></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"># 免密码登录</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">$</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> sshpass</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> -p</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> password</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> ssh</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> username@host</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"># 远程执行命令</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">$</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> sshpass</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> -p</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> password</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> ssh</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> username@host</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> &lt;</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">cm</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">d&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"># 通过scp上传文件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">$</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> sshpass</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> -p</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> password</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> scp</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> local_file</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> root@host:remote_file</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> </span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"># 通过scp下载文件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">$</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> sshpass</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> -p</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> password</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> scp</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> root@host:remote_file</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> local_file</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>示例：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">#把本地的source.txt文件拷贝到192.168.0.10机器上的/home/work目录下</span></span>
<span class="line highlighted"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">scp</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> /home/work/source.txt</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> root@192.168.0.10:/home/work/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> </span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">#把120.79.229.197机器上的wk.gif文件拷贝到本地的/Users/zhenfeng/tempData/目录下</span></span>
<span class="line highlighted"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">scp</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> root@120.79.229.197:/tmp/wk.gif</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> /Users/zhenfeng/tempData/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  </span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">#把192.168.0.10机器上的source.txt文件拷贝到192.168.0.11机器的/home/work目录下</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">scp</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> root@192.168.0.10:/home/work/source.txt</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> root@192.168.0.11:/home/work/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> </span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">#拷贝文件夹，加-r参数</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">scp</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> -r</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> /home/work/sourcedir</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> root@192.168.0.10:/home/work/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="脚本" tabindex="-1">脚本 <a class="header-anchor" href="#脚本" aria-label="Permalink to &quot;脚本&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">#!/usr/bin/env bash</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">tar</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> -czvf</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;$1&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> | </span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">sshpass</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> -p</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> password</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> ssh</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> root@host</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;cd /home -rf;tar -xzvf -&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>脚本用env启动的原因，是因为脚本解释器在linux中可能被安装于不同的目录，env可以在系统的PATH目录中查找。同时，env还规定一些系统环境变量。 </code></p><h2 id="linux-ab压力测试" tabindex="-1">linux-ab压力测试 <a class="header-anchor" href="#linux-ab压力测试" aria-label="Permalink to &quot;linux-ab压力测试&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"># 基本用法</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">ab</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> -c</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 10</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> -n</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 100</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> https://www.xxxxx.com</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>参数释义 总共请求100次 一次请求10个 post文件 请求头信息 地址</p><p><strong>对相关参数进行说明：</strong></p><pre><code>-n 即requests，用于指定压力测试总共的执行次数。
-c 即concurrency，用于指定的并发数。
-t 即timelimit，等待响应的最大时间(单位：秒)。
-b 即windowsize，TCP发送/接收的缓冲大小(单位：字节)。
-p 即postfile，发送POST请求时需要上传的文件，此外还必须设置-T参数。
-u 即putfile，发送PUT请求时需要上传的文件，此外还必须设置-T参数。
-T 即content-type，用于设置Content-Type请求头信息，例如：application/x-www-form-urlencoded，默认值为text/plain。
-v 即verbosity，指定打印帮助信息的冗余级别。
-w 以HTML表格形式打印结果。
-i 使用HEAD请求代替GET请求。
-x 插入字符串作为table标签的属性。
-y 插入字符串作为tr标签的属性。
-z 插入字符串作为td标签的属性。
-C 添加cookie信息，例如：“Apache=1234”(可以重复该参数选项以添加多个)。
-H 添加任意的请求头，例如：“Accept-Encoding: gzip”，请求头将会添加在现有的多个请求头之后(可以重复该参数选项以添加多个)。
-A 添加一个基本的网络认证信息，用户名和密码之间用英文冒号隔开。
-P 添加一个基本的代理认证信息，用户名和密码之间用英文冒号隔开。
-X 指定使用的和端口号，例如:“126.10.10.3:88”。
-V 打印版本号并退出。
-k 使用HTTP的KeepAlive特性。
-d 不显示百分比。
-S 不显示预估和警告信息。
-g 输出结果信息到gnuplot格式的文件中。
-e 输出结果信息到CSV格式的文件中。
-r 指定接收到错误信息时不退出程序。
-h 显示用法信息，其实就是ab -help。
</code></pre><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[root@hadoop ab]# ab -c 10 -n 100 https://ah2.zhangyue.com/zybk/subscribe/talk?actId=949</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">This</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> is</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> ApacheBench,</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Version</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 2.3</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> &lt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">$Revision</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">:</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 1879490</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> $&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Copyright</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 1996</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Adam</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Twiss,</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Zeus</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Technology</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Ltd,</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> http://www.zeustech.net/</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Licensed</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> to</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> The</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Apache</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Software</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Foundation,</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> http://www.apache.org/</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Benchmarking</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> ah2.zhangyue.com</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (be </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">patient</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">).....done</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Server</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Software:</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Server</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Hostname:</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">        ah2.zhangyue.com</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    #请求的URL主机名</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Server</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Port:</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">            443</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  #web服务器监听的端口</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">SSL/TLS</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Protocol:</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">       TLSv1.2,ECDHE-RSA-AES128-GCM-SHA256,2048,128</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Server</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Temp</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Key:</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">        ECDH</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> P-256</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 256</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> bits</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">TLS</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Server</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Name:</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">        ah2.zhangyue.com</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Document</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Path:</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">          /zybk/subscribe/talk?actId=</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">949</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> #请求的URL中的根绝对路径</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Document</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Length:</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">        13731</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> bytes</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> #HTTP响应数据的正文长度</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Concurrency</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Level:</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">      10</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> 　#</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> 并发用户数，这是我们设置的参数之一</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Time</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> taken</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> for</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> tests:</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">   3.207</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> seconds</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">   #所有这些请求被处理完成所花费的总时间 单位秒</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Complete</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> requests:</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">      100</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  # 总请求数量，这是我们设置的参数之一</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Failed</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> requests:</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">        33</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  # 表示失败的请求数量，这里的失败是指请求在连接服务器、发送数据等环节发生异常，以及无响应后超时的情况</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">   (</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Connect:</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> 0,</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Receive:</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> 0,</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Length:</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> 33,</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Exceptions:</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Total</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> transferred:</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">      1404034</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> bytes</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> #所有请求的响应数据长度总和。包括每个HTTP响应数据的头信息和正文数据的长度</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">HTML</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> transferred:</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">       1373034</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> bytes</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  # 所有请求的响应数据中正文数据的总和，也就是减去了Total transferred中HTTP响应数据中的头信息的长度</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Requests</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> per</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> second:</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">    31.18</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [#/sec] (</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">mean</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)  </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">#吞吐率，计算公式：Complete requests/Time taken for tests  总请求数/处理完成这些请求数所花费的时间</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Time</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> per</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> request:</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">       320.737</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [ms] (</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">mean</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"># 用户平均请求等待时间，计算公式：Time token for tests/（Complete requests/Concurrency Level）。处理完成所有请求数所花费的时间/（总请求数/并发用户数）</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Time</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> per</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> request:</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">       32.074</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [ms] (</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">mean,</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> across</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> all</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> concurrent</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> requests</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">#服务器平均请求等待时间，计算公式：Time taken for tests/Complete requests，正好是吞吐率的倒数。也可以这么统计：Time per request/Concurrency Level</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Transfer</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> rate:</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">          427.49</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [Kbytes/sec] received </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">#表示这些请求在单位时间内从服务器获取的数据长度，计算公式：Total trnasferred/ Time taken for tests，这个统计很好的说明服务器的处理能力达到极限时，其出口宽带的需求量。</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Connection</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> Times</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (ms)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">              min</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">  mean[+/-sd]</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> median</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">   max</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Connect:</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">       39</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">  138</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 150.2</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">     76</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">     906</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Processing:</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">    27</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">  119</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 164.8</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">     54</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">     984</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Waiting:</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">       27</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">  118</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 164.7</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">     54</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">     984</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Total:</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">         70</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">  256</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 220.1</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">    153</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">    1135</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Percentage</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> of</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> the</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> requests</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> served</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> within</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> a</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> certain</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> time</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (ms)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  50%</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">    153</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  66%</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">    296</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  75%</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">    351</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  80%</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">    371</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  90%</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">    565</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  95%</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">    796</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  98%</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">   1069</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  99%</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">   1135</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> 100%</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">   1135</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (longest </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">request</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><h2 id="针对jenkins总结的" tabindex="-1">针对jenkins总结的 <a class="header-anchor" href="#针对jenkins总结的" aria-label="Permalink to &quot;针对jenkins总结的&quot;">​</a></h2><p><code>启动jenkins</code><br> java -jar jenkins.war --httpPort=8081</p><p><code>如果想要在linux后台一直运行，则要开始加nohup，在末尾加&amp;号</code><br> nohup java -jar jenkins.war --httpPort=8081 &amp;</p><p>启动后 会生成一个nohup.out输出，需要的话，可以tail -f nohup.out实时查看日志</p><p><code>列出jenkins的所有进程</code><br> ps -aux|grep jenkins</p><p><code>杀死这个进程</code><br> kill -9 [PID]</p><p><code>启动jenkins的另外方式</code><br> service jenkins start/stop/restart/status</p><p>systemctl start jenkins.service</p><p><code>查看运行的后台进程</code><br> jobs -l<br> jobs命令只看当前终端生效的，关闭终端后，在另一个终端jobs已经无法看到后台跑得程序了，此时利用ps（进程查看命令）<br> ps -ef<br> ps -aux|grep jenkins</p><p><strong>查看使用某端口的进程</strong><br><code>lsof -i:3000</code> <br> kill -9 [pid]</p></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("workspace/Project/linux.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const linux = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  linux as default
};
