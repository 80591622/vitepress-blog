import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"单元测试框架Jest学习总结","description":"","frontmatter":{},"headers":[],"relativePath":"workspace/Frame/unit-test/jest.md","filePath":"workspace/Frame/unit-test/jest.md","lastUpdated":1713942612000}');
const _sfc_main = { name: "workspace/Frame/unit-test/jest.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="单元测试框架jest学习总结" tabindex="-1">单元测试框架Jest学习总结 <a class="header-anchor" href="#单元测试框架jest学习总结" aria-label="Permalink to &quot;单元测试框架Jest学习总结&quot;">​</a></h1><h2 id="测试框架" tabindex="-1">测试框架 <a class="header-anchor" href="#测试框架" aria-label="Permalink to &quot;测试框架&quot;">​</a></h2><p><code>Mocha+chai</code>(断言库)<br> yarn add mocha chai -D</p><p><code>Jest</code><br> yarn add jest -D</p><h2 id="适合场景" tabindex="-1">适合场景 <a class="header-anchor" href="#适合场景" aria-label="Permalink to &quot;适合场景&quot;">​</a></h2><ul><li>业务比较复杂</li><li>公司非常注重代码质量，想尽一切办法杜绝线上出bug</li><li>需要长期维护的项目。它们需要测试来保障代码可维护性、功能的稳定性</li><li>被多次复用的部分，比如一些通用组件和库函数。因为多处复用，更要保障质量</li><li>开源项目</li></ul><h2 id="首先安装需要的包" tabindex="-1">首先安装需要的包 <a class="header-anchor" href="#首先安装需要的包" aria-label="Permalink to &quot;首先安装需要的包&quot;">​</a></h2><p>基于vue</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">yarn</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> add</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> jest</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> vue</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">jest</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> babel</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">jest</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> @</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">vue</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">/</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">test</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">utils</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> @</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">types</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">/</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">jest</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> -</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>注意版本号之间兼容性问题</p><h3 id="让jest支持es6语法" tabindex="-1">让Jest支持ES6语法 <a class="header-anchor" href="#让jest支持es6语法" aria-label="Permalink to &quot;让Jest支持ES6语法&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// .babelrc</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;@babel/preset-env&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">   {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">   &quot;targets&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;browsers&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">       &quot;chrome &gt;= 50&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">     ],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;node&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;current&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">   },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">   &quot;modules&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;auto&quot;</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> // 不能为true </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="测试的步骤" tabindex="-1">测试的步骤 <a class="header-anchor" href="#测试的步骤" aria-label="Permalink to &quot;测试的步骤&quot;">​</a></h2><ul><li>写测试说明，针对你的每条测试说明测试了什么功能，预期结果是什么。</li><li>写测试主体，通常是 输入 -&gt; 输出。</li><li>判断测试结果，拿输出和预期做对比。如果输出和预期相符，则测试通过。反之，不通过。</li></ul><p><strong>yarn add jest @types/jest babel-jest babel-core babel-preset-env regenerator-runtime -D</strong></p><p>Jest本身是不支持es6的，但是在react中已经配置好babel等，可以直接使用ES6的语法特性进行单元测试</p><p><strong>使用方式</strong></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">expect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">).</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">not</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">toBe</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//判断不等</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>toBe()</code> 绝对相等<br><code>toEqual()</code> 判断对象或者数组是否相等<br><code>toBeNull()</code>只匹配null<br><code>toContain()</code>检测数组中是否包含特定某一项<br><code>toBeUndefined()</code>只匹配undefined<br><code>toBeDefine()</code>与toBeUndefined相反<br><code>toBeTruthy()</code>匹配任何if语句为真<br><code>toBeFalsy()</code>匹配任何if语句为假<br><code>toBeCloseTo(0.3)</code> 浮点数判断相等<br></p><p><strong>数字匹配器</strong><br><code>toBeGreaterThan()</code>大于<br><code>toBeGreaterThanOrEqual()</code>大于或者等于<br><code>toBeLessThan()</code>小于<br><code>toBeLessThanOrEqual()</code>小于或等于<br></p><h2 id="package里面关于jest的配置" tabindex="-1">package里面关于jest的配置 <a class="header-anchor" href="#package里面关于jest的配置" aria-label="Permalink to &quot;package里面关于jest的配置&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//package.json</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;scripts&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">   &quot;test&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;jest&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//全部测试</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">   &quot;app&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;jest /test/app.test.js --watch&quot;</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  //单个测试  --watch持续检测</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">   &quot;test-watch&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;jest --watchAll&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 所有文件持续检测</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">   &quot;test-with-coverage&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;jest --coverage&quot;</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> // 文件覆盖</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">},</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;jest&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">   &quot;collectCoverage&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,  </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//查看覆盖的文件  \`可以直接输入 jest --coverage 生成测试覆盖率报告\`</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">   &quot;collectCoverageFrom&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [ </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//哪些文件需要收集覆盖率信息 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;src/**/*.{js,jsx,ts,tsx}&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;!src/**/*.d.ts&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">   ],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">   &quot;coverageDirectory&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;tests/coverage&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//覆盖的文件输入到tests文件夹下</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">   &quot;resolver&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;jest-pnp-resolver&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">   &quot;setupFiles&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;react-app-polyfill/jsdom&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">   ],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">   &quot;testMatch&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [ </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//设置识别哪些文件是测试文件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;&lt;rootDir&gt;/test/**/__tests__/**/*.{js,jsx,ts,tsx}&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;&lt;rootDir&gt;/test/**/?(*.)(spec|test).{js,jsx,ts,tsx}&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">   ],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">   &quot;testEnvironment&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;jsdom&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">   &quot;testURL&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;http://localhost&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">   &quot;transform&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;^.+</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">.(js|jsx|ts|tsx)$&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;&lt;rootDir&gt;/node_modules/babel-jest&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;^.+</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">.css$&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;&lt;rootDir&gt;/config/jest/cssTransform.js&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;^(?!.*</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">.(js|jsx|ts|tsx|css|json)$)&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;&lt;rootDir&gt;/config/jest/fileTransform.js&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">   },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">   &quot;transformIgnorePatterns&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;[/</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\\\\\</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">]node_modules[/</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\\\\\</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">].+</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">.(js|jsx|ts|tsx)$&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;^.+</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">.module</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">.(css|sass|scss|less)$&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">   ],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">   &quot;moduleNameMapper&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: { </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;^react-native$&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;react-native-web&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;^.+</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">.module</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">.(css|sass|scss|less)$&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;identity-obj-proxy&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//css module的问题</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;^@(.*)$&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;&lt;rootDir&gt;/src$1&quot;</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> //jest的别名设置</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">   },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">   &quot;moduleFileExtensions&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [ </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//测试文件的类型</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;js&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;ts&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;tsx&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;json&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;jsx&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;node&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">   ]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><h3 id="jest-config-js" tabindex="-1">Jest.config.js <a class="header-anchor" href="#jest-config-js" aria-label="Permalink to &quot;Jest.config.js&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">module</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">exports</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // preset: &quot;ts-jest&quot;,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">  moduleFileExtensions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;vue&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;js&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;jsx&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">  testEnvironment</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;jsdom&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">  transform</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;^.+</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">.js$&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;babel-jest&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// js 文件用 babel-jest 转换</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;^.+</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">.vue$&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;vue-jest&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// vue 文件用 vue-jest 转换</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // &quot;^.+\\\\.ts$&quot;: &quot;ts-jest&quot;, // ts 文件用 ts-jest 转换</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // // 例如，require(&#39;a&#39;) 语句会递归往上层的 node_modules 中寻找 a 模块</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">  moduleDirectories</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;node_modules&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // 匹配 __tests__ 目录下的 .js/.jxs 文件 或其他目录下的 xx.test.js xx.spec.js</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">  testRegex</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;(/__tests__/.(js|jsx)|(</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">.|/)(test|spec))</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">.(js|jsx)$&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // 支持源代码中相同的 \`@\` -&gt; \`src\` 别名</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">  moduleNameMapper</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;^@/(.*)$&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;&lt;rootDir&gt;/src/$1&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="代码覆盖率" tabindex="-1">代码覆盖率 <a class="header-anchor" href="#代码覆盖率" aria-label="Permalink to &quot;代码覆盖率&quot;">​</a></h2><p>可以查看你那些代码没有被覆盖，帮助你发现盲点</p><ul><li>在命令行中通过 “–coverage” flag 指定</li><li>在 package.json 中手动配置</li></ul><p><img src="https://ae01.alicdn.com/kf/H90bd3a97f33a427ebe9de0b3a3e42a2dc.png" alt=""></p><p>%stmts是语句覆盖率（statement coverage）：是不是每个语句都执行了？</p><p>%Branch分支覆盖率（branch coverage）：是不是每个if代码块都执行了？</p><p>%Funcs函数覆盖率（function coverage）：是不是每个函数都调用了？</p><p>%Lines行覆盖率（line coverage）：是不是每一行都执行了？</p><p><strong>Uncovered Line</strong> 是哪行没有被覆盖</p><p>专业术语里，把describe包含的块叫做suite，把it/test包含的块叫做specification，也简称为spec，在一个suite里面可以包含多个数量的spec，但是也要注意结构化语义化。</p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><p>编写测试文件时遵循的命名规范：<code>测试文件的文件名</code> = <code>被测试模块名</code> + .test.js</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//function.js</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> axios</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;axios&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">export</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> default</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    fetchUser</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> axios</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">get</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;http://jsonplaceholder.typicode.com/users/1&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            .</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">then</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">res</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> =&gt;</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> res</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">data</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            .</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">catch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">error</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> =&gt;</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">error</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">));</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    sum</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">a</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">b</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        return</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> a</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> +</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> b</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//function.test.js</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> functions</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;../src/functions&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;fetchUser() 可以请求到一个含有name属性值为Leanne Graham的对象&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    expect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">assertions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> functions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">fetchUser</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">()</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        .</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">then</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">data</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> =&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">            expect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">data</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">).</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">toBe</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;Leanne Graham&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">});</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">it</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;fetchUser() 可以请求到一个含有name属性值为Leanne Graham的对象  async -- await&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">async</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    expect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">assertions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> data</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> await</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> functions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">fetchUser</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">();</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    expect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">data</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">).</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">toBe</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;Leanne Graham&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">});</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">describe</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;加法函数测试&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    it</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;1加2应该等于3&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">        expect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">functions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">sum</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)).</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">toBe</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">3</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">});</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;sum(2 + 2) 等于 4&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    expect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">functions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">sum</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)).</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">toBe</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">4</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">});</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;sum(2 + 2) 等于 4&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    expect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">functions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">sum</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)).</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">not</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">toBe</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1008611</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">});</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;there is no I in team&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    expect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;team&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">).</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">not</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">toMatch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/I/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">});</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;but there is a “stop” in Christoph&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    expect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;Christoph&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">).</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">toMatch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/stop/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">});</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;测试浮点数是否相等&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    expect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">0.003</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> +</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 0.01</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">).</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">toBeCloseTo</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">0.013</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);  </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//这里不能使用toBe</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">});</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;对象判断是否相等&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    expect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;11111&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}).</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">toEqual</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;11111&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}); </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">});</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">describe</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;筛选数组&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;it should filter by a search term (link)&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> input</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            {</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">id</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">url</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;https://www.url1.dev&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">},</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            {</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">id</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">url</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;https://www.url2.dev&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">},</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            {</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">id</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">3</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">url</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;https://www.link3.dev&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        ];</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> output</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [{</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">id</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">3</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">url</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;https://www.link3.dev&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}];</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">        expect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">filterByTerm</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">input</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;link&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)).</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">toEqual</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">output</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">        expect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">filterByTerm</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">input</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;LINK&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)).</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">toEqual</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">output</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">});</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> filterByTerm</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">inputArr</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">searchTerm</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> regex</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> new</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> RegExp</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">searchTerm</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;i&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> a</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> inputArr</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">filter</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">arrayElement</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> arrayElement</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">url</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">match</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">regex</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">a</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> a</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br></div></div><h3 id="vue中的测试案例" tabindex="-1">vue中的测试案例 <a class="header-anchor" href="#vue中的测试案例" aria-label="Permalink to &quot;vue中的测试案例&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// test.vue</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&lt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">template</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  &lt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">div</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    &lt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">slot</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;&lt;/</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">slot</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  &lt;/</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">div</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&lt;/</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">template</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// test.spec.js</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> { </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">shallowMount</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">mount</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> } </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;@vue/test-utils&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> test</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;../test.vue&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> Vue</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;vue&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">describe</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;test.vue&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> wrapper</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> shallowMount</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    slots</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      default</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;测试案例&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  });</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  it</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;设置slot&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Vue</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">nextTick</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">().</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">then</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">      expect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">wrapper</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">text</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">()).</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">toBe</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;测试案例&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="未完待续" tabindex="-1">未完待续... <a class="header-anchor" href="#未完待续" aria-label="Permalink to &quot;未完待续...&quot;">​</a></h3><h2 id="参考文档" tabindex="-1">参考文档 <a class="header-anchor" href="#参考文档" aria-label="Permalink to &quot;参考文档&quot;">​</a></h2><p><a href="https://zh-hans.reactjs.org/docs/test-utils.html" target="_blank" rel="noreferrer">*ReactTestUtils</a></p><p><a href="https://segmentfault.com/a/1190000020387433" target="_blank" rel="noreferrer">参考文档</a></p><p><a href="https://www.jianshu.com/p/aee9a19d5e6a" target="_blank" rel="noreferrer">参考文档2</a></p><p><a href="http://www.voidcn.com/article/p-ftetcszg-btt.html" target="_blank" rel="noreferrer">jest 别名</a></p><p><a href="https://juejin.im/post/5df73d35e51d45581509a1c2?utm_source=gold_browser_extension" target="_blank" rel="noreferrer">Jest 入门教程</a></p></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("workspace/Frame/unit-test/jest.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const jest = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  jest as default
};
