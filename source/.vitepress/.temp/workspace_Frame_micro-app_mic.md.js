import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"微前端","description":"","frontmatter":{},"headers":[],"relativePath":"workspace/Frame/micro-app/mic.md","filePath":"workspace/Frame/micro-app/mic.md","lastUpdated":1741233150000}');
const _sfc_main = { name: "workspace/Frame/micro-app/mic.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="微前端" tabindex="-1">微前端 <a class="header-anchor" href="#微前端" aria-label="Permalink to &quot;微前端&quot;">​</a></h1><p>代码的天敌就是代码量</p><p><img src="https://s.pc.qq.com/tousu/img/20200910/1008611_1599722415.jpg" alt=""></p><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p><strong>什么是微前端 ？？</strong></p><p>微前端是一种类似于微服务的架构，它将微服务的理念应用于浏览器端，即将单页面前端应用由单一的单体应用转变为把多个小型前端应用聚合起来的应用。各个前端应用可以使用不同的技术栈独立开发、独立运行、独立部署</p><p><strong>微前端架构具备以下几个<code>核心价值：</code></strong></p><ul><li><p>技术栈无关，接入友好 主框架不限制接入应用的技术栈，子应用具备完全自主权</p></li><li><p>独立开发、独立部署（业务域） 子应用仓库独立，前后端可独立开发，部署完成后主框架自动完成同步更新</p></li><li><p>增量升级</p><p>在面对各种复杂场景时，我们通常很难对一个已经存在的系统做全量的技术栈升级或重构，而微前端是一种非常好的实施渐进式重构的手段和策略</p></li><li><p>独立运行时 每个子应用之间状态隔离，运行时状态不共享</p></li></ul><p><strong>解决的问题</strong>！！</p><p>微前端架构旨在解决单体应用在一个相对长的时间跨度下，由于参与的人员、团队的增多、变迁，从一个普通应用演变成一个巨石应用后，随之而来的应用不可维护的问题，这类问题在企业级 Web 应用中尤其常见。</p><h2 id="why-not-iframe" tabindex="-1">Why Not Iframe？ <a class="header-anchor" href="#why-not-iframe" aria-label="Permalink to &quot;Why Not Iframe？&quot;">​</a></h2><p><a href="https://www.yuque.com/kuitos/gky7yw/gesexv" target="_blank" rel="noreferrer">https://www.yuque.com/kuitos/gky7yw/gesexv</a></p><p>iframe 最大的特性就是提供了浏览器原生的硬隔离方案，不论是样式隔离、js 隔离这类问题统统都能被完美解决。但他的最大问题也在于他的隔离性无法被突破，导致应用间上下文无法被共享，随之带来的开发体验、产品体验的问题。</p><ol><li>url 不同步。浏览器刷新 iframe url 状态丢失、后退前进按钮无法使用。</li><li>UI 不同步，DOM 结构不共享。想象一下屏幕右下角 1/4 的 iframe 里来一个带遮罩层的弹框，同时我们要求这个弹框要浏览器居中显示，还要浏览器 resize 时自动居中..</li><li>全局上下文完全隔离，内存变量不共享。iframe 内外系统的通信、数据同步等需求，主应用的 cookie 要透传到根域名都不同的子应用中实现免登效果。</li><li>慢。每次子应用进入都是一次浏览器上下文重建、资源重新加载的过程。</li></ol><p>其中有的问题比较好解决(问题1)，有的问题我们可以睁一只眼闭一只眼(问题4)，但有的问题我们则很难解决(问题3)甚至无法解决(问题2)，而这些无法解决的问题恰恰又会给产品带来非常严重的体验问题， 最终导致我们舍弃了 iframe 方案。</p><h2 id="跟-iframe、web-components、npm包、路由分发、插件有什么区别" tabindex="-1">跟 iFrame、Web Components、NPM包、路由分发、插件有什么区别? <a class="header-anchor" href="#跟-iframe、web-components、npm包、路由分发、插件有什么区别" aria-label="Permalink to &quot;跟 iFrame、Web Components、NPM包、路由分发、插件有什么区别?&quot;">​</a></h2><table><thead><tr><th>微前端</th><th style="${ssrRenderStyle({ "text-align": "left" })}"><a href="./[https://baike.baidu.com/item/微件/8626501.html?fromtitle=Widget&amp;fromid=127396&amp;fr=aladdin](https://baike.baidu.com/item/微件/8626501?fromtitle=Widget&amp;fromid=127396&amp;fr=aladdin)">Widget</a> / 业务组件</th></tr></thead><tbody><tr><td>架构体系。用来实现大型Web应用</td><td style="${ssrRenderStyle({ "text-align": "left" })}">以库(外联/npm)的形式实现复用</td></tr><tr><td>生产方式</td><td style="${ssrRenderStyle({ "text-align": "left" })}">生产工具</td></tr><tr><td><code>通过隔离机制实现技术栈无关</code></td><td style="${ssrRenderStyle({ "text-align": "left" })}"><code>需要人工解决依赖和冲突问题 </code></td></tr><tr><td>单独构建 \\ 单独发布 \\ 热升级</td><td style="${ssrRenderStyle({ "text-align": "left" })}">整体构建 \\ 整体发布</td></tr><tr><td>体系化治理，可控性强</td><td style="${ssrRenderStyle({ "text-align": "left" })}">可控性差</td></tr><tr><td>主从关系(路由映射、消息机制)</td><td style="${ssrRenderStyle({ "text-align": "left" })}">相互无关</td></tr><tr><td>微应用是产品的子集(粒度大)</td><td style="${ssrRenderStyle({ "text-align": "left" })}">通用功能(粒度小)</td></tr><tr><td>变化快</td><td style="${ssrRenderStyle({ "text-align": "left" })}">变化小</td></tr><tr><td>若干微应用的组合</td><td style="${ssrRenderStyle({ "text-align": "left" })}">“外挂”</td></tr></tbody></table><h2 id="微前端架构实践中的问题" tabindex="-1">微前端架构实践中的问题 <a class="header-anchor" href="#微前端架构实践中的问题" aria-label="Permalink to &quot;微前端架构实践中的问题&quot;">​</a></h2><ul><li><p>SPA VS MPA</p><p>MPA 方案的优点在于 部署简单、各应用之间硬隔离，天生具备技术栈无关、独立开发、独立部署的特性。缺点则也很明显，应用之间<strong>切换会造成浏览器重刷</strong>，由于产品域名之间相互跳转，流程体验上会存在断点。</p><p>SPA 则天生具备体验上的优势，应用直接无刷新切换，能极大的保证多产品之间流程操作串联时的流程性。缺点则在于各应用技术栈之间是强耦合的。</p><p>那我们有没有可能将 MPA 和 SPA 两者的优势结合起来，构建出一个相对完善的微前端架构方案呢？</p></li><li><p>构建时组合 VS 运行时组合</p></li><li><p>JS Entry vs HTML Entry</p><p>优势就是html-entry 巧妙的避开了js-entry加载子应用js的hash问题</p><p>html entry 的好处是子应用依赖的资源不用过于关心</p></li><li><p>样式隔离</p><p>微前端只能做到子应用之间是不会相互干扰的，父应用一般做的很少，就只有左侧菜单个顶部导航栏，很少会有跟子应用之间有样式之间的冲突，如果有的话就把父应用的权重提高就行了。</p><ul><li><p>Shadow DOM</p><p>基于 <a href="https://www.jianshu.com/p/29ff55319003" target="_blank" rel="noreferrer">Web Components</a> 的 Shadow DOM 能力（内外完全没联系），我们可以将每个子应用包裹到一个 Shadow DOM 中，保证其运行时的样式的绝对隔离。</p><p>但 Shadow DOM 方案在工程实践中会碰到一个常见问题，比如我们这样去构建了一个在 Shadow DOM 里渲染的子应用：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> shadow</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> document</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">querySelector</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;#hostElement&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">).</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">attachShadow</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">mode</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;open&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">});</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">shadow</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">innerHTML</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> \`</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &lt;style&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    h2{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    color:red</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &lt;/style&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &lt;h2&gt;Shadow&lt;/h2&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">\`</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>由于子应用的样式作用域仅在 shadow 元素下，那么一旦子应用中出现运行时越界跑到外面构建 DOM 的场景，必定会导致构建出来的 DOM 无法应用子应用的样式的情况。</p><p>比如 sub-app 里调用了 antd modal 组件，由于 modal 是动态挂载到 document.body 的，而由于 Shadow DOM 的特性 antd 的样式只会在 shadow 这个作用域下生效，结果就是弹出框无法应用到 antd 的样式。解决的办法是把 antd 样式上浮一层，丢到主文档里，但这么做意味着子应用的样式直接泄露到主文档了。gg...</p></li><li><p>CSS Module? BEM?</p><p>社区通常的实践是通过约定 css 前缀的方式来避免样式冲突(人肉不推荐)，即各个子应用使用特定的前缀来命名 class，或者直接基于 css module 方案写样式。对于一个全新的项目，这样当然是可行，但是通常微前端架构更多的目标是解决<strong>存量/遗产</strong> 应用的接入问题。<strong>很显然遗产应用通常是很难有动力做大幅改造的</strong>。</p><p>最主要的是，约定的方式有一个无法解决的问题，假如子应用中使用了三方的组件库，三方库在写入了大量的<strong>全局样式</strong>的同时又不支持定制化前缀？比如 a 应用引入了 antd 2.x，而 b 应用引入了 antd 3.x，两个版本的 antd 都写入了全局的 <code>.menu class</code>，但又彼此不兼容怎么办？<a href="https://ant.design/components/config-provider-cn/" target="_blank" rel="noreferrer">antd</a></p></li><li><p>Dynamic Stylesheet</p><p><strong>动态 加载/卸载 样式表</strong></p><p>解决方案其实很简单，我们只需要在应用切出/卸载后，同时卸载掉其样式表即可，原理是浏览器会对所有的样式表的插入、移除做整个 CSSOM 的重构，从而达到 插入、卸载 样式的目的。这样即能保证，在一个时间点里，只有一个应用的样式表是生效的。</p><p>上文提到的 HTML Entry 方案则天生具备样式隔离的特性，因为应用卸载后会直接移除去 HTML 结构，从而自动移除了其样式表。</p><p>比如 HTML Entry 模式下，子应用加载完成的后的 DOM 结构可能长这样：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&lt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">html</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  &lt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">body</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    &lt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">main</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> id</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">=</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;subApp&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      // 子应用完整的 html 结构</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      &lt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">link</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> rel</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">=</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;stylesheet&quot;</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> href</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">=</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;//alipay.com/subapp.css&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      &lt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">div</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> id</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">=</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;root&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;....&lt;/</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">div</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    &lt;/</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">main</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  &lt;/</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">body</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&lt;/</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">html</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>当子应用被替换或卸载时，<code>subApp</code> 节点的 innerHTML 也会被复写，<code>//alipay.com/subapp.css</code> 也就自然被移除样式也随之卸载了。</p></li></ul></li><li><p>JS 隔离</p><p>基于proxy</p><p>解决了样式隔离的问题后，有一个更关键的问题我们还没有解决：如何确保各个子应用之间的全局变量不会互相干扰，从而保证每个子应用之间的软隔离？</p><p>这个问题比样式隔离的问题更棘手，社区的普遍玩法是给一些全局副作用加各种前缀从而避免冲突。但其实我们都明白，这种通过团队间的”口头“约定的方式往往低效且易碎，所有依赖人为约束的方案都很难避免由于人的疏忽导致的线上 bug。那么我们是否有可能打造出一个好用的且完全无约束的 JS 隔离方案呢？</p><p>针对 JS 隔离的问题，我们独创了一个运行时的 JS 沙箱。简单画了个架构图：</p><p><img src="https://s.pc.qq.com/tousu/img/20200916/1008611_1600242604.jpg" alt=""></p><p>即在应用的 bootstrap 及 mount 两个生命周期开始之前分别给全局状态打下快照，然后当应用切出/卸载时，将状态回滚至 bootstrap 开始之前的阶段，确保应用对全局状态的污染全部清零。而当应用二次进入时则再恢复至 mount 前的状态的，从而确保应用在 remount 时拥有跟第一次 mount 时一致的全局上下文。</p><p>当然沙箱里做的事情还远不止这些，其他的还包括一些对全局事件监听的劫持等，以确保应用在切出之后，对全局事件的监听能得到完整的卸载，同时也会在 remount 时重新监听这些全局事件，从而模拟出与应用独立运行时一致的沙箱环境。</p></li><li><p>资源预加载基座</p><p>在浏览器空闲时间预加载（fetch 跨域）未打开的子应用资源，加速子应用打开速度。</p></li></ul><h2 id="子应用的划分" tabindex="-1">子应用的划分 <a class="header-anchor" href="#子应用的划分" aria-label="Permalink to &quot;子应用的划分&quot;">​</a></h2><p>在微前端架构中，我们应该按业务划分出对应的子应用，而不是通过功能模块划分子应用。这么做的原因有两个：</p><ol><li>在微前端架构中，子应用并不是一个模块，而是一个独立的应用，我们将子应用按业务划分可以拥有更好的可维护性和解耦性。</li><li><code>**</code> 子应用应该具备独立运行的能力，防止应用间频繁的通信(减少耦合)</li></ol><h2 id="接入qiankun" tabindex="-1">接入qiankun <a class="header-anchor" href="#接入qiankun" aria-label="Permalink to &quot;接入qiankun&quot;">​</a></h2><h3 id="构建主应用基座" tabindex="-1">构建主应用基座 <a class="header-anchor" href="#构建主应用基座" aria-label="Permalink to &quot;构建主应用基座&quot;">​</a></h3><p>这里用vue作为主应用，接入其他的子应用</p><p>乾坤提供的<a href="https://qiankun.umijs.org/zh/api/" target="_blank" rel="noreferrer">API</a>,一共没几个，接入方式特别简单。</p><p>子应用注册信息</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// mic/micro-app-vue-main/src/micro/app.js</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// https://github.com/wkvictory/mic/blob/master/micro-app-vue-main/src/micro/apps.js#L20-L26</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> isProduction</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> process</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">env</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">NODE_ENV</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ===</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;production&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> isEnter</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> isProduction</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> ?</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;120.79.229.197&#39;</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> :</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;localhost&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> genActiveRule</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">routerPrefix</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // 返回 true 就激活了子应用</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  return</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}"> location</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> =&gt;</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> location</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">pathname</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">startsWith</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">routerPrefix</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> apps</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  /**</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">   * name: 微应用名称 - 具有唯一性</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">   * entry: 微应用入口 - 通过该地址加载微应用</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">   * container: 微应用挂载节点 - 微应用加载完成后将挂载在该节点上</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">   * activeRule: 浏览器url发生变化会调用这个函数，activeRule 返回 true 时表明该子应用需要被激活。</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">   * props 向子组件传递信息</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">   */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;ReactMicroApp&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    entry</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">\`//</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">\${</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">isEnter</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">}</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">:10100\`</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    container</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;#wrapper&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    activeRule</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">genActiveRule</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;/menu/react&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    props</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">data</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:[]},</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">];</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">export</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> default</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> apps</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>介入乾坤声明周期，错误捕获，导出启动函数</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// mic/micro-app-vue-main/src/micro/index.js</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// https://github.com/wkvictory/mic/blob/master/micro-app-vue-main/src/micro/index.js#L27</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">Notification</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">} </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;element-ui&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">/*进度条插件*/</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> NProgress</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;nprogress&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;nprogress/nprogress.css&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">  registerMicroApps</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">  addGlobalUncaughtErrorHandler</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">  start</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">  removeGlobalUncaughtErrorHandler</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">} </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;qiankun&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">/*子应用注册信息*/</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> apps</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;./apps&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">/**</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> * registerMicroApps</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> * </span><span style="${ssrRenderStyle({ "color": "#C678DD", "font-style": "italic" })}">@param</span><span style="${ssrRenderStyle({ "color": "#E5C07B", "font-style": "italic" })}">  {array}</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}"> apps</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> - 必选，子应用的一些注册信息</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> * </span><span style="${ssrRenderStyle({ "color": "#C678DD", "font-style": "italic" })}">@param</span><span style="${ssrRenderStyle({ "color": "#E5C07B", "font-style": "italic" })}">  {function}</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}"> lifeCycles</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> - 可选，全局的子应用生命周期钩子</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> * </span><span style="${ssrRenderStyle({ "color": "#C678DD", "font-style": "italic" })}">@param</span><span style="${ssrRenderStyle({ "color": "#E5C07B", "font-style": "italic" })}">  {object}</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}"> opts</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> - 可选</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> *            fetch - Function - 可选</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> *            getPublicPath - (url: string) =&gt; string - 可选</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> *            getTemplate - (tpl: string) =&gt; string - 可选</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> */</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">registerMicroApps</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">apps</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  /*qiankun 生命周期钩子 - 加载前*/</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  beforeLoad</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">app</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 加载子应用前，加载进度条</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    NProgress</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">start</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">();</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    NProgress</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">set</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">0.4</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">info</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">\`%c挂载前 </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">\${</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">app</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">name</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">}</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">\`</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">\`color:rgb(255, 208, 75);font-size:18px;\`</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">();</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  /*qiankun 生命周期钩子 - 挂载后*/</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  afterMount</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">app</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 加载子应用前，进度条加载完成</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    NProgress</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">done</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">();</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">info</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">\`%c挂载后 </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">\${</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">app</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">name</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">}</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">\`</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">\`color:rgb(255, 208, 75);font-size:18px\`</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">();</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">});</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">/**</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> * 添加全局的未捕获异常处理器</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">addGlobalUncaughtErrorHandler</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">((</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">event</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">  console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">error</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">event</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  const</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">message</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">msg</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">} </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> event</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  /*加载失败时提示*/</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">msg</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> &amp;&amp;</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> msg</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">includes</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;died in status LOADING_SOURCE_CODE&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    Notification</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      title</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;加载失败&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      message</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;子应用加载失败，请检查应用是否可运行&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      type</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;error&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">});</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">removeGlobalUncaughtErrorHandler</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">((</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">err</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">  console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">error</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;移除未捕获的错误&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">err</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  return</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> false</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">})</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">/*导出 qiankun 的启动函数*/</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">export</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> default</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> start</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br></div></div><p>然后在mainJs里面启动该函数主应用的任务就完成了。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// mic/micro-app-vue-main/src/main.js</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// https://github.com/wkvictory/mic/blob/master/micro-app-vue-main/src/main.js#L47</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> startQiankun</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;./micro&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">/*</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">* prefetch  预渲染</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">* singular  是否为 单实例 场景</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">* jsSandbox 是否开启沙箱  关闭后兼容IE（但要承担关掉沙箱后子应用之间可能造成冲突的风险）</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">* fetch     自定义的fetch方法</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">* */</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">startQiankun</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">singular</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">prefetch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>到这一步，我们的主应用基座就创建好啦！</p><h3 id="接入子应用" tabindex="-1">接入子应用 <a class="header-anchor" href="#接入子应用" aria-label="Permalink to &quot;接入子应用&quot;">​</a></h3><p>首先，我们在 <code>React</code> 的入口文件 <code>index.js</code> 中，导出 <code>qiankun</code> 主应用所需要的三个生命周期钩子函数，代码实现如下：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// mic/micro-app-react/src/index.jsx</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// https://github.com/wkvictory/mic/blob/master/micro-app-react/src/index.js#L46</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> React</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;react&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> ReactDOM</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;react-dom&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;./index.css&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> App</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;./App&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">ConfigProvider</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">} </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;antd&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> zhCN</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;antd/es/locale/zh_CN&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;moment/locale/zh-cn&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">/**</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> * 渲染函数</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> * 两种情况：主应用生命周期钩子中运行 / 微应用单独启动时运行</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> render</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">  ReactDOM</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">render</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    &lt;</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">ConfigProvider</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#D19A66", "font-style": "italic" })}">      autoInsertSpaceInButton</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">{</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#D19A66", "font-style": "italic" })}">      locale</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">{</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">zhCN</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">}</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      &lt;</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">App</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">/&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    &lt;/</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">ConfigProvider</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    document</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">getElementById</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;root&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  );</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 独立运行时，直接挂载应用</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">!</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">window</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">__POWERED_BY_QIANKUN__</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  render</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">();</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">/**</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> * bootstrap 只会在微应用初始化的时候调用一次，下次微应用重新进入时会直接调用 mount 钩子，不会再重复触发 bootstrap。</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> * 通常我们可以在这里做一些全局变量的初始化，比如不会在 unmount 阶段被销毁的应用级别的缓存等。</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">export</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> async</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> bootstrap</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">  console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;ReactMicroApp bootstraped&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">/**</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> * 应用每次进入都会调用 mount 方法，通常我们在这里触发应用的渲染方法</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> * props 是注册的时候传进来的</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">export</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> async</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> mount</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">props</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">  console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;ReactMicroApp mount&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">props</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  render</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">props</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">/**</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> * 应用每次 切出/卸载 会调用的方法，通常在这里我们会卸载微应用的应用实例</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">export</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> async</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> unmount</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">  console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;销毁&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">  ReactDOM</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">unmountComponentAtNode</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">document</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">getElementById</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;root&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">));</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div><p>在配置好了入口文件 <code>index.js</code> 后，我们还需要配置路由命名空间，以确保主应用可以正确加载微应用，代码实现如下：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// mic/micro-app-react/src/app.jsx</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// https://github.com/wkvictory/mic/blob/master/micro-app-react/src/App.js#L11</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> React</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;react&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// ....</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> BASE_NAME</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> window</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">__POWERED_BY_QIANKUN__</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> ?</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;/menu/react&quot;</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> :</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> App</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  return</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    &lt;</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">Provider</span><span style="${ssrRenderStyle({ "color": "#D19A66", "font-style": "italic" })}"> store</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">{</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">store</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">}</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      &lt;</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">Router</span><span style="${ssrRenderStyle({ "color": "#D19A66", "font-style": "italic" })}"> basename</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">{</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">BASE_NAME</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">}</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        &lt;</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">Switch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">          {</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">renderRoutes</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">routes</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">routes</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        &lt;/</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">Switch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      &lt;/</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">Router</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    &lt;/</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">Provider</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  );</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">export</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> default</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> App</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>接下来要配置webpack</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> path</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> require</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;path&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> packageName</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> require</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;./package.json&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">).</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">module</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">exports</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  webpack</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">config</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // https://webpack.js.org/configuration/output/#outputlibrary</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 微应用的包名，这里与主应用中注册的微应用名称一致</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    config</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">output</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">library</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> \`</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">\${</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">packageName</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">}</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">App\`</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 将你的 library 暴露为所有的模块定义下都可运行的方式</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // https://zhuanlan.zhihu.com/p/71168066</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    config</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">output</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">libraryTarget</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;umd&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // (懒加载)使异步加载的模块在多个不同的bundle内同步，设置为 webpackJsonp_VueMicroApp 即可</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    config</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">output</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">jsonpFunction</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> \`webpackJsonp_</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">\${</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">packageName</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">}</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">App\`</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    config</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">alias</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      ...</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">config</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">alias</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">      &quot;@&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">path</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">__dirname</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;src&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    };</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> config</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  devServer</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">configFunction</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> function</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">proxy</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">allowedHost</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">      const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> config</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> configFunction</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">proxy</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">allowedHost</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">      // 关闭主机检查，使微应用可以被 fetch</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">      config</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">disableHostCheck</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">      // 配置跨域请求头，解决开发环境的跨域问题</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">      config</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">headers</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">        &quot;Access-Control-Allow-Origin&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;*&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      };</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">      // 配置 history 模式</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">      config</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">historyApiFallback</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">      config</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">hot</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">      config</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">open</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> false</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;  </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 子应用设置false</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">      return</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> config</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    };</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><p>我们需要重点关注一下 <code>output</code> 选项，当我们把 <code>libraryTarget</code> 设置为 <code>umd</code> 后，我们的 <code>library</code> 就暴露为所有的模块定义下都可运行的方式了，主应用就可以获取到微应用的生命周期钩子函数了。</p><p>到这里，<code>React</code> 微应用就接入成功了！其他的技术栈接入方式大同小异，不在一一列举，具体看下方github。</p><h2 id="通信" tabindex="-1">通信 <a class="header-anchor" href="#通信" aria-label="Permalink to &quot;通信&quot;">​</a></h2><p><strong>示例：子应用跳转到另一个子应用（通过主应用做媒介）</strong></p><h3 id="基于浏览器原生事件做通信" tabindex="-1">基于浏览器原生事件做通信 <a class="header-anchor" href="#基于浏览器原生事件做通信" aria-label="Permalink to &quot;基于浏览器原生事件做通信&quot;">​</a></h3><p><a href="http://wkdevhub.cn/2020/08/28/workspace/Js/dispatchEvent/" target="_blank" rel="noreferrer">CustomEvent API 详情</a></p><p><strong>父应用</strong></p><p>首先，我们在主应用中初始化CustomEvent，挂载到window上，然后添加我们要传递的值：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// mic/micro-app-vue-main/src/app.vue</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">export</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> default</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">   mounted</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">      function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> createEvent</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">params</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">eventName</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;emit&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // 数据必须挂载到detail上</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        return</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> new</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> CustomEvent</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">eventName</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, {</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">detail</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">params</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">});</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">      // 初始化</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">      window</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">cEvt</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> createEvent</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">handelData</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">handelData</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">jumpUrl</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">jumpUrl</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">});</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    methods</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">      handelData</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(...</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">opt</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // 为了避免重新渲染 obj 可以放到外面声明</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">        this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">obj</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Object</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">assign</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">obj</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, ...</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">opt</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">obj</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">      jumpUrl</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">url</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // 跳转</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">        this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">$router</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">history</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">push</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">url</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p><strong>子应用</strong></p><p>然后子应用在函数中添加事件监听，执行跳转操作触发事件</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// mic/micro-app-react/src/pages/detail/index.jsx</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> React</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, {</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">Fragment</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">useEffect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">useRef</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">} </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;react&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> Index</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">props</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> msgRef</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> useRef</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">null</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  useEffect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(() </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    document</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">addEventListener</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;emit&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">queryData</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">      // 移除事件监听器</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">      document</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">removeEventListener</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;emit&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">queryData</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }, [])</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  const</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> queryData</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> ({</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">detail</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">handelData</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">jumpUrl</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}}) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">handelData</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">msg</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">msgRef</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">current</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}));</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    jumpUrl</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;/menu/vue/list&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  const</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> dispatchData</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">msg</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    msgRef</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">current</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> msg</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    /* 触发自定义事件 通信*/</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    document</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">dispatchEvent</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">window</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">cEvt</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  return</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    &lt;</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">Fragment</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">       &lt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">h2</span><span style="${ssrRenderStyle({ "color": "#D19A66", "font-style": "italic" })}"> onClick</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">{</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">dispatchData</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;wk&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">}</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;跳转&lt;/</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">h2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    &lt;/</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">Fragment</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  )</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">export</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> default</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> Index</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p><strong>别忘了移除事件监听器</strong></p><p>为了防止子应用独立运行的时候报错需要在子应用加载的时候加上错误提示。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// mic/micro-app-react/src/index.jsx</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 独立运行时，直接挂载应用</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">!</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">window</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">__POWERED_BY_QIANKUN__</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> createEvent</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">params</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">eventName</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;emit&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> new</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> CustomEvent</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">eventName</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, {</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">detail</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">params</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">});</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">  window</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">cEvt</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> createEvent</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    handelData</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">error</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;不能运行&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    jumpUrl</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">error</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;不能运行&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  })</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  render</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">();</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>这种优势就是纯原生方便包装，使用简单，适合简单的通信。</p><h3 id="基于qiankun提供的api" tabindex="-1">基于qiankun提供的API <a class="header-anchor" href="#基于qiankun提供的api" aria-label="Permalink to &quot;基于qiankun提供的API&quot;">​</a></h3><p><code>qiankun</code> 内部提供了 <code>initGlobalState</code> 方法用于注册 <code>MicroAppStateActions</code> 实例用于通信，该实例有三个方法，分别是：</p><ul><li><code>setGlobalState</code>：设置 <code>globalState</code> - 设置新的值时，内部将执行 <code>浅检查</code>，如果检查到 <code>globalState</code> 发生改变则触发通知，通知到所有的 <code>观察者</code> 函数。</li><li><code>onGlobalStateChange</code>：注册 <code>观察者</code> 函数 - 响应 <code>globalState</code> 变化，在 <code>globalState</code> 发生改变时触发该 <code>观察者</code> 函数。</li><li><code>offGlobalStateChange</code>：取消 <code>观察者</code> 函数 - 该实例不再响应 <code>globalState</code> 变化</li></ul><p><strong>主应用</strong></p><p>首先，我们在主应用中注册一个 <code>MicroAppStateActions</code> 实例并导出，代码实现如下：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// mic/micro-app-vue-main/src/shared/actions.ts</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">initGlobalState</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">} </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;qiankun&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> router</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;@/router&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> initialState</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  jumpUrl</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">url</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    router</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">history</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">push</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">url</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">};</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> actions</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> initGlobalState</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">initialState</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">export</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> default</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> actions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>在注册 <code>MicroAppStateActions</code> 实例后，我们在需要通信的组件中使用该实例，并注册 <code>观察者</code> 函数</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// mic/micro-app-vue-main/src/app.vue</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> actions</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;@/shared/actions&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">export</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> default</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">   mounted</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">     actions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">onGlobalStateChange</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">((</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">state</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">prevState</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // state: 变更后的状态; prevState: 变更前的状态</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">        console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;主应用观察者：改变前的 &quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">prevState</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">        console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;主应用观察者：改变后的 &quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">state</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      }, </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">     // 第二个参数表示立即执行</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><strong>子应用</strong></p><p>我们首先来改造我们的 <code>Vue</code> 子应用，首先我们设置一个 <code>Actions</code> 实例，代码实现如下：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// mic/micro-app-vue-main/src/shared/actions.js</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> emptyAction</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">  console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">warn</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;当前执行的actions为空!&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">class</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Actions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // 默认值为空 Action</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">  actions</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    onGlobalStateChange</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">emptyAction</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    setGlobalState</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">emptyAction</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  };</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // 设置 actions</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  setActions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">actions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">actions</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> actions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // 映射</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  onGlobalStateChange</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(...</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">args</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">actions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">onGlobalStateChange</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(...</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">args</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // 映射</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  setGlobalState</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(...</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">args</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">actions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">setGlobalState</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(...</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">args</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> actions</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> new</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> Actions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">();</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">export</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> default</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> actions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>我们创建 <code>actions</code> 实例后，我们需要为其注入真实 <code>Actions</code>。我们在入口文件 <code>main.js</code> 的 <code>render</code> 函数中注入，代码实现如下：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// mic/micro-app-vue-main/src/main.js</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> render</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">props</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) { </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// mount方法传递进来的</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">props</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 注入 actions 实例, 不需要在入口额外引入，乾坤自己集成的</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    actions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">setActions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">props</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">  router</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> new</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> VueRouter</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 运行在主应用中时，添加路由命名空间 /vue</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    base</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">window</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">__POWERED_BY_QIANKUN__</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> ?</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;/menu/vue&quot;</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> :</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;/&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    mode</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;history&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    routes</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  });</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> // 解决ElementUI导航栏中的vue-router在3.0版本以上重复点菜单报错问题</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> originalPush</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> VueRouter</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">prototype</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">push</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">  VueRouter</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">prototype</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">push</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> push</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">location</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> originalPush</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">call</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">location</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">).</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">catch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">err</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> =&gt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> err</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // 挂载应用</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">  instance</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> new</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> Vue</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    router</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    store</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    render</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">h</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> h</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">App</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }).</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">$mount</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;#app&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>然后在列表页引入当前的actions，执行跳转的方法:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// /mic/micro-app-vue/src/shared/actions.js</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> actions</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;@/shared/actions&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">export</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> default</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    data</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">      return</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        jumpUrl</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">null</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    inject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;reload&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    created</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">      this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">$nextTick</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">queryList</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    mounted</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">      actions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">onGlobalStateChange</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">((</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">state</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">        this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">jumpUrl</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> state</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">jumpUrl</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      }, </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    methods</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">      jumpReactDetail</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">options</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">        this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">jumpUrl</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">\`/menu/react/detail/</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">\${</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">options</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">id</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">}</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">\`</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>这种的优势就是轻量，官方自带，适合业务划分清晰，比较简单的微前端应用</p><h3 id="基于redux" tabindex="-1">基于redux <a class="header-anchor" href="#基于redux" aria-label="Permalink to &quot;基于redux&quot;">​</a></h3><p>基于 <code>qiankun</code> 提供的通信方案也存在一些优缺点，优点如下：</p><ol><li>使用简单；</li><li>官方支持性高；</li><li>适合通信较少的业务场景；</li></ol><p>缺点如下：</p><ol><li>子应用独立运行时，需要额外配置无 <code>qiankun</code> 时的逻辑； redux 版可以直接引入且独立运行。</li><li>由于状态池无法跟踪，通信场景较多时，容易出现状态混乱、维护困难等问题；</li></ol><p><strong>父应用</strong></p><p>首先我们需要在主应用中创建 <code>store</code> 用于管理全局状态池</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// mic/micro-app-vue-main/src/shared/store.js</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">createStore</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">} </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;redux&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> router</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;@/router&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> initialState</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  jumpUrl</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">url</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    router</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">history</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">push</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">url</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">  detail</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">};</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 多个reducer用combineReducers合并</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> reducer</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">state</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> initialState</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">action</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  switch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">action</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">type</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    default</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">      return</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> state</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    case</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;SET_DETAIL&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">      return</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        ...</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">state</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        detail</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">action</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">payload</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      };</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">};</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> store</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> createStore</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">reducer</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">export</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> default</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> store</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>然后，我们需要将 <code>store</code> 实例通过 <code>props</code> 传递给子应用，代码实现如下：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// mic/micro-app-vue-main/src/micro/app.js</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> store</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;@/shared/store&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> apps</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;ReactMicroApp&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    entry</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">\`//</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">\${</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">isEnter</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">}</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">:10100\`</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    container</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;#wrapper&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    activeRule</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">genActiveRule</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;/menu/react&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 通过 props 将 shared 传递给子应用</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    props</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">store</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">},</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;VueMicroApp&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    entry</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">\`//</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">\${</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">isEnter</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">}</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">:10200\`</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    container</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;#wrapper&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    activeRule</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">genActiveRule</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;/menu/vue&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    props</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">store</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">},</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">];</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">export</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> default</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> apps</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p><strong>子应用</strong></p><p>子应用一般会有自己的状态管理，主应用通信的也不多，所以直接简单处理提示下就行了。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// mic/micro-app-react/src/shared/store.js</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> emptyRedux</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">  console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">warn</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;当前执行的redux不存在!&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">class</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Store</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">  actions</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    dispatch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">emptyRedux</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    getState</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">emptyRedux</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    replaceReducer</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">emptyRedux</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    subscribe</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">emptyRedux</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  };</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // 重载</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  setStore</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">actions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">actions</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> actions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  dispatch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(...</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">args</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">actions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">dispatch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(...</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">args</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  getState</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">actions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">getState</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">() </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">||</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">      jumpUrl</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {} </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 这里redux传进来的方法，不然子应用单独打开运行会报错</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    };</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  replaceReducer</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(...</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">args</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">actions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">replaceReducer</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(...</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">args</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  subscribe</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(...</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">args</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">actions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">subscribe</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(...</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">args</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> store</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> new</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> Store</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">();</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">export</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> default</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> store</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><p>然后在入口文件处注入<code>store</code></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// mic/micro-app-react/src/pages/app.jsx</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> React</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;react&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> ReactDOM</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;react-dom&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> render</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">props</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">props</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> &amp;&amp;</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> props</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">store</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 注入redux 实例</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    store</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">setStore</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">props</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">store</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">  ReactDOM</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">render</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      &lt;</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">App</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">/&gt;,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    document</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">getElementById</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;root&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  );</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>然后在项目中就可以直接引入使用了</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// mic/micro-app-react/src/pages/detail/index.jsx</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> React</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, {</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">Fragment</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">useEffect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">} </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;react&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> store</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;@/shared/store&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> Index</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">props</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  useEffect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(()</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 返回值是取消订阅</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> unSubscribe</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> store</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">subscribe</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(() </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">      // 注册订阅函数</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">      console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">store</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">getState</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(), </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;订阅方法&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    })</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> ()</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">      unSubscribe</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">()</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  },[])</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  const</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> dispatchRedux</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    store</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">dispatch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      type</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;SET_DETAIL&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      payload</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">data</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">3</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">4</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">], </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">kkk</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">121</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  const</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> jumpUrl</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    store</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">getState</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">().</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">jumpUrl</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;/menu/vue/table-detail&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  return</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    &lt;</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">Fragment</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">       &lt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">h2</span><span style="${ssrRenderStyle({ "color": "#D19A66", "font-style": "italic" })}"> onClick</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">{</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">jumpUrl</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">}</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;跳转&lt;/</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">h2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">			 &lt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">h2</span><span style="${ssrRenderStyle({ "color": "#D19A66", "font-style": "italic" })}"> onClick</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">{</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">dispatchRedux</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">}</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;修改&lt;/</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">h2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    &lt;/</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">Fragment</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  )</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">export</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> default</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> Index</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>这种的优势就是避免状态随意污染，而且redux提供状态跟踪的插件，适合较为复杂的微前端应用。</p><h2 id="项目部署" tabindex="-1">项目部署 <a class="header-anchor" href="#项目部署" aria-label="Permalink to &quot;项目部署&quot;">​</a></h2><p>由于 qiankun 是通过 fetch 去获取子应用的引入的静态资源的，所以必须要求这些静态资源支持跨域</p><p>如果是自己的脚本，可以通过开发服务端跨域来支持。如果是三方脚本且无法为其添加跨域头，可以将脚本拖到本地，由自己的服务器 serve 来支持跨域。</p><p><strong>子应用nginx处添加 Access-Control-Allow-Origin，如果不想设置 ‘*’，也可以指定对多个ip开放中间逗号隔开就好。</strong></p><p><strong>需要注意的一个有关CORS的点：</strong></p><blockquote><p>对于附带身份凭证的请求(即服务器设置<strong>Access-Control-Allow-Credentials: true</strong>)，服务器不得设置 Access-Control-Allow-Origin 的值为“*”，则请求将会失败(不能携带cookie)。</p></blockquote><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">server</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        listen </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">10200</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"># 监听端口</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        server_name </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">120.79.229.197</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> ; </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"># 请求到达的服务器名</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        index </span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">index.html index.htm index.php default.html default.htm default.php;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        root </span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">/home/wwwroot/mic200.wkdevhub.cn/dist; </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"># 指定运行路径</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        location</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> / {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            try_files </span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">$</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">uri</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> $</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">uri</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">/ /index.html; </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"># 重定向</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> ($</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">request_method</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> = </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;OPTIONS&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">              add_header </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;Access-Control-Allow-Origin&#39;</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;*&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">              add_header </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;Access-Control-Allow-Methods&#39;</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;GET, POST, OPTIONS&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">              add_header </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;Access-Control-Allow-Headers&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">              &#39;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">              add_header </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;Access-Control-Max-Age&#39;</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 1728000</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">              add_header </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;Content-Type&#39;</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;text/plain charset=UTF-8&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">              add_header </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;Content-Length&#39;</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">              return</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 204</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> ($</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">request_method</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> = </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;POST&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">              add_header </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;Access-Control-Allow-Origin&#39;</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;*&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">              add_header </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;Access-Control-Allow-Methods&#39;</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;GET, POST, OPTIONS&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">              add_header </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;Access-Control-Allow-Headers&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">              &#39;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> ($</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">request_method</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> = </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;GET&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">              add_header </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;Access-Control-Allow-Origin&#39;</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;*&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">              add_header </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;Access-Control-Allow-Methods&#39;</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;GET, POST, OPTIONS&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">              add_header </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;Access-Control-Allow-Headers&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">              &#39;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            }</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        include </span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">rewrite/none.conf;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        include </span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">enable-php.conf;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        location</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> ~ .*\\.(gif|jpg|jpeg|png|bmp|swf)$</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">            # 静态图片 允许跨域请求</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            add_header </span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">Access-Control-Allow-Origin </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;*&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            add_header </span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">Access-Control-Allow-Headers X-Requested-With;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            add_header </span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">Access-Control-Allow-Methods GET,POST,OPTIONS;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            expires </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">30d</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        location</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> ~ .*\\.(js|css)?$</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">            # 允许跨域请求</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            add_header </span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">Access-Control-Allow-Origin </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;*&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            add_header </span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">Access-Control-Allow-Headers X-Requested-With;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            add_header </span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">Access-Control-Allow-Methods GET,POST,OPTIONS;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            expires </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">12h</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        location</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> ~ </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/.well-known </span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">       		allow </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">all</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        location</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> ~ /\\.</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">       		 eny</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> all</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">       	access_log </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">off</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br></div></div><h2 id="配置中心" tabindex="-1">配置中心 <a class="header-anchor" href="#配置中心" aria-label="Permalink to &quot;配置中心&quot;">​</a></h2><p>版本管理、监控方案（埋点） 、 回滚方案</p><h2 id="源码解析" tabindex="-1">源码解析 <a class="header-anchor" href="#源码解析" aria-label="Permalink to &quot;源码解析&quot;">​</a></h2><p>本地代码注释，没来及摘抄出来</p><p>此处是 miacro-app 源码，跟乾坤原理大致相同</p><h3 id="渲染原理" tabindex="-1">渲染原理 <a class="header-anchor" href="#渲染原理" aria-label="Permalink to &quot;渲染原理&quot;">​</a></h3><p>架构思路为：<strong><a href="https://developer.mozilla.org/zh-CN/docs/Web/Web_Components/Using_custom_elements" target="_blank" rel="noreferrer">CustomElement</a> + HTMLEntry</strong>。</p><p>渲染大致流程：</p><ol><li>使用类 webcomponent 创建一个容器，name 和 url 是必须传的，后续子应用所有的元素都放到这个里面</li><li>然后在 webcomponent 自带的生命周期（<code>connectedCallback</code>），去加载子应用</li><li>创建微应用的实例，请求html，然后获取到一些静态资源的请求地址</li><li>根据静态资源地址请求静态资源遍历处理，请求完毕后进行渲染，此时css隔离和沙箱等流程开启</li><li>离开应用的时候会自动执行生命周期函数<code>disconnectedCallback</code>，此时会卸载相关操作</li></ol><p>注意： 一个页面只能有一个head标签，body也尽可能的保持一个，所以获取到的html ,会进行head和body的额外处理（qiankun是直接干掉了）。</p><h3 id="js沙箱" tabindex="-1">Js沙箱 <a class="header-anchor" href="#js沙箱" aria-label="Permalink to &quot;Js沙箱&quot;">​</a></h3><p>js沙箱流程：</p><p>乾坤早期是修改当前的window，然后离开在灰度有添加或者修改的值，保存好修改添加的值下次再进来重新赋值防止再次遍历。后来被优化掉了，直接使用监听的对象，对监听的对象赋值。</p><ol><li>Proxy监听一个空对象，取值的时候，先在当前对象下找没有的话就去window</li><li>赋值的时候先在当前的 target 下赋值，然后记录下来，应用离开的时候清空</li><li>更改应用中js的作用域</li><li>重写全局事件 addEventListener、removeEventListener（window、document）、 setInterval、setTimeout、clearInterval、clearTimeout</li></ol><p><strong>核心源码</strong></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">class</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> SandBox</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">  active</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> false</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> // 沙箱是否在运行</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">  microWindow</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {} </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 代理的对象</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">  injectedKeys</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> new</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> Set</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">() </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 新添加的属性，在卸载时清空</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  constructor</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> () {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">proxyWindow</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> new</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> Proxy</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">microWindow</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">      // 取值</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">      get</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">target</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">key</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // 优先从代理对象上取值</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">Reflect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">has</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">target</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">key</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">          return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Reflect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">get</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">target</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">key</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // 否则兜底到window对象上取值</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> rawValue</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Reflect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">get</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">window</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">key</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // 其它情况直接返回</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        return</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> rawValue</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">      // 设置变量</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">      set</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">target</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">key</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">value</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // 沙箱只有在运行时可以设置变量</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">active</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">          Reflect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">set</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">target</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">key</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">value</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">          // 记录添加的变量，用于后续清空操作</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">          this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">injectedKeys</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">add</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">key</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        return</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> true</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">      deleteProperty</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">target</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">key</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // 当前key存在于代理对象上时才满足删除条件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">target</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">hasOwnProperty</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">key</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">          return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Reflect</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">deleteProperty</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">target</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">key</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        return</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> true</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    })</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><p>沙箱的开启是在 创建微应用的时候开启，在 <code>mount</code> 函数里面执行，<code>unmount</code> 里面卸载</p><h4 id="更改作用域" tabindex="-1">更改作用域 <a class="header-anchor" href="#更改作用域" aria-label="Permalink to &quot;更改作用域&quot;">​</a></h4><p>大致进化结果就是这样</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">window</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">self</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">window</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">})({</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;wk&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">})</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">window</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">self</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">window</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // console.log(name)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}).</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">call</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;wk&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">},{</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;wk&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">})</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 终极</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">window</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">self</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">   with</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">window</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">   }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}).</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">call</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;wk&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">},{</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;wk&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="样式隔离" tabindex="-1">样式隔离 <a class="header-anchor" href="#样式隔离" aria-label="Permalink to &quot;样式隔离&quot;">​</a></h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/CSSRule" target="_blank" rel="noreferrer">CSSRule</a></p><p>bem cssmodules 这些东西不能用人来解决，一定要依赖平台化的一些治理工具</p><p>css隔离流程：</p><ol><li>html字符串转换为DOM结构后、或者将link元素转换为style元素调用<code>scopedCSS</code>方法，并将style元素作为参数传入</li><li>利用CSSRules 将style元素创建 CSSStyleList 样式表，然后 CSS 样式表包含了一组表示规则的CSSRule对象</li><li>然后遍历每一个 CSSStyleList 样式表，匹配每个符合规则的选择器前加上前缀<code>micro-app[name=xxx]</code></li><li>然后将修改后的样式，添加到创建的 style 内</li><li>监听style的元素变化，防止插入新的样式然后在进行隔离处理</li></ol><p>将link标签引入的远程css文件转换为style标签，所以子应用只会存在style标签，实现样式隔离的方式就是在style标签的每一个CSS规则前面加上<code>micro-app[name=xxx]</code>的前缀，让所有CSS规则都只能影响到指定元素内部。</p><p>所以cssRules就是由单个CSS规则组成的列表，我们只需要遍历规则列表，并在每个规则的选择器前加上前缀<code>micro-app[name=xxx]</code>，就可以将当前style样式的影响限制在micro-app元素内部。</p><p>防止开发者动态修改样式表，使用<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver" target="_blank" rel="noreferrer">MutationObserver</a>监听style元素的变化</p><p><strong>核心代码</strong></p><p><img src="https://tva1.sinaimg.cn/large/008i3skNly1guyqgjk03oj60oi0cydi102.jpg" alt=""></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">window</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">onload</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> link</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> document</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">getElementsByTagName</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;link&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)[</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">];</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 获取 ruleStyleList 样式表</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> getStyleList</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">element</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> styleSheet</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> element</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">sheet</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ||</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> element</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">styleSheet</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> styleSheet</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">cssRules</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ||</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> styleSheet</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">rules</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> rules</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> getStyleList</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">link</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">); </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 创建 StyleList样式表</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 渲染隔离后的 css</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> runStyle</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> templateStyle</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> document</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">createElement</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;style&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">  templateStyle</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">id</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;templateStyle&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">  templateStyle</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">textContent</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> scopedRule</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">rules</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;micro-app[name=wk]&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">  document</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">body</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">appendChild</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">templateStyle</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // 设置样式表无效，防止对应用造成影响</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // templateStyle.sheet.disabled = true</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">  link</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">parentNode</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">removeChild</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">link</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">); </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 删除之前link 的样式</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">runStyle</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">()</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> scopedRule</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">rules</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">prefix</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> result</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // 遍历rules，处理每一条规则</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  for</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> rule</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> of</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> rules</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    switch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">rule</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">type</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">      case</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// STYLE_RULE</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        result</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> +=</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> scopedStyleRule</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">rule</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">prefix</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        break</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">      default</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        result</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> +=</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> rule</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">cssText</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        break</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  return</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> result</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> scopedStyleRule</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">rule</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">prefix</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // 获取CSS规则对象的选择和内容</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  const</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">selectorText</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">cssText</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">} </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> rule</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">^</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">((html</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">\\s</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">&gt;~,]+</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">body)</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">(html</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">body</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">:root))</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">$</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">selectorText</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> cssText</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">replace</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">^</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">((html</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">\\s</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">&gt;~,]+</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">body)</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">(html</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">body</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">:root))/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">prefix</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  } </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">else</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">selectorText</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ===</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;*&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // return cssText.replace(&#39;*&#39;, \`\${prefix} *\`)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> cssText</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">replace</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;*&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">\`*\`</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> builtInRootSelectorRE</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">^</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">\\s</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">+</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">)((html</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">\\s</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">&gt;~]+</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">body)</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">(html</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">body</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">:root))(?=</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">\\s</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">&gt;~]+</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">$</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">)/</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // 匹配查询选择器</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> cssText</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">replace</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">^</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">\\s\\S</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">]+</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">{/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">selectors</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> selectors</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">replace</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">^</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">,)(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">^</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">,]+</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">)/</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">g</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">all</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">$1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">$2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">      // 如果含有顶层选择器，需要单独处理</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">      if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">builtInRootSelectorRE</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">$2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // body[name=xx]|body.xx|body#xx 等都不需要转换</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> all</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">replace</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">builtInRootSelectorRE</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">prefix</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">      // 在选择器前加上前缀</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">      return</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> \`</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">\${</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">$1</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">}</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> \${</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">prefix</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">}</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> \${</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">$2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">replace</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">^</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">\\s</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">*</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">}</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">\`</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    })</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  })</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br></div></div><h2 id="参考文档" tabindex="-1">参考文档 <a class="header-anchor" href="#参考文档" aria-label="Permalink to &quot;参考文档&quot;">​</a></h2><p><a href="https://zhuanlan.zhihu.com/p/78362028" target="_blank" rel="noreferrer">蚂蚁 有知(乾坤) 沙盒内容</a></p><p><a href="https://juejin.im/post/6844904158085021704?utm_source=gold_browser_extension" target="_blank" rel="noreferrer">基于 qiankun 的微前端最佳实践（万字长文） - 从 0 到 1 篇</a></p><p><a href="https://github.com/a1029563229/micro-front-template/tree/feature-inject-sub-apps" target="_blank" rel="noreferrer">微前端架构模板</a></p><p><a href="https://github.com/single-spa/single-spa" target="_blank" rel="noreferrer">微服务的JavaScript框架 single-spa</a></p><p><a href="https://qiankun.umijs.org/zh" target="_blank" rel="noreferrer">乾坤文档</a></p><p><a href="https://zhuanlan.zhihu.com/p/141576317" target="_blank" rel="noreferrer">一些关于微前端的文章</a></p><p><a href="https://xiaomi-info.github.io/2020/04/14/fe-microfrontends-practice/" target="_blank" rel="noreferrer">微前端在小米 CRM 系统的实践</a></p><p><a href="https://v.youku.com/v_show/id_XNDUwNTc0MTUwNA==.html?spm=a2hbt.13141534.app.5~5!2~5!2~5~5~5!2~5~5!2~5!2~5!2~5~5!19~A" target="_blank" rel="noreferrer">d2峰会 微前端视频有三篇</a></p></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("workspace/Frame/micro-app/mic.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const mic = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  mic as default
};
