import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"Webpack的使用","description":"","frontmatter":{},"headers":[],"relativePath":"workspace/Webpack/use.md","filePath":"workspace/Webpack/use.md","lastUpdated":1715005148000}');
const _sfc_main = { name: "workspace/Webpack/use.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="webpack的使用" tabindex="-1">Webpack的使用 <a class="header-anchor" href="#webpack的使用" aria-label="Permalink to &quot;Webpack的使用&quot;">​</a></h1><h2 id="优化速度" tabindex="-1">优化速度 <a class="header-anchor" href="#优化速度" aria-label="Permalink to &quot;优化速度&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">1.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">异步加载模块</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">2.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">提取第三库</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">3.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">代码压缩</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">4.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">去除不必要的插件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">5.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">图片base64</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">6.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">按需加载</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">7.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">开启Gzip压缩</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">8.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">多进程打包</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="splitchunks分割拆包" tabindex="-1">splitChunks分割拆包 <a class="header-anchor" href="#splitchunks分割拆包" aria-label="Permalink to &quot;splitChunks分割拆包&quot;">​</a></h2><h3 id="chunk-vendors-js-简介" tabindex="-1">chunk-vendors.js 简介 <a class="header-anchor" href="#chunk-vendors-js-简介" aria-label="Permalink to &quot;chunk-vendors.js 简介&quot;">​</a></h3><p>顾名思义，chunk-vendors.js 是捆绑所有不是自己的模块，而是来自其他方的模块的捆绑包，它们称为 <strong>第三方模块或供应商模块</strong>。</p><p>通常，它意味着（仅和）来自项目 /node_modules 目录的所有模块，会将所有 /node_modules 中的第三方包打包到 chunk-vendors.js 中。</p><p>将所有的第三方包集中到一个文件，自然也会出现文件过大的问题。</p><ul><li>Webpack4之SplitChunksPlugin</li><li>Webpack3的CommonsChunkPlugin（已废弃）</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//自己项目的配置</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    splitChunks</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      chunks</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;all&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      minSize</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">30000</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//分离后的最小块文件大小，单位为字节</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      maxSize</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      minChunks</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//分离前，该块被引入的次数（也就是某个js文件通过import或require引入的次数）</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      maxAsyncRequests</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">5</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//内层文件（第二层）按需加载时最大的并行加载数量</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      maxInitialRequests</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">3</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//一个入口文件可以并行加载的最大文件数量</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      automaticNameDelimiter</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;~&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//修改上文中的 “~” ,  若改为： “-” 则分离后的js默认命名规则为 [来源]-[入口的key值].js</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//用以控制分离后代码块的命名，当存在匹配的缓存组（后面会说到）时，命名使用缓存组中的name值，若不存在则为  [来源]~[入口的key值].js  的格式</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      cacheGroups</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//名字叫做缓存组，其实就是存放分离代码块的规则的对象，叫做cacheGroup的原因是webpack会将规则放置在cache流中，为对应的块文件匹配对应的流，从而生成分离后的块。</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">      // 抽取所有CSS为一个文件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">      // https://webpack.js.org/plugins/mini-css-extract-plugin/#extracting-all-css-in-a-single-file</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      styles</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: { </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;styles&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">css</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">$</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">chunks</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;all&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">enforce</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">      // 第三方组件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      common</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;common&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        chunks</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;all&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//chunks :匹配的块的类型：initial（初始块），async（按需加载的异步块），all（所有块）</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">/]</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">node_modules</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">/]</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">(react</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">react-dom</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">react-router</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">react-router-dom)</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">/]</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        priority</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">10</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        enforce</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        reuseExistingChunk</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> // 可设置是否重用该chunk</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">      // 指定组件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      antd</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;antd&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        chunks</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;all&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">/]</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">node_modules</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">/]</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">(@ant-design</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">antd)</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">/]</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        priority</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">10</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        enforce</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        reuseExistingChunk</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> // 可设置是否重用该chunk</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      excel</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;excel&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        chunks</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;all&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">/]</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">node_modules</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">/]</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">(js-export-excel)</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">/]</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        priority</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">20</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        enforce</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        reuseExistingChunk</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> // 可设置是否重用该chunk</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">       echarts</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">          name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;echarts&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">          chunks</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;async&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,  </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//设置异步导入，什么时候用什么时候导入</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">          test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">/]</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">node_modules</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">/]</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">(echarts</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">echarts-for-react)</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">/]</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">          priority</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">80</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">          enforce</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">          reuseExistingChunk</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> // 可设置是否重用该chunk</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    runtimeChunk</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;manifest&quot;</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  //用于管理被分出来的包，优化持久化缓存的,如果不设置这个的话，一旦代码有变动的话，main.js的hash就会发生变化,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // optimization.runtimeChunk 就是告诉 webpack 是否要把这变化的部分单独打包出来</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div><p><img src="https://tva1.sinaimg.cn/large/e6c9d24egy1h3bm2vwy9uj212q0d075s.jpg" alt=""></p><h3 id="记一次拆包遇到的坑" tabindex="-1">记一次拆包遇到的坑 <a class="header-anchor" href="#记一次拆包遇到的坑" aria-label="Permalink to &quot;记一次拆包遇到的坑&quot;">​</a></h3><p>最近一个需求把页面多处 bn.js 分割出来，抽离到一个单独的js中，使用 SplitChunksPlugin 做了分割之后，发一个一个问题 如下图 <img src="https://book.img.zhangyue01.com/idc_1/group61/M00/19/B2/CmQUOGOuqsCEBEBUAAAAAHJAJt871789693.jpeg?v=x8YRy3aL&amp;t=CmQUOGOuqsA." alt="image-20220617223038058"></p><p>最后定位到的问题是因为项目中用了 crypto-js 加密组件，这个模块存在一个bug导致webpack会把原生crypto模块打包进来，导致项目 polyfile 后包的体积大了400多k。跑题了，为什么出现 bn.js 抽离后还是冗余在一起的问题</p><p>cryptojs 兼容 nodeJs 的写法 既可以在浏览器中使用也可以在服务端使用，间接导致出现很多个 bn.js。</p><p>直接抽离会有上图bug,因为有的包在node环境下webpack不认 会导致一个bn.js被抽离多次。解决办法就是统一出口，统一用一个bn.js 包然后在进行分割。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 第一步 设置成一个出口 resolve</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">alias</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">  &#39;bn.js&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">path</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">process</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">cwd</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(), </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;node_modules&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;bn.js&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//  然后在抽离出来 SplitChunksPlugin</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> bn</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">   name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;bnjs&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">   chunks</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;initial&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">   test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">/]</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">node_modules</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">/]</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">(bn.js)</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\\\</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">/]</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">   priority</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">   enforce</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">   reuseExistingChunk</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> },</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>做到这里还没完，不然项目启动的时候会出现白屏的情况。 需要把分割后的 chunk-bnjs 引入到 HtmlWebpackPlugin 的 chunk 中.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">new</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> HtmlWebpackPlugin</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    ... </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    chunks</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;manifest&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;chunk-bnjs&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]   </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>vue-cli 直接在 pages 对象中添加即可.</p><p><strong>参考资料</strong></p><p><a href="https://github.com/brix/crypto-js/issues/276" target="_blank" rel="noreferrer">https://github.com/brix/crypto-js/issues/276</a></p><p><a href="https://github.com/NervJS/taro/issues/8169" target="_blank" rel="noreferrer">https://github.com/NervJS/taro/issues/8169</a></p><p><a href="https://github.com/TencentCloudBase/cloudbase-js-sdk/issues/1" target="_blank" rel="noreferrer">https://github.com/TencentCloudBase/cloudbase-js-sdk/issues/1</a></p><h2 id="外部扩展-externals" tabindex="-1">外部扩展(Externals) <a class="header-anchor" href="#外部扩展-externals" aria-label="Permalink to &quot;外部扩展(Externals)&quot;">​</a></h2><p>externals 配置选项提供了「从输出的 bundle 中排除依赖」的方法。相反，所创建的 bundle 依赖于那些存在于用户环境(consumer&#39;s environment)中的依赖。</p><p>此功能通常对 library 开发人员来说是最有用的，然而也会有各种各样的应用程序用到它。</p><p><strong>防止将某些 import 的包(package)打包到 bundle 中，而是在运行时(runtime)再去从外部获取这些扩展依赖</strong></p><p>例如，从 CDN 引入 <a href="https://jquery.com/" target="_blank" rel="noreferrer">jQuery</a>，而不是把它打包：</p><p><strong>index.html</strong></p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&lt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">script</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#D19A66" })}">  src</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">=</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;https://code.jquery.com/jquery-3.1.0.js&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#D19A66" })}">  integrity</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">=</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;sha256-slogkvB1K3VOkzAI8QITxV3VzpOnkeNVsKvtkYLMjfk=&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#D19A66" })}">  crossorigin</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">=</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;anonymous&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;&lt;/</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">script</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>webpack.config.js</strong></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">module</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">exports</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  //...</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">  externals</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    jquery</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;jQuery&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>这样就剥离了那些不需要改动的依赖模块，换句话，下面展示的代码还可以正常运行：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> $</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;jquery&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">$</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;.my-element&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">).</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">animate</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">/* ... */</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>上面 <code>webpack.config.js</code> 中 <code>externals</code> 下指定的属性名称 <code>jquery</code> 表示 <code>import $ from &#39;jquery&#39;</code> 中的模块 <code>jquery</code> 应该从打包产物中排除。 为了替换这个模块，<code>jQuery</code> 值将用于检索全局 <code>jQuery</code> 变量，因为默认的外部库类型是 <code>var</code></p><h3 id="externals-高级配置" tabindex="-1">externals 高级配置 <a class="header-anchor" href="#externals-高级配置" aria-label="Permalink to &quot;externals 高级配置&quot;">​</a></h3><p>上面的 externals 配置都是用的是简单的对象，key 和 value 都是字符串，其实相当于</p><p><img src="https://pic4.zhimg.com/80/v2-b2a45ab76f7ae9a3decfa7613a9a263b_1440w.webp" alt="img"></p><ul><li><strong>root</strong>：可以通过一个<strong>全局变量</strong>访问 library（例如，通过 script 标签）。</li><li><strong>commonjs</strong>：可以将 library 作为一个 CommonJS 模块访问。</li><li><strong>commonjs2</strong>：和上面的类似，但导出的是 module.exports.default. 模块引入 适合编写组件库</li><li><strong>amd</strong>：使用 AMD 模块系统。</li></ul><p><a href="https://zhuanlan.zhihu.com/p/115305393" target="_blank" rel="noreferrer">webpack 如何处理 externals</a></p><h2 id="定义全局变量-defineplugin" tabindex="-1">定义全局变量(DefinePlugin) <a class="header-anchor" href="#定义全局变量-defineplugin" aria-label="Permalink to &quot;定义全局变量(DefinePlugin)&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//eslint 设置通过</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;globals&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;ENV&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> new</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> webpack</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">DefinePlugin</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">     //必须 JSON.stringify()，然后在eslint里面，global()通过一下</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    ENV</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">JSON</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">stringify</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">process</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">env</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">ENV</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">), </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 执行环境</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}),</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="webpack代理" tabindex="-1">webpack代理 <a class="header-anchor" href="#webpack代理" aria-label="Permalink to &quot;webpack代理&quot;">​</a></h2><ul><li>webpack-dev-server</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//在配置文件webpackDevServer.config.js添加，</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//新版本直接在package.json 里面添加，但是只能添加一个并且是字符串，也可在src下添加setupProxy.js</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> proxy</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> require</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;http-proxy-middleware&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">module</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">exports</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> function</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">app</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    app</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">use</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">        proxy</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;/pic&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">            &quot;target&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;http://120.79.229.197:9000&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">            &quot;changeOrigin&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">            &quot;secure&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">false</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">            &quot;pathRewrite&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;^/pic&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        })</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    );</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="babelrc" tabindex="-1">.babelrc <a class="header-anchor" href="#babelrc" aria-label="Permalink to &quot;.babelrc&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 可以配置在package.json里面直接修改</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">   &quot;presets&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">     [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;@babel/preset-env&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">       &quot;targets&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">         &quot;chrome&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">58</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">         &quot;ie&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">11</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">       }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">     }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">   ], </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;react-app&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">   &quot;plugins&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">     [</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;import&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">         &quot;libraryName&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;antd&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">         &quot;libraryDirectory&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;es&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">         &quot;style&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;css&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">       }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">     ],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">     [</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;@babel/plugin-proposal-decorators&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, { </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;legacy&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> }],  </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//用于转换装饰器代码的插件。</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">     [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">       &quot;@babel/plugin-transform-runtime&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">       {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">         &quot;absoluteRuntime&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">false</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">         &quot;corejs&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">         &quot;helpers&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">         &quot;regenerator&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">         &quot;useESModules&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">false</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">       }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">     ]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">   ],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">   &quot;env&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">     &quot;production&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">       &quot;plugins&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:  [</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;transform-remove-console&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">     }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">   }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h2 id="env" tabindex="-1">.env <a class="header-anchor" href="#env" aria-label="Permalink to &quot;.env&quot;">​</a></h2><p>定义一些环境变量，可以通过process.env.[name]拿取出来</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">GENERATE_SOURCEMAP</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">false</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  //禁止输出.map文件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Dotenv</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> require</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;dotenv-webpack&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">); </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 配置 .env变量</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//...</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">plugins</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// ....</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">new</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> Dotenv</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">  path</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">env</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> &amp;&amp;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> env</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> !==</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;development&quot;</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> ?</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> \`./.env.</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">\${</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">env</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">}</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">\`</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> :</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> \`./.env\`</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">],</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="优化输出的文件" tabindex="-1">优化输出的文件 <a class="header-anchor" href="#优化输出的文件" aria-label="Permalink to &quot;优化输出的文件&quot;">​</a></h2><p><code>taro为例</code></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">/**</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">* hash:hash是跟整个项目的构建相关，只要项目里有文件更改，整个项目构建的hash值都会更改</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">* 采用hash计算的话，每一次构建后生成的哈希值都不一样，即使文件内容压根没有改变。这样子是没办法实现缓存效果，我们需要换另一种哈希值计算方式，即chunkhash。</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">*</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">* chunkhash:根据不同的入口文件(Entry)进行依赖文件解析、构建对应的chunk，生成对应的哈希值。</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">* 我们在生产环境里把一些公共库和程序入口文件区分开，单独打包构建，接着我们采用chunkhash的方式生成哈希值，那么只要我们不改动公共库的代码，就可以保证其哈希值不会受影响。</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">* </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">* filename:决定了entry入口文件输出文件的名称。 (main.js)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">* </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">* chunkFilename:决定了非入口(non-entry) chunk 文件的名称,比如按需加载（异步）模块的时候 (组件打包的js)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">*/</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//js文件的输出</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">output</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    filename</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;js/[name].[hash:8].js&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    chunkFilename</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;js/[name].[chunkhash:8].js&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">},</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//css文件的输出</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">miniCssExtractPluginOption</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    filename</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;css/[name].[hash:8].css&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    chunkFilename</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;css/[name].[chunkhash:8].css&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">},</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//img文件的输出</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">imageUrlLoaderOption</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    limit</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1024</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">*</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">50</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;static/images/[name].[hash:8].[ext]&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h2 id="webpack对图片做了什了-面试题" tabindex="-1">webpack对图片做了什了？（面试题） <a class="header-anchor" href="#webpack对图片做了什了-面试题" aria-label="Permalink to &quot;webpack对图片做了什了？（面试题）&quot;">​</a></h2><p><strong>url-loader：</strong> 如果图片较多，会发很多http请求，会降低页面性能。这个问题可以通过url-loader解决。url-loader会将引入的图片编码，生成dataURl(base64)。相当于把图片数据翻译成一串字符。再把这串字符打包到文件中，最终只需要引入这个文件就能访问图片了。当然，如果图片较大，编码会消耗性能。因此url-loader提供了一个limit参数，小于limit字节的文件会被转为DataURl，大于limit的还会使用file-loader进行copy</p><p><strong>file-loader：</strong> 解决引用路径的问题，拿background样式用url引入背景图来说，我们都知道，webpack最终会将各个模块打包成一个文件，因此我们样式中的url路径是相对入口html页面的，而不是相对于原始css文件所在的路径的。这就会导致图片引入失败。这个问题是用file-loader解决的，file-loader可以解析项目中的url引入（不仅限于css），根据我们的配置，将图片拷贝到相应的路径，再根据我们的配置，修改打包后文件引用路径，使之指向正确的文件。</p><p><strong>image-webpack-loader：</strong> 对图片进行压缩和优化</p><p><a href="https://github.com/tcoopman/image-webpack-loader" target="_blank" rel="noreferrer">image-webpack-loader</a></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">bmp</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">$</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">gif</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">$</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">jpe</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">?</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">g</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">$</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">png</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">$</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">],</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// options: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//     limit: 10000,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//     name: &#39;static/media/[name].[hash:8].[ext]&#39;,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">use</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        loader</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">require</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;url-loader&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        options</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            { </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 这里的options选项参数可以定义多大的图片转换为base64</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;static/images/[name].[hash:8].[ext]&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                limit</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1024</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> *</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 50</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 表示小于50kb的图片转为base64,大于50kb的是路径</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                // outputPath: &#39;images&#39; //定义输出的图片文件夹</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // {    //压缩图片要在file-loader之后使用</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    //     loader: require.resolve(&#39;image-webpack-loader&#39;),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    //     options:</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    //         {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    //             bypassOnDebug: true</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    //         }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="webpack用到的插件" tabindex="-1">webpack用到的插件 <a class="header-anchor" href="#webpack用到的插件" aria-label="Permalink to &quot;webpack用到的插件&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">webpack</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">dev</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">server</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  //热更新</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">clean</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">webpack</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">plugin</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">   //在打包输出前清空文件夹</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">mini</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">css</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">extract</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">plugin</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> //拆分css</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">/*</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">new MiniCssExtractPlugin({</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> filename: &#39;static/css/[name].[contenthash:8].css&#39;,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> chunkFilename: &#39;static/css/[name].[contenthash:8].chunk.css&#39;,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">})</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">*/</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">extract</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">text</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">webpack</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">plugin</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">@</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">next</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> //拆分多个css</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">terser</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">webpack</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">plugin</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">/</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">uglifyjs</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">webpack</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">plugin</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  //压缩js 解决uglifyjs不支持es6语法问题</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">optimize</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">css</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">public</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">webpack</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">plugin</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> //最大化压缩css</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">image</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">webpack</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">loader</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  //图片压缩</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">webpackbar</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  //进度条</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">dotenv</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">webpack</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // 配置 .env 文件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">@</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">babel</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">/</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">plugin</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">proposal</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">decorators</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">transform</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">decorators</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">legacy</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> 基于babel6</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)   </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//装饰器</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">redux</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">devtools</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">extension</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  //配置redux工具</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">babel</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">plugin</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">transform</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">remove</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">console</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  //生产环境清除控制台的内容</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">webpack</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">bundle</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">analyzer</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  //打包体积优化</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">happyPack</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> //多进程打包，加快打包速度。</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">postcss</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">loader</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  //css编译的工具</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">postcss</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">preset</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">env</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> //将现代CSS转换成浏览器能理解的东西,无需再安装autoprefixer</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">postcss</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">flexbugs</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">fixes</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> //修复Flexbugs</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">postcss</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">px</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">to</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">viewport</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> //把px转换成viewport单位</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">postcss</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">pxtorem</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> //把px转换成rem</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="require-context是什么" tabindex="-1">require.context是什么 <a class="header-anchor" href="#require-context是什么" aria-label="Permalink to &quot;require.context是什么&quot;">​</a></h2><p>一个webpack的api,通过执行<code>require.context</code>函数获取一个特定的上下文,主要用来实现自动化导入模块,在前端工程中,如果遇到从一个文件夹引入很多模块的情况,可以使用这个api,它会遍历文件夹中的指定文件,然后自动导入,使得不需要每次显式的调用import导入模块</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> Vue</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;vue&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> Vuex</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;vuex&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">import</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> getters</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> from</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;./getters&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> path</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> require</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;path&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">Vue</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">use</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">Vuex</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> files</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> require</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">context</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;./modules&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">false</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">js</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">$</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// files.keys() 获取所有的文件目录，不带后缀</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> modules</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">files</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">keys</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">().</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">forEach</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">key</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> =&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> name</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> path</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">basename</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">key</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;.js&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    modules</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">] </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> files</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">key</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">).</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">default</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ||</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> files</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">key</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 获取所有的内容</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">})</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> store</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> new</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Vuex</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Store</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    modules</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    getters</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">})</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">export</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> default</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> store</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="端口号被占用" tabindex="-1">端口号被占用 <a class="header-anchor" href="#端口号被占用" aria-label="Permalink to &quot;端口号被占用&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> portfinder</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> require</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;portfinder&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">); </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 端口号被占取下个端口</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// ...</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">devServer</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">port</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">new</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">((</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">  portfinder</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">getPort</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({ </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">port</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">9000</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">stopPort</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">9999</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> }, (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">err</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">port</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">port</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">      console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;项目运行端口：&quot;</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> +</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> port</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">      resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">port</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    } </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">else</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">      reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">9000</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">proxy</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">  &quot;/msg&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    target</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;https://www.iowen.cn/jitang/api/&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    changeOrigin</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    secure</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">false</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    pathRewrite</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">      &quot;^/msg&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">},</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("workspace/Webpack/use.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const use = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  use as default
};
