import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"Promise & async","description":"","frontmatter":{},"headers":[],"relativePath":"workspace/Js/promise.md","filePath":"workspace/Js/promise.md","lastUpdated":1713942612000}');
const _sfc_main = { name: "workspace/Js/promise.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="promise-async" tabindex="-1">Promise &amp; async <a class="header-anchor" href="#promise-async" aria-label="Permalink to &quot;Promise &amp; async&quot;">​</a></h1><h2 id="promise" tabindex="-1">Promise <a class="header-anchor" href="#promise" aria-label="Permalink to &quot;Promise&quot;">​</a></h2><ul><li>主要用于异步计算</li><li>可以将异步操作队列化，按照期望的顺序执行，返回符合预期的结果</li><li>可以在对象之间传递和操作promise，帮助我们处理队列</li></ul><p><strong>实现一个 Promise</strong></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  resolvePromise</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">promise2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">x</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 判断x的类型 来处理promise2是成功还是失败</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 所有的promise都遵循这个规范，不同的人写的promise可能会混用</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 尽可能考虑的周全 要考虑别人promise可能出错的情况</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">promise2</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ===</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> x</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        return</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">new</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> TypeError</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;循环引用&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">))</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 判断x是不是一个promise  ,这个x 可能不是自己的promise 所以为了安全 需要在进行校验，放置调一起用成功和失败</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">typeof</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> x</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ===</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;function&#39;</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ||</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">typeof</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> x</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ===</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;object&#39;</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> &amp;&amp;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> x</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> !==</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> null</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // 尝试取当前x的then方法, 这个then方法可能别人定义的时候 用的Object.defineProperty</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> called</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        try</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> then</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> x</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">then</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 如果取then方法出错 那就用错误拒绝promise2</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">typeof</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> then</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ===</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;function&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){ </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 我就认为他是一个promise</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">                then</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">call</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">x</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">y</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{ </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 让当前的promise执行 ，不用多次取then方法了</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                    // y 有可能还是一个promise , 继续调用resolvePromise方法，直到解析出一个常量为止，最终把常量传递下去</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">                    if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">called</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">return</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 放置此方法多次被调用</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                    called</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                    resolvePromise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">promise2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">y</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                },</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">r</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">                    if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">called</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">return</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                    called</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                    reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">r</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">); </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 让当前的promise变成失败态即可</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                })</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            }</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">else</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                // x就是一个普通的对象 并没有then方法</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">x</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">catch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">e</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">called</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">return</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">            called</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">            reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">e</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">else</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // x肯定一个常量</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">        resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">x</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">class</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    constructor</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">executor</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">        this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">status</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;pending&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">        this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">value</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">        this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">reason</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">        this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">resolveCallbacks</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> []; </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 当then是pending 我希望吧成功的方法都放到数组中</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">        this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">rejectCallbacks</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [];</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        let</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> resolve</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">value</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">            // 如果是promise就调用这个promise的then方法</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">value</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> instanceof</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                // 不停的解析 等待着解析出一个常量 传递给下面</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">                return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> value</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">then</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">status</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ==</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;pending&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">                this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">status</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;fulfilled&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">                this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">value</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> value</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">                this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">resolveCallbacks</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">forEach</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">fn</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">fn</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">()); </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 发布</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        let</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> reject</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">reason</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">status</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ===</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;pending&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">                this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">status</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;rejected&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">                this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">reason</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> reason</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">                this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">rejectCallbacks</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">forEach</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">fn</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">fn</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">())</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        try</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">            executor</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">catch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">e</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">            reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">e</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    then</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">onfulfilled</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">onrejected</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){ </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// onfulfilled,onrejected 是两个可选参数</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        onfulfilled</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> typeof</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> onfulfilled</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ===</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;function&#39;</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">?</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">onfulfilled</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">:</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">val</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">val</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        onrejected</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> typeof</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> onrejected</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ===</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;function&#39;</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">?</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">onrejected</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">:</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">r</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">throw</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> r</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> promise2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        promise2</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> new</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">((</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">status</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ===</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;fulfilled&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                setTimeout</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(()</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">                    try</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">                        let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> x</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> onfulfilled</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">value</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                        // x是普通值还是promise 如果是普通值 直接调用promise2的resolve</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                        // 如果是promise  那应该让x这个promise执行 x.then</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                        resolvePromise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">promise2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">x</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                    }</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">catch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">e</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                        reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">e</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                },</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">status</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ===</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;rejected&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                setTimeout</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(()</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">                    try</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">                        let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> x</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> onrejected</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">reason</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                        resolvePromise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">promise2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">x</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                    }</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">catch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">e</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                        reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">e</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                },</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">status</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ===</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;pending&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">                this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">resolveCallbacks</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">push</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(()</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                    setTimeout</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(()</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">                        try</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">                            let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> x</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> onfulfilled</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">value</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                            resolvePromise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">promise2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">x</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                        }</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">catch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">e</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                            reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">e</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                        }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                    },</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">                this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">rejectCallbacks</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">push</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(()</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                    setTimeout</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(()</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">                        try</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">                            let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> x</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> onrejected</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">reason</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                            resolvePromise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">promise2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">x</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                        }</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">catch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">e</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                            reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">e</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                        }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                    },</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                })</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        return</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> promise2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    catch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">rejectFunc</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// catch的实现</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">then</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">null</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">rejectFunc</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 暴露一个方法这个方法需要返回一个对象 对象上需要有 promise resolve reject 三个属性</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 减少嵌套</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">Promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">defer</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">deferred</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> function</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> dfd</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    dfd</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">promise</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> new</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">((</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">        dfd</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">        dfd</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">reject</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    })</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> dfd</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 产生成功的promise</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">Promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> function</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">value</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> new</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">((</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">        resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">value</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    })</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 产生一个失败的promise</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">Promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">reject</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> function</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">reason</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> new</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">((</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">        reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">reason</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    })</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">Promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">all</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> function</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">values</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> new</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">((</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> results</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> []; </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 结果数组</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        let</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> processData</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">value</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">index</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">            results</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">index</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">] </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> value</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">            // 当成功的个数 和 当前的参数个数相等就把结果抛出去</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">++</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ===</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> values</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">length</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">results</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        for</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> ; </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">&lt;</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> values</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">length</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">++</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> current</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> values</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]; </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 拿到数组中每一项</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">            // 判断是不是一个promise</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">((</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">typeof</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> current</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ===</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;object&#39;</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> &amp;&amp;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">  current</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> !==</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">null</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">||</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> typeof</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> current</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ==</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;function&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                // 如果是promise</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">                if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">typeof</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> current</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">then</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ==</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;function&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                    // 就调用这个promise的then方法，把结果和索引对应上,如果任何一个失败了返回的proimise就是一个失败的promise</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">                    current</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">then</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">y</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                        processData</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">y</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                    },</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                }</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">else</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                    processData</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">current</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            }</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">else</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                processData</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">current</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// race的原理</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">Promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">race</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> function</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">values</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> new</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">((</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        for</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> ; </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">&lt;</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> values</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">length</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">++</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> current</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> values</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">];</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">((</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">typeof</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> current</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ===</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;object&#39;</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> &amp;&amp;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">  current</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> !==</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">null</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">||</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> typeof</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> current</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ==</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;function&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">                let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> then</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> current</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">then</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">                if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">typeof</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> then</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ==</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;function&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){ </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 比较哪个promise比较快，谁快用快</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">                    then</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">call</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">current</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                }</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">else</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                    resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">current</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            }</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">else</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">current</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br></div></div><h2 id="generator" tabindex="-1">Generator <a class="header-anchor" href="#generator" aria-label="Permalink to &quot;Generator&quot;">​</a></h2><ul><li>generator也是为了解决地狱回调问题的，和promise一样都是为了实现异步编程，本质还是各种回调；</li><li>generator为es6中新定义的数据类型，这种数据类型和函数很像，每个函数只能返回一个结果，即只能return一次， 如果在某些函数中没有看到return，其实质在函数结尾是存在一个隐藏的return undefined 的，而generator不同，可以返回多次</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function*</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> gen</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    yield</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    yield</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    yield</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 3</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    yield</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 4</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    yield</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 5</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;结束&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> g</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> gen</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">();</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> timer</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> setInterval</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(() </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//每间隔500ms执行一次g.next()，执行7次，并在控制台打印</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">++</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">      console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">g</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">next</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">()); </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//执行gen函数</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">      if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">&gt;</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">7</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">          clearInterval</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">timer</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}, </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">500</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">try</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">  g</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">throw</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">new</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> Error</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;test1&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">))</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">catch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">e</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">  console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">e</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>上述例子 可以看出generator 遇到yleld就会暂停，只有当调用<code>generator.next()</code>才会向下执行， 调用这个方法会返回<code>{value: x, done: true/false}</code>,这个对象中value是yield的返回值， done表示generator是否执行结束，只有当执行到return时，这个对象中的done才会变成true，说明执行结束</p><h2 id="async-await" tabindex="-1">async/await <a class="header-anchor" href="#async-await" aria-label="Permalink to &quot;async/await&quot;">​</a></h2><p>原理就是利用 generator（生成器）分割代码片段。然后我们使用一个函数让其自迭代，每一个yield 用 promise 包裹起来。执行下一步的时机由 promise 来控制</p><p>而且相较于Promise,async的优越性就是把每次异步返回的结果从then中拿到最外层的方法中，不需要链式调用，只要用同步的写法就可以了。 更加直观而且，更适合处理并发调用的问题。但是async必须以一个Promise对象开始 ，所以async通常是和Promise结合使用的</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> _asyncToGenerator</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">fn</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  return</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> function</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    var</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> self</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      args</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> arguments</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 将返回值promise化</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> new</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">      // 获取迭代器实例</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">      var</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> gen</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> fn</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">apply</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">self</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">args</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">      // 执行下一步</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">      function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> _next</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">value</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">        asyncGeneratorStep</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">gen</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">_next</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">_throw</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;next&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">value</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">      // 抛出异常</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">      function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> _throw</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">err</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">        asyncGeneratorStep</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">gen</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">_next</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">_throw</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;throw&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">err</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">      // 第一次触发</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">      _next</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">undefined</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  };</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> asyncGeneratorStep</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">gen</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">_next</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">_throw</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">key</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">arg</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  try</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    var</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> info</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> gen</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">key</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">](</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">arg</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    var</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> value</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> info</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">value</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  } </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">catch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">error</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    reject</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">error</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">info</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">done</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 迭代器完成</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">value</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  } </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">else</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // -- 这行代码就是精髓 --</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 将所有值promise化</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 比如 yield 1</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // const a = Promise.resolve(1) a 是一个 promise</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // const b = Promise.resolve(a) b 是一个 promise</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 可以做到统一 promise 输出</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 当 promise 执行完之后再执行下一步</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 递归调用 next 函数，直到 done == true</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    Promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">value</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">).</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">then</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">_next</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">_throw</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><p><strong>await</strong> 每次遇到await都会中断此次进程，然后去执行外面的同步代码，然后再进来，根据上次保存的next值，继续执行</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">async</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> foo</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  await</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">121212</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">  console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">121212</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> _foo</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    _foo</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> _asyncToGenerator</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">        regeneratorRuntime</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">mark</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> _callee</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> regeneratorRuntime</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">wrap</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> _callee$</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">_context</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">                while</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">                    switch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">_context</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">prev</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> _context</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">next</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">                        case</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">                            _context</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">next</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">                            return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">121212</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">                        case</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">                             console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">121212</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">                        case</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;end&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">                            return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> _context</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">stop</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">();</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            }, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">_callee</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }));</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> _foo</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">apply</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">this</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">arguments</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>测试</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> asyncFunc</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> _asyncToGenerator</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function*</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">() {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> e</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> yield</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> new</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> =&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    setTimeout</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(() </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">      resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;e&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }, </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1000</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> a</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> yield</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;a&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> d</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> yield</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;d&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> b</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> yield</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;b&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> c</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> yield</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;c&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  return</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">a</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">b</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">c</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">d</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">e</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">];</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">});</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">asyncFunc</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">().</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">then</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">res</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> =&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">  console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">res</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">); </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>总的来说，async和generator函数主要就是为了解决异步的并发调用使用的 ，直接将参数从then里取出来，相比promise的链式调用，传参更加方便，异步顺序更加清晰</p><h2 id="捕获错误" tabindex="-1">捕获错误 <a class="header-anchor" href="#捕获错误" aria-label="Permalink to &quot;捕获错误&quot;">​</a></h2><p><strong>try catch</strong></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">async</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> try</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> data</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> await</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> fn</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">()</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> } </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">catch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">err</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">  console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;err is -&gt;&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">err</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">})()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>单个还好，多个await就显得麻烦了</p><p><strong>利用promise</strong></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">async</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> const</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">err</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">data</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">] </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> await</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> fn</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">().</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">then</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">data</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> =&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">null</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">data</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">] ).</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">catch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">err</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> =&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">err</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">null</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">])</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">})()</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 抽离成公共方法</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> awaitWrap</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">promise</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  return</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> promise</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">   .</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">then</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">data</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> =&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">null</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">data</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">])</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">   .</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">catch</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">err</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> =&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">err</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">null</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">])</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">err</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">data</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">] </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> await</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> awaitWrap</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">fn</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">())</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="async函数generator函数的区别" tabindex="-1">async函数Generator函数的区别 <a class="header-anchor" href="#async函数generator函数的区别" aria-label="Permalink to &quot;async函数Generator函数的区别&quot;">​</a></h2><p>1.内置执行器。<br> Generator 函数的执行必须靠执行器，而async函数自带执行器。也就是说，async函数的执行，与普通函数一模一样，只要一行。如果你是从上面顺着看下来的，这里的执行器就是Generator和Iterator的yield和next机制，不用怀疑！</p><p>2.更好的语义。<br> async和await，比起星号和yield，语义更清楚了。async表示函数里有异步操作，await表示紧跟在后面的表达式需要等待结果。</p><p>3.正常情况下，await命令后面是一个 Promise 对象。如果不是，会被转成一个立即resolve的 Promise 对象。</p><p>4.返回值是 Promise。<br> async函数的返回值是 Promise 对象，这比 Generator 函数的返回值是 Iterator 对象方便多了。你可以用then方法指定下一步的操作。</p></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("workspace/Js/promise.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const promise = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  promise as default
};
