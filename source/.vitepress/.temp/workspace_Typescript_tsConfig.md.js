import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"tsconfig了解一下","description":"","frontmatter":{},"headers":[],"relativePath":"workspace/Typescript/tsConfig.md","filePath":"workspace/Typescript/tsConfig.md","lastUpdated":1713942612000}');
const _sfc_main = { name: "workspace/Typescript/tsConfig.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="tsconfig了解一下" tabindex="-1">tsconfig了解一下 <a class="header-anchor" href="#tsconfig了解一下" aria-label="Permalink to &quot;tsconfig了解一下&quot;">​</a></h1><h3 id="一些常用的配置" tabindex="-1">一些常用的配置 <a class="header-anchor" href="#一些常用的配置" aria-label="Permalink to &quot;一些常用的配置&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">  &quot;compilerOptions&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    /* 基本选项 */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;target&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;es5&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,                       </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 指定 ECMAScript 目标版本: &#39;ES3&#39; (default), &#39;ES5&#39;, &#39;ES2015&#39;, &#39;ES2016&#39;, &#39;ES2017&#39;, or &#39;ESNEXT&#39;（&quot;ESNext&quot;表示最新的ES语法，包括还处在stage X阶段）</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;module&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;commonjs&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,                  </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 指定使用模块: &#39;commonjs&#39;, &#39;amd&#39;, &#39;system&#39;, &#39;umd&#39; or &#39;es2015&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;lib&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [],                             </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 指定要包含在编译中的库文件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;allowJs&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,                       </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 允许编译 javascript 文件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;checkJs&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,                       </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 报告 javascript 文件中的错误</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;jsx&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;preserve&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,                     </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 指定 jsx 代码的生成: &#39;preserve&#39;, &#39;react-native&#39;, or &#39;react&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;declaration&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,                   </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 生成相应的 &#39;.d.ts&#39; 文件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;sourceMap&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,                     </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 生成相应的 &#39;.map&#39; 文件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;outFile&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;./&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,                       </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 将输出文件合并为一个文件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;outDir&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;./&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,                        </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 指定输出目录</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;rootDir&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;./&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,                       </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 用来控制输出目录结构 --outDir.</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;removeComments&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,                </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 删除编译后的所有的注释</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;noEmit&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,                        </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 不生成输出文件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;importHelpers&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,                 </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 从 tslib 导入辅助工具函数</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;isolatedModules&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,               </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 将每个文件做为单独的模块 （与 &#39;ts.transpileModule&#39; 类似）.</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    /* 严格的类型检查选项 */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;strict&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,                        </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 启用所有严格类型检查选项</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;noImplicitAny&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,                 </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 在表达式和声明上有隐含的 any类型时报错</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;strictNullChecks&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,              </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 启用严格的 null 检查</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;noImplicitThis&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,                </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 当 this 表达式值为 any 类型的时候，生成一个错误</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;alwaysStrict&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,                  </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 以严格模式检查每个模块，并在每个文件里加入 &#39;use strict&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;resolveJsonModule&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,             </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 可以导出 json</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    /* 额外的检查 */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;noUnusedLocals&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,                </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 有未使用的变量时，抛出错误</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;noUnusedParameters&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,            </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 有未使用的参数时，抛出错误</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;noImplicitReturns&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,              </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 并不是所有函数里的代码都有返回值时，抛出错误</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;noFallthroughCasesInSwitch&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,     </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 报告 switch 语句的 fallthrough 错误。（即，不允许 switch 的 case 语句贯穿）</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;allowUnreachableCode&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,           </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//报告执行不到的代码错误。</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;skipDefaultLibCheck&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">false</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,            </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//忽略 库的默认声明文件的类型检查。</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;skipLibCheck&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">false</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,                   </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//忽略所有的声明文件（ *.d.ts）的类型检查。</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;allowUnusedLabels&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">false</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,              </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//不报告未使用的标签错误。</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    /* 模块解析选项 */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;moduleResolution&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;node&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,            </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 选择模块解析策略： &#39;node&#39; (Node.js) or &#39;classic&#39; (TypeScript pre-1.6)。默认是classic</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;baseUrl&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;./&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,                       </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 用于解析非相对模块名称的基目录</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;paths&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {},                           </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 模块名到基于 baseUrl 的路径映射的列表</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;rootDirs&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [],                        </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 根文件夹列表，其组合内容表示项目运行时的结构内容</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;typeRoots&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [],                       </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 包含类型声明的文件列表</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;types&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [],                           </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 需要包含的类型声明文件名列表</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;allowSyntheticDefaultImports&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,  </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 允许从没有设置默认导出的模块中默认导入。</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    /* Source Map Options */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;sourceRoot&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;./&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,                    </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 指定调试器应该找到 TypeScript 文件而不是源文件的位置</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;mapRoot&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;./&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,                       </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 指定调试器应该找到映射文件而不是生成文件的位置</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;inlineSourceMap&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,               </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 生成单个 soucemaps 文件，而不是将 sourcemaps 生成不同的文件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;inlineSources&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,                 </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 将代码与 sourcemaps 生成到一个文件中，要求同时设置了 --inlineSourceMap 或 --sourceMap 属性</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    /* 其他选项 */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;experimentalDecorators&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,         </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 启用装饰器</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;emitDecoratorMetadata&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,          </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 为装饰器提供元数据的支持</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;strictFunctionTypes&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">false</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,           </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 禁用函数参数双向协变检查。</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  /* 指定编译文件或排除指定编译文件 */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">  &quot;include&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">      &quot;src/**/*&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  ],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">  &quot;exclude&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">      &quot;node_modules&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">      &quot;**/*.spec.ts&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  ],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">  &quot;files&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;core.ts&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">    &quot;sys.ts&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  ],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // 从另一个配置文件里继承配置</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">  &quot;extends&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;./config/base&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // 让IDE在保存文件的时候根据tsconfig.json重新生成文件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">  &quot;compileOnSave&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> // 支持这个特性需要Visual Studio 2015， TypeScript1.8.4以上并且安装atom-typescript插件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br></div></div></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("workspace/Typescript/tsConfig.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const tsConfig = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  tsConfig as default
};
