import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"Webpack4 配置详解","description":"","frontmatter":{},"headers":[],"relativePath":"workspace/Webpack/webpack.md","filePath":"workspace/Webpack/webpack.md","lastUpdated":1715005148000}');
const _sfc_main = { name: "workspace/Webpack/webpack.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="webpack4-配置详解" tabindex="-1">Webpack4 配置详解 <a class="header-anchor" href="#webpack4-配置详解" aria-label="Permalink to &quot;Webpack4 配置详解&quot;">​</a></h1><p>Webpack4后包拆成webpack和webpack-cli两个包：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 安装webpack</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">npm</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> install</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> --</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">save</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">dev</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> webpack</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> webpack</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">cli</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>主要有以下这些一级配置：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">module</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">exports</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    mode</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;development&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 模式配置,webpack4.0新增</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    entry</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 入口文件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    output</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {}, </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 出口文件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    module</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        rules</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">/*loader setting*/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }, </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 配置modules，包括loader</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    plugins</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [], </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 对应的插件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    devServer</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {}, </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 开发服务器配置</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    optimization</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {}, </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 最佳实践</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    devtool</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: { </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">alias</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {}},</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="_1-mode" tabindex="-1">1. mode <a class="header-anchor" href="#_1-mode" aria-label="Permalink to &quot;1. mode&quot;">​</a></h2><p>Webpack 4 引入了 mode 这个选项。这个选项的值可以是 development 或者 production。</p><p>设置了 mode 之后会把 process.env.NODE_ENV 也设置为 development 或者 production。然后在 production 模式下，会默认开启 UglifyJsPlugin 等一堆插件。</p><ul><li>webpack4支持ES6的方式导入JSON文件，并且支持Tree-shaking (通过工具&quot;摇&quot;我们的JS文件，将其中用不到的代码&quot;摇&quot;掉，是一个性能优化的范畴)</li></ul><h2 id="_2-entry-output" tabindex="-1">2. entry &amp; output <a class="header-anchor" href="#_2-entry-output" aria-label="Permalink to &quot;2. entry &amp; output&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> path</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> require</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;path&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> HtmlWebpackPlugin</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> require</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;html-webpack-plugin&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">module</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">exports</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 1.写成数组的方式就可以打出多入口文件，不过这里打包后的文件都合成了一个</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // entry: [&#39;./src/index.js&#39;, &#39;./src/login.js&#39;],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 2.真正实现多入口和多出口需要写成对象的方式</span></span>
<span class="line highlighted"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    entry</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line highlighted"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        index</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">path</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">__dirname</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;./src/index.js&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">),</span></span>
<span class="line highlighted"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        login</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">path</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">__dirname</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;./src/login.js&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line highlighted"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    },</span></span>
<span class="line highlighted"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    output</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line highlighted"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // 1. filename: &#39;bundle.js&#39;, &#39;bundle.[hash:4].js&#39;,   </span></span>
<span class="line highlighted"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // 2. [name]就可以将出口文件名和入口文件名一一对应</span></span>
<span class="line highlighted"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        filename</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;[name].[hash:8].js&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,      </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 打包后会生成index.313eerrd.js和login.dsfcersx.js文件</span></span>
<span class="line highlighted"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        path</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">path</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">__dirname</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;../dist&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)   </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//打包后的目录</span></span>
<span class="line highlighted"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">     plugins</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        new</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> HtmlWebpackPlugin</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">            template</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">path</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">__dirname</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;./index.html&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">),   </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 用哪个html作为模板 , react一般在在src目录下public里创建一个index.html页面当做模板来用</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">            filename</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;index.html&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//  要打包输出的文件名</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">            chunks</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;manifest&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;index&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]   </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 对应关系,index.js对应的是index.html</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        new</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> HtmlWebpackPlugin</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">            template</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">path</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">__dirname</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;./login.html&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">            filename</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;login.html&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">            chunks</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;manifest&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;login&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]   </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 对应关系,login.js对应的是login.html</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        })</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    ]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h2 id="_3-module-rules-配置" tabindex="-1">3. module - rules 配置 <a class="header-anchor" href="#_3-module-rules-配置" aria-label="Permalink to &quot;3. module - rules 配置&quot;">​</a></h2><p>webpack4中移除loaders配置，必须使用rules。rules 配置模块的读取和解析规则， 通常用来配置loader， 其类型是一个数组， 数组里每一项都描述了如何去处理部分文件。</p><p>配置一项rules大致通过以下方式：</p><ol><li>条件匹配： 通过test、include、exclude三个配置来命中Loader要应用的规则文件。(三个配置都可以是正则，也支持数组)</li><li>应用规则： 对选中后的文件通过use配置项来应用loader，可以应用一个loader或者按照从后往前的顺序应用一组loader。同时还可以分别给loader传入参数。</li><li>重置顺序： 一组loader的执行顺序默认是从右到左执行，通过exforce选项可以让其中一个loader的执行顺序放到最前或者是最后。</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">module</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">exports</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">   //...</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">   module</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">       rules</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">           {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">               test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">css</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">$</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,     </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 解析css</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">               exclude</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /node_modules/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">               use</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;style-loader&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;css-loader&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">] </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 从右向左解析</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">               /* </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                   也可以这样写，这种方式方便写一些配置参数</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                   use: [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                       {loader: &#39;style-loader&#39;},</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                       {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                           loader: require.resolve(&#39;postcss-loader&#39;),   //这里是加上浏览器的前缀</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                           options: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                               ident: &#39;postcss&#39;,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                               plugins: () =&gt; [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                                   require(&#39;postcss-flexbugs-fixes&#39;), //修复Flexbugs</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                                   require(&#39;postcss-preset-env&#39;)({ //postcss-preset-env包括autoprefixer</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                                       autoprefixer: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                                           flexbox: &#39;no-2009&#39;,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                                       },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                                       stage: 3,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                                   }),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                               ]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                           },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                      }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                   ]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">               */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">           }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">       ]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">   }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h2 id="_4-optimization" tabindex="-1">4. optimization <a class="header-anchor" href="#_4-optimization" aria-label="Permalink to &quot;4. optimization&quot;">​</a></h2><p>在Webpack4中引入，根据mode（production/development）的不同，配置项默认值不同，具体有以下：</p><ol><li><p><strong>optimization.minimize</strong>： 是否自动压缩打包后的代码。mode = production时，为true。 压缩默认使用<code>terser-webpack-plugin</code>插件(更加兼容ES6)，如果想要使用别的压缩插件，可以使用<code>optimization.minimizer</code>设置。</p></li><li><p><strong>optimization.splitChunks</strong>: 根据不同的策略来分割打包出来的bundle。配置基于<a href="https://webpack.js.org/plugins/split-chunks-plugin/" target="_blank" rel="noreferrer">SplitChunksPlugin</a>,剔除了老的<code>CommonsChunkPlugin</code>（webpack4移除）。</p></li><li><p>零配置</p><ul><li><strong>optimization.nodeEnv</strong>: 告诉webpack process.env.NODE_ENV的值，值来自于mode的取值。代替<a href="https://webpack.js.org/plugins/define-plugin/" target="_blank" rel="noreferrer">webpack.DefinePlugin</a></li><li><strong>optimization.namedModules</strong>: 代替webpack.NamedModulesPlugin（webpack4移除） <code>给模块有意义的名称代替ids</code></li><li><strong>optimization.noEmitOnErrors</strong>: 代替webpack.NoEmitOnErrorsPlugin（webpack4移除） <code>编译错误时不写入到输出</code></li><li><strong>optimization.concatenateModules</strong>: 代替webpack.optimize.ModuleConcatenationPlugin（webpack4移除） <code>尝试查找模块图中可以安全连接到单个模块中的段。- -</code></li></ul></li></ol><p><a href="https://segmentfault.com/a/1190000013712229?utm_source=index-hottest" target="_blank" rel="noreferrer">默认配置</a></p><h2 id="_5-plugins" tabindex="-1">5. plugins <a class="header-anchor" href="#_5-plugins" aria-label="Permalink to &quot;5. plugins&quot;">​</a></h2><ul><li>常用插件</li></ul><ol><li><code>HtmlWebpackPlugin</code> 自动在html中加载打包后的js文件</li><li><code>DLLPlugin/DllReferencePlugin</code> 提高打包速度 <ul><li>DLLPlugin：创建一个只有dll的bundle</li><li>DllReferencePlugin： 打包生成的dll文件引用到需要的预编译依赖上来</li></ul></li><li>happyPack 多进程打包，加快打包速度。</li><li><code>webpack.DefinePlugin</code> webpack4设置mode会自动使用</li><li><code>uglifyjs-webpack-plugin</code> webpack4 mode = production默认使用</li><li>WebpackBar</li><li>webpack-bundle-analyzer</li><li>clean-webpack-plugin 清除dist文件夹里会残留上次打包的文件</li></ol><ul><li>废弃插件 ExtractTextWebpackPlugin 拆分css样式的插件(webapck4已废弃)。由于webpack4以后对css模块支持的逐步完善和commonchunk插件的移除， 在处理css文件提取的计算方式上也做了些调整，之前我们首选使用的extract-text-webpack-plugin也完成了其历史使命， 将让位于<a href="https://github.com/webpack-contrib/mini-css-extract-plugin" target="_blank" rel="noreferrer">mini-css-extract-plugin</a>。</li></ul><h2 id="_6-devserver" tabindex="-1">6. devServer <a class="header-anchor" href="#_6-devserver" aria-label="Permalink to &quot;6. devServer&quot;">​</a></h2><p>webpack的devServer配置基于webpack-dev-server集成的插件。该插件提供了proxy代理配置，基于express中间件 http-proxy-middleware实现，该中间件又基于node http-proxy,</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">devServer</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 提供静态文件目录地址</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 基于express.static实现</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    contentBase</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">path</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">join</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">__dirname</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;dist&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 任意的 404 响应都被替代为 index.html</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 基于node connect-history-api-fallback包实现</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    historyApiFallback</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 是否一切服务都启用 gzip 压缩</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 基于node compression包实现</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    compress</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 是否隐藏bundle信息</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    noInfo</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 发生错误是否覆盖在页面上</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    overlay</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 是否开启热加载</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 必须搭配webpack.HotModuleReplacementPlugin 才能完全启用 HMR。</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 如果 webpack 或 webpack-dev-server 是通过 --hot 选项启动的，那么这个插件会被自动添加</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    hot</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 热加载模式</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // true代表inline模式，false代表iframe模式</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    inline</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 默认是true</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 是否自动打开</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    open</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 设置本地url和端口号</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    host</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;localhost&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    port</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">8080</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 代理</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 基于node http-proxy-middleware包实现</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    proxy</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // 匹配api前缀时，则代理到3001端口</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // 即http://localhost:8080/api/123 = http://localhost:3001/api/123</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // 注意:这里是把当前server8080代理到3001，而不是任意端口的api代理到3001</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">        &#39;/api&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;http://localhost:3001&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // 设置为true, 本地就会虚拟一个服务器接收你的请求并代你发送该请求</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // 主要解决跨域问题</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        changeOrigin</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // 针对代理https</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        secure</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">false</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // 覆写路径：http://localhost:8080/api/123 = http://localhost:3001/123</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        pathRewrite</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;^/api&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> : </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><p>举个完整例子：</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> path</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> require</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;path&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> webpack</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> require</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;webpack&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 插件都是一个类，所以我们命名的时候尽量用大写开头</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> HtmlWebpackPlugin</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> require</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;html-webpack-plugin&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">); </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//打包html</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> MiniCssExtractPlugin</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> require</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;mini-css-extract-plugin&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">); </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 提取出来css</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> UglifyJsPlugin</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> require</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;uglifyjs-webpack-plugin&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">); </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 压缩打包后的js </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> HappyPack</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> require</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;happypack&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">); </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 多线程构建</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> happyThreadPool</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> HappyPack</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">ThreadPool</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({ </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">size</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">5</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> });  </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 构造出共享进程池，进程池中包含5个子进程</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> OptimizeCsspublicPlugin</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> require</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;optimize-css-public-webpack-plugin&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 最大化压缩css</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Dotenv</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> require</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;dotenv-webpack&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;process.env.NODE_ENV-------&gt;&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,  </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">process</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">env</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">NODE_ENV</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 解决css 分离后图片引入路径不正确问题</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">process</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">env</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">type</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ==</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;build&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) { </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 判断package.json里面是build还是dev命令</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 开发</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    var</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> website</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        publicPath</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;/&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">} </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">else</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 生产</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    var</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> website</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        publicPath</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;/&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">module</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">exports</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line highlighted"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // devtool:&#39;eval-source-map&#39;,</span></span>
<span class="line highlighted"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    mode</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;development&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 模式配置</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    entry</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        main</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;./src/index.js&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line highlighted"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    },             </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    output</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        filename</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;bundle.[chunkhash:6].js&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        path</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">path</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">__dirname</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;dist&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        publicPath</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">website</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">publicPath</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 解决css 分离后图片引入路径不正确问题</span></span>
<span class="line highlighted"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    },             </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    module</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        rules</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">css/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                exclude</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /node_modules/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                use</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;style-loader&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">MiniCssExtractPlugin</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">loader</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//拆分css [对应109-112行]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                      loader</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">require</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;postcss-loader&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">),   </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//这里是加上浏览器的前缀</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                      options</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                          ident</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;postcss&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                          plugins</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: () </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                              require</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;postcss-flexbugs-fixes&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">), </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//修复Flexbugs</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">                              require</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;postcss-preset-env&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)({ </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//postcss-preset-env包括autoprefixer</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                                  autoprefixer</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                                      flexbox</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;no-2009&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                                  },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                                  stage</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">3</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                              }),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                          ]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                      },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                 }, </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">                 &#39;css-loader&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">less</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">$</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                exclude</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /node_modules/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                use</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;style-loader&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">MiniCssExtractPlugin</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">loader</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;css-loader&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;less-loader&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">(png</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">jpe</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">?</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">g</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">gif</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">svg)</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">$</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                use</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                    {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                        loader</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;url-loader&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                        options</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                            limit</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">10000</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                            name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;[name]_[hash:7].[ext]&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                            outputPath</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;static/images/&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                        }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                ]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">(htm</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">html)</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">$</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                use</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;html-withimg-loader&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">            // babel 解析es7 es6 jsx</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">(jsx</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">js)</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">$</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                include</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [ </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">                    path</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">__dirname</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;src&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                ],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                use</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:[</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;babel-loader&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                /*</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                    如果开启多线程进行构建</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                    use:[&#39;happypack/loader?id=js&#39;], </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                    loader这样写 匹配下面注释的插件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                exclude</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/node_modules/</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        ]</span></span>
<span class="line highlighted"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    },              </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    plugins</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // 打包html</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        new</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> HtmlWebpackPlugin</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">            template</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;./src/index.html&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">            hash</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">            minify</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                minifyCSS</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                minifyJS</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                removeAttributeQuotes</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        new</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> MiniCssExtractPlugin</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">            filename</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;static/css/[name].[chunkhash:8].css&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">            chunkFilename</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;[id].css&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        new</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> UglifyJsPlugin</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">            parallel</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        new</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> Dotenv</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(), </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 配置 .env 文件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        new</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> webpack</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">DefinePlugin</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">            NODE_ENV</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">JSON</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">stringify</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;DEV&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // 多线程构建 匹配上面的loader</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // new HappyPack({</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        //     id: &#39;js&#39;,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        //     //threads: 4,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        //     loaders: [&#39;babel-loader&#39;],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        //     threadPool: happyThreadPool, // 使用共享进程池中的子进程去处理任务</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // }),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">        &#39;postcss-px-to-viewport&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">           viewportWidth</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">750</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,   </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 视窗的宽度，对应的是我们设计稿的宽度，一般是750</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">           viewportHeight</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1334</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 视窗的高度，根据750设备的宽度来指定，一般指定1334，也可以不配置</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">           unitPrecision</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">3</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,     </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 指定\`px\`转换为视窗单位值的小数位数</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">           viewportUnit</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;vw&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,   </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//指定需要转换成的视窗单位，建议使用vw</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">           selectorBlackList</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;.ignore&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">],</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 指定不转换为视窗单位的类，可以自定义，可以无限添加,建议定义一至两个通用的类名</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">           minPixelValue</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,     </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 小于或等于\`1px\`不转换为视窗单位，你也可以设置为你想要的值</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">           mediaQuery</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">false</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">     // 允许在媒体查询中转换\`px\`</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }   </span></span>
<span class="line highlighted"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    ],   </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 提取公共代码</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    optimization</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        minimizer</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">           // 自定义js优化配置，将会覆盖默认配置 最大化压缩成js</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            new</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> UglifyJsPlugin</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                exclude</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">min</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">js</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">$</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 过滤掉以&quot;.min.js&quot;结尾的文件，我们认为这个后缀本身就是已经压缩好的代码，没必要进行二次压缩</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                cache</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                parallel</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 开启并行压缩，充分利用cpu</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                sourceMap</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">false</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                extractComments</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">false</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 移除注释</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                uglifyOptions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                  compress</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                    unused</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                    warnings</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">false</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                    drop_debugger</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                  },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                  output</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                    comments</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">false</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            }),</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">            // 用于优化css文件 最大化压缩成css 并且去掉注释掉的css</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            new</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> OptimizeCsspublicPlugin</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">({</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                assetNameRegExp</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">css</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">$</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">g</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                cssProcessorOptions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                  safe</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                  autoprefixer</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: { </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">disable</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                  mergeLonghand</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">false</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                  discardComments</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                    removeAll</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> // 移除注释</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                canPrint</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            })</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">           ],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">            splitChunks</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                cacheGroups</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                vendor</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {   </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 抽离第三方插件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                    test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">:</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /node_modules/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,   </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 指定是node_modules下的第三方包</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                    chunks</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;initial&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                    name</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;vendor&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,  </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 打包后的文件名，任意命名    </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                    // 设置优先级，防止和自定义的公共代码提取时被覆盖，不进行打包</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                    priority</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">10</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">                },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                // utils: { // 抽离自己写的公共代码，utils这个名字可以随意起 (css/js公用的都会单独抽离出来生成一个单独的文件)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                //     chunks: &#39;initial&#39;,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                //     name: &#39;utils&#39;,  // 任意命名</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                //     minSize: 0    // 只要超出0字节就生成一个新包</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">                // }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            }</span></span>
<span class="line highlighted"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    },        </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    devServer</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        historyApiFallback</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        inline</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    },   </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // externals: {</span></span>
<span class="line highlighted"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    //     jquery: &quot;jQuery&quot;,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    resolve</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // alias 别名配置，它能够将导入语句里的关键字替换成你需要的路径</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        alias</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">            // 比如我们就可以直接写 import Nav from &#39;@/Nav&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">            &#39;@&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;./app/component&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        },</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // 省略后缀</span></span>
<span class="line highlighted"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        extensions</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;.js&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;.jsx&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;.less&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;.json&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;.css&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    },     </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    performance</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        hints</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">false</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> // 选项可以控制 webpack 如何通知「资源(asset)和入口起点超过指定文件限制」</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br></div></div><h2 id="参考文章" tabindex="-1">参考文章 <a class="header-anchor" href="#参考文章" aria-label="Permalink to &quot;参考文章&quot;">​</a></h2><ul><li><p><a href="https://juejin.im/post/5de87444518825124c50cd36?utm_source=gold_browser_extension" target="_blank" rel="noreferrer">实战</a></p></li><li><p><a href="https://webpack.js.org/configuration/optimization/" target="_blank" rel="noreferrer">webpack optimization</a></p></li><li><p><a href="https://dev.to/flexdinesh/upgrade-to-webpack-4---5bc5" target="_blank" rel="noreferrer">Upgrade to Webpack 4</a></p></li><li><p><a href="https://juejin.im/post/5b3e22e3f265da0f4b7a72df" target="_blank" rel="noreferrer">webpack编译速度提升之DllPlugin</a></p></li><li><p><a href="https://juejin.im/post/5abbc2ca5188257ddb0fae9b" target="_blank" rel="noreferrer">webpack4.0打包优化策略系列</a></p></li></ul></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("workspace/Webpack/webpack.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const webpack = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  webpack as default
};
