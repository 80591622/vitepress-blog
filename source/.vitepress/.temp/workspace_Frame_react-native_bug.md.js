import { ssrRenderAttrs } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"XCODE模拟器报错修复","description":"","frontmatter":{},"headers":[],"relativePath":"workspace/Frame/react-native/bug.md","filePath":"workspace/Frame/react-native/bug.md","lastUpdated":1713942612000}');
const _sfc_main = { name: "workspace/Frame/react-native/bug.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="xcode模拟器报错修复" tabindex="-1">XCODE模拟器报错修复 <a class="header-anchor" href="#xcode模拟器报错修复" aria-label="Permalink to &quot;XCODE模拟器报错修复&quot;">​</a></h1><p><strong>1.MAC上调试工具React-native-debugger下载缓慢及其解决办法。</strong></p><p>我们可以下载React-native-debugger,用于RN项目的 调试</p><p>我在下载的时候，遇到两个无语的问题</p><p>这玩意儿是没有官网的，你只能从github上下载，我这里给一个点击就能直接下载的链接：<a href="https://github.com/jhen0409/react-native-debugger/releases/download/v0.10.0/rn-debugger-macos-x64.zip" target="_blank" rel="noreferrer">https://github.com/jhen0409/react-native-debugger/releases/download/v0.10.0/rn-debugger-macos-x64.zip</a> 这个东西大概90M左右，下载慢不说，而且因为网络原因，经常下载到快完成的时候失败！ 加快下载速度的方式如下： 打开你的VPN 打开上面的链接：<a href="https://github.com/jhen0409/react-native-debugger/releases/download/v0.10.0/rn-debugger-macos-x64.zip%EF%BC%8C%E5%BE%88%E5%BF%AB%E5%B0%B1%E8%83%BD%E4%B8%8B%E5%A5%BD" target="_blank" rel="noreferrer">https://github.com/jhen0409/react-native-debugger/releases/download/v0.10.0/rn-debugger-macos-x64.zip，很快就能下好</a></p><p><strong>2.调试中，可能偶尔就会出现让人非常无语的红屏问题，报（Could not connect to development server）</strong></p><p>比如下面的这个不能连接到服务器就是我偶尔或经常遇到的问题，</p><p>解决方法：一般刷新几次就好了，如果刷新多次无效，那么重新通过react-native启动项目</p><p>（如果IOS模拟器是个人我已经想要打死他了。。。）</p><p><strong>3.调试中报错：Missing request token for request</strong></p><p>解决方法：反正重启就万完事了。。。不行就再重启</p><p><strong>4. 导入新的图片image后，显示红屏（非法字符 Error on load image on React-native: Unexpected character ）</strong></p><p>解决方法：1.关闭项目，重新通过命令行启动。 2.如果还不行，那么再重试多次，一般会行的</p><p><strong>5.红屏，提示 JSON value &#39;XXXX&#39; of type NSString cannot be converted to a YGValue. Did you forget the % or pt suffix ?</strong></p><p><strong>6.红屏，和上面一样，但提示的文字是“Runtime is not ready for debugging”</strong></p><p>这一般是这种情况： 就是你先打开了调试器（React-Native-debugger），然后才启动的项目，项目认为“自己还没有准备好调试”，所以报了这个错误</p><p>解决方法</p><p>调出控制台菜单（IOS模拟器下通过control + D开启） 选择Stop Remote JS Debugging</p><p><strong>7.红屏，和上面一样，提示文字: “Unhandled JS Exception: global.nativeTraceBeginSection is not a function”</strong></p><p>这个问题据说不少人遇到过，解决方法是：在模拟器上删掉APP，然后重新编译安装，</p><p>它属于“完全的不可抗力”，不是因为你做错了什么，但问题恰恰就这样出现了。。。。。</p><p>参考链接 <a href="https://cloud.tencent.com/developer/ask/216506/answer/333025" target="_blank" rel="noreferrer">https://cloud.tencent.com/developer/ask/216506/answer/333025</a></p><p><strong>8. 发现程序有错但是控制台看不到红色错误（error）???</strong></p><p>这是因为。。。。。。。报的错误可能不是红色的，而是白色的</p><p>下面的这位error老弟，我还是第一次看到长得这么“白白净净” 的Error, 难道你不应该是“红脸关公”🐎 ？</p><p>解决办法：认真从一大堆输出中通过过滤掉其他信息的方式，定位到白色色块的error输出</p><p><strong>9.调出React-Native-Debugger的时候,报警告：Another debugger is already connected</strong></p><p>一般情况下，这是因为你的浏览器页面打开了debugger页面，长这样的</p><p>解决办法：把浏览器的debugger关掉就可以了</p><p><strong>10.解决MAC和IOS模拟器之间的复制粘贴问题</strong></p><p>用过IOS模拟器的人就会发现一个问题，MAC上的东东是不能直接粘贴到模拟器的APP上的</p><p>解决办法： <a href="https://www.jianshu.com/p/a34ab4933211" target="_blank" rel="noreferrer">https://www.jianshu.com/p/a34ab4933211</a></p><p><strong>11.如果报错：组件不是class/function,而是undefined</strong></p><p>不一定是当前组件没有正确导入，还可能是当前组件的子组件没有正确导入</p><p><strong>12.涉及图片引用改变的时候，偶尔会出现热重载失效的现象</strong></p><p>你说失效，辣就是失效，不狡辩（证据确凿，百口莫辩）</p><p><strong>13.IOS模拟器使用起来非常缓慢，如同乌龟和树獭一般，而且卡顿死机看心情</strong></p><p>解决办法：毫无办法，听天由命</p></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("workspace/Frame/react-native/bug.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const bug = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  bug as default
};
