import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"leetCode","description":"","frontmatter":{},"headers":[],"relativePath":"workspace/Project/leetcode.md","filePath":"workspace/Project/leetcode.md","lastUpdated":1734345187000}');
const _sfc_main = { name: "workspace/Project/leetcode.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="leetcode" tabindex="-1">leetCode <a class="header-anchor" href="#leetcode" aria-label="Permalink to &quot;leetCode&quot;">​</a></h1><h2 id="两数之和" tabindex="-1">两数之和 <a class="header-anchor" href="#两数之和" aria-label="Permalink to &quot;两数之和&quot;">​</a></h2><p><strong>示例：</strong></p><pre><code>给定 nums = [2, 7, 11, 15], target = 9
因为 nums[0] + nums[1] = 2 + 7 = 9
所以返回 [0, 1]
</code></pre><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">/**</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> * </span><span style="${ssrRenderStyle({ "color": "#C678DD", "font-style": "italic" })}">@param</span><span style="${ssrRenderStyle({ "color": "#E5C07B", "font-style": "italic" })}"> {number[]}</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}"> nums</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> * </span><span style="${ssrRenderStyle({ "color": "#C678DD", "font-style": "italic" })}">@param</span><span style="${ssrRenderStyle({ "color": "#E5C07B", "font-style": "italic" })}"> {number}</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}"> target</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> * </span><span style="${ssrRenderStyle({ "color": "#C678DD", "font-style": "italic" })}">@return</span><span style="${ssrRenderStyle({ "color": "#E5C07B", "font-style": "italic" })}"> {number[]}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> twoSum</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> function</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">nums</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">target</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">   let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> obj</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{};</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">   const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> len</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">nums</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">length</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">   if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">len</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">&lt;</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">return</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">   for</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">&lt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">len</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">++</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">      let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> otherNum</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">target</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">nums</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">      if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">otherNum</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> in</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> obj</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        return</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">obj</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">otherNum</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">],</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      obj</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">nums</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]]</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">   }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">};</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">var</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> twoSum</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> function</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">nums</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">target</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  for</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">var</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> &lt;</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> nums</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">length</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">++</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> diff</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> target</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> -</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> nums</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    for</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> j</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> +</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">j</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> &lt;</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> nums</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">length</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">j</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">++</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">      if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">nums</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">j</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">] </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">===</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> diff</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        return</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">j</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h2 id="_1-2-3-5-8-求第一百个数" tabindex="-1">1,2,3,5,8...求第一百个数 <a class="header-anchor" href="#_1-2-3-5-8-求第一百个数" aria-label="Permalink to &quot;1,2,3,5,8...求第一百个数&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> findIndexNum</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">n</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> ary</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">3</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">5</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">ary</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">length</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">&gt;=</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">n</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">     return</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> ary</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">n</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    Array</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">from</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Array</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">n</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">4</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">), (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">key</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">index</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> index</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">).</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">forEach</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(()</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">{</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">      let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> len</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">ary</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">length</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">      let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> sum</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> ary</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">len</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">+</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">ary</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">len</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">      ary</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">push</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">sum</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    })</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> ary</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">n</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">-</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]    </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">findIndexNum</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">100</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="求数组中连续数最大个数" tabindex="-1">求数组中连续数最大个数 <a class="header-anchor" href="#求数组中连续数最大个数" aria-label="Permalink to &quot;求数组中连续数最大个数&quot;">​</a></h2><pre><code>给定一个数组, 里面的元素全部由0和1组成, 计算其中最大连续1的个数

输入: [1,1,0,1,1,1]
输出: 3
解释: 开头的两位和最后的三位都是连续1, 所以最大连续1的个数是3
</code></pre><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> arr</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> isBiggest</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">arr</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> count</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> null</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> arg</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [];</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  for</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">var</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> &lt;</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> arr</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">length</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">++</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">arr</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">] </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">!==</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> arr</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> +</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      count</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">++</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">      arg</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">push</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">count</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      count</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">      continue</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    } </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">else</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">      count</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">++</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Math</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">max</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(...</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">arg</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="组合总和-iii" tabindex="-1"><a href="https://leetcode-cn.com/problems/combination-sum-iii/" target="_blank" rel="noreferrer">组合总和 III</a> <a class="header-anchor" href="#组合总和-iii" aria-label="Permalink to &quot;[组合总和 III](https://leetcode-cn.com/problems/combination-sum-iii/)&quot;">​</a></h2><p>示例 1:</p><p>输入: k = 3, n = 7 输出: [[1,2,4]] 示例 2:</p><p>输入: k = 3, n = 9 输出: [[1,2,6], [1,3,5], [2,3,4]]</p><ol><li>先找出来能组成的所有数组，然后在根据长度和和找出适合的数组</li></ol><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> k</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 4</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">n</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 10</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> combinationSum3</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> function</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">k</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">n</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> number</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [[]];</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> ary</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> []</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> numbers</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [...</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">Array</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">9</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)].</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">map</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">((</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">item</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">index</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> index</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> +</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  for</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> &lt;</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> numbers</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">length</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> +</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">++</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> turn</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> number</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">map</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">v</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> =&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [...</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">v</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">numbers</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]])</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    number</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> number</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">concat</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">turn</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  for</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> &lt;</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> number</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">length</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">++</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">number</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">].</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">length</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ===</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> k</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">      if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">sum</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">number</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]) </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">===</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> n</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">        ary</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">push</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">number</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">])</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">      }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  return</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> ary</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">ary</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">};</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> sum</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">arr</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> arr</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">reduce</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">((</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">prev</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">curr</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> prev</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> +</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> curr</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">combinationSum3</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">k</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">n</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><ol start="2"><li>回溯+剪纸</li></ol><p>如果当前组合数组的长度超过了题目给定的k，那么没有必要继续回溯，进行剪纸 由于遍历[start, 9]的过程中，我们是从小到大排序的，那么如果当前的组合总和sum加上了[start, 9]中的某个数字num后，使得sum + num &gt; n，这里假设num的下标是i，那么很明显，[i, 9]区间的数字就没有必要再遍历回溯了，因为什么组合的和都会大于n，进行剪纸。 于是可以写出代码如下：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> k</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 3</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">n</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 10</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> ans</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> combinationSum3</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> function</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">k</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">n</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">  ans</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [];</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">  back</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">k</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">n</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, [], </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  return</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> ans</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">};</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">/*</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">* @params {Array} nowArr 当前回溯组合</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">* @params {number} sum 当前回溯组合的总和</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">* @params {number} start 下次回溯的起点坐标</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">*/</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> back</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">k</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">n</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">nowArr</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">sum</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">start</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // 符合双重条件</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">nowArr</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">length</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ===</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> k</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> &amp;&amp;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> sum</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ===</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> n</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> ans</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">push</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">nowArr</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // 递归找到合适的数组</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  for</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> start</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> &lt;=</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 9</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">++</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">sum</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> +</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> &gt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> n</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ||</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> nowArr</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">length</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> &gt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> k</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">break</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">    back</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">k</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">n</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, [...</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">nowArr</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">], </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">sum</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> +</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> i</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> +</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">combinationSum3</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">k</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">n</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="去除字符串中出现次数最少的字符-同时保持字符串的原始顺序" tabindex="-1">去除字符串中出现次数最少的字符，同时保持字符串的原始顺序 <a class="header-anchor" href="#去除字符串中出现次数最少的字符-同时保持字符串的原始顺序" aria-label="Permalink to &quot;去除字符串中出现次数最少的字符，同时保持字符串的原始顺序&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> removeLeastFrequentChars</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">input</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // 统计每个字符的出现次数</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> charCount</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {};</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  for</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> char</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> of</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> input</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    charCount</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">char</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">] </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">charCount</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">char</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">] </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">||</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">+</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">  }</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // 找到最小出现次数</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> minCount</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Math</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">min</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(...</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">Object</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">values</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">charCount</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">));</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">  // 过滤掉出现次数等于最小次数的字符</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">  return</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> input</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">split</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">).</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">filter</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">char</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> =&gt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> charCount</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">char</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">] </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">&gt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> minCount</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">).</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">join</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 示例用法</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> input</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &quot;aabbccddeeffg&quot;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> result</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> removeLeastFrequentChars</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">input</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">result</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">); </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 输出: &quot;aabbccddeeff&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="写出一个函数trans-将数字转换成汉语的输出-输入为不超过10000亿的数字。" tabindex="-1">写出一个函数trans，将数字转换成汉语的输出，输入为不超过10000亿的数字。 <a class="header-anchor" href="#写出一个函数trans-将数字转换成汉语的输出-输入为不超过10000亿的数字。" aria-label="Permalink to &quot;写出一个函数trans，将数字转换成汉语的输出，输入为不超过10000亿的数字。&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 示例：</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 输入：1234567890</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 输出：一千二百三十四万五千六百七十八九零</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> trans</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">num</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> units</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;个&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;十&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;百&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;千&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;万&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;亿&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]; </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 单位</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> chineseNums</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;零&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;一&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;二&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;三&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;四&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;五&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;六&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;七&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;八&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;九&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]; </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 汉字数字</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">num</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ===</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">return</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> chineseNums</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]; </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 特殊处理零</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> str</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> num</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">toString</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">();</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> result</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> zeroFlag</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> false</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 用于判断是否需要加“零”</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> unitIndex</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 单位索引</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    for</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> str</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">length</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> -</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> &gt;=</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">--</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> digit</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> parseInt</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">str</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> unit</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> units</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">unitIndex</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">] </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">||</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 获取当前位的单位</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">digit</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> ===</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">            // 如果是0且前面不是零，则添加“零”</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">!</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">zeroFlag</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> &amp;&amp;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> unitIndex</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> !==</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                result</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> chineseNums</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">] </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">+</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> result</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">                zeroFlag</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">            }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        } </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">else</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">            // 非零时，拼接数字和单位</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">            result</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> chineseNums</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">digit</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">] </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">+</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">unit</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> ?</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> unit</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> :</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">+</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> result</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">            zeroFlag</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> false</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        unitIndex</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">++</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">        // 如果当前已经超过“亿”单位，可以跳出循环</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">unitIndex</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> &gt;=</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 8</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">break</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 处理“十”的特殊情况：如果开头是“一十”，则去掉“一”</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">result</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">startsWith</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;一十&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        result</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> result</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">slice</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> result</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 示例</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">trans</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">123456</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">));         </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 输出 &quot;十二万三千四百五十六&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">trans</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">100010001</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">));      </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 输出 &quot;一亿零一万零一&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">trans</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">));              </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 输出 &quot;零&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">trans</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1000000000</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">));     </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 输出 &quot;十亿&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">trans</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">100</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">));            </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 输出 &quot;一百&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">trans</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">100000</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">));         </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 输出 &quot;十万&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br></div></div><h2 id="给几个数组-可以通过数值找到对应的数组名称" tabindex="-1">给几个数组, 可以通过数值找到对应的数组名称 <a class="header-anchor" href="#给几个数组-可以通过数值找到对应的数组名称" aria-label="Permalink to &quot;给几个数组, 可以通过数值找到对应的数组名称&quot;">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 比如这个函数输入一个1，那么要求函数返回A</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> mappings</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    A</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">3</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    B</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">4</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">5</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">6</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">],</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    C</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">: [</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">7</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">8</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">9</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">};</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">function</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> numberToLetter</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">num</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 遍历 mappings 对象的键和值</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    for</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">letter</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">numbers</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">] </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">of</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Object</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">entries</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">mappings</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">        if</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">numbers</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">includes</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">num</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">            return</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> letter</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 返回对应的字母</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">        }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;Invalid input&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">; </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 如果数字不在任何映射中</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 示例</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">numberToLetter</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">));  </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 输出 &quot;A&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">numberToLetter</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">5</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">));  </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 输出 &quot;B&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">numberToLetter</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">9</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">));  </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 输出 &quot;C&quot;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">numberToLetter</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">10</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)); </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 输出 &quot;Invalid input&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("workspace/Project/leetcode.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const leetcode = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  leetcode as default
};
