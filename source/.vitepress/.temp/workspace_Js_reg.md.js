import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"RegExp正则","description":"","frontmatter":{},"headers":[],"relativePath":"workspace/Js/reg.md","filePath":"workspace/Js/reg.md","lastUpdated":1713942612000}');
const _sfc_main = { name: "workspace/Js/reg.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="regexp正则" tabindex="-1">RegExp正则 <a class="header-anchor" href="#regexp正则" aria-label="Permalink to &quot;RegExp正则&quot;">​</a></h1><h2 id="正则方法" tabindex="-1">正则方法 <a class="header-anchor" href="#正则方法" aria-label="Permalink to &quot;正则方法&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">reg</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">str</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)  </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//检验 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//字符串中有没有正则能匹配到的内容，返回值: true false</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">reg</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">exec</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">str</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)  </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//捕获 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//方法用于检索字符串中的正则表达式的匹配。 </span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//返回一个数组，其中存放匹配的结果。如果未找到匹配，则返回值为 null。</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">str</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">match</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">reg</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 把匹配到的字符放入到数组中，不匹配返回null</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">str</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">replace</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">( </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">reg</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> ,</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&quot;&quot;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">替换成什么</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> |</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> callback</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">（</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">替换成什么</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">）)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="正则的修饰符、元字符" tabindex="-1">正则的修饰符、元字符 <a class="header-anchor" href="#正则的修饰符、元字符" aria-label="Permalink to &quot;正则的修饰符、元字符&quot;">​</a></h3><h2 id="量词元字符" tabindex="-1">量词元字符 <a class="header-anchor" href="#量词元字符" aria-label="Permalink to &quot;量词元字符&quot;">​</a></h2><table><thead><tr><th style="${ssrRenderStyle({ "text-align": "left" })}"><span style="${ssrRenderStyle({ "display": "block", "text-align": "left" })}"> 常用指令 </span></th><th style="${ssrRenderStyle({ "text-align": "left" })}"><span style="${ssrRenderStyle({ "display": "block", "text-align": "left" })}"> 描述</span></th></tr></thead><tbody><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">\\n</td><td style="${ssrRenderStyle({ "text-align": "left" })}">在js中表示换行</td></tr></tbody></table><ul><li>| <code>表示出现0次到多次</code> ？| <code>表示出现0次或1次</code></li></ul><ul><li>| <code>表示至少出现一次</code> {n} | 表示出现n次 {n,} | 表示至少出现n次 {n,m} | <code>最小是n，最大是m，（n，m都是一个非负整数</code></li></ul><p><code>中文的范围：[ \\u4e00 - \\u9fa5 ]</code> （记忆：有事100，有酒罚我）</p><h2 id="修饰符有三种" tabindex="-1">修饰符有三种 <a class="header-anchor" href="#修饰符有三种" aria-label="Permalink to &quot;修饰符有三种&quot;">​</a></h2><table><thead><tr><th style="${ssrRenderStyle({ "text-align": "left" })}"><span style="${ssrRenderStyle({ "display": "block", "text-align": "left" })}">修饰符</span></th><th style="${ssrRenderStyle({ "text-align": "left" })}"><span style="${ssrRenderStyle({ "display": "block", "text-align": "left" })}"> 说明</span></th></tr></thead><tbody><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">i</td><td style="${ssrRenderStyle({ "text-align": "left" })}">忽略大小写匹配</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">g</td><td style="${ssrRenderStyle({ "text-align": "left" })}">全局匹配，即是匹配一个后继续匹配，直到结束</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">m</td><td style="${ssrRenderStyle({ "text-align": "left" })}">多行匹配，即是遇到换行后不停止匹配，直到结束</td></tr></tbody></table><h2 id="特殊元字符" tabindex="-1">特殊元字符 <a class="header-anchor" href="#特殊元字符" aria-label="Permalink to &quot;特殊元字符&quot;">​</a></h2><table><thead><tr><th style="${ssrRenderStyle({ "text-align": "left" })}"><span style="${ssrRenderStyle({ "display": "block", "text-align": "left" })}">字符</span></th><th style="${ssrRenderStyle({ "text-align": "left" })}"><span style="${ssrRenderStyle({ "display": "block", "text-align": "left" })}"> 说明</span></th></tr></thead><tbody><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">\\d</td><td style="${ssrRenderStyle({ "text-align": "left" })}">匹配0-9中任意一个数字</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">\\D</td><td style="${ssrRenderStyle({ "text-align": "left" })}">除了0-9以外的任意一个字符</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">\\w</td><td style="${ssrRenderStyle({ "text-align": "left" })}">数字、字母、下划线中任意一个字符</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">\\W</td><td style="${ssrRenderStyle({ "text-align": "left" })}">除了数字、字母、下划线以外任意一个字符</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">\\s</td><td style="${ssrRenderStyle({ "text-align": "left" })}">匹配一个空白符（空格；制表符（tab）\\t ；\\n换行符 ；\\r回车...）</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">\\S</td><td style="${ssrRenderStyle({ "text-align": "left" })}">除了空白符以外任意一个字符</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">\\b</td><td style="${ssrRenderStyle({ "text-align": "left" })}">匹配单词边界（边界字母和非字母连接的地方）</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">\\n</td><td style="${ssrRenderStyle({ "text-align": "left" })}">匹配一个换行符</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">.</td><td style="${ssrRenderStyle({ "text-align": "left" })}">除换行符\\n以外任意一个字符</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">\\</td><td style="${ssrRenderStyle({ "text-align": "left" })}">转义符，把有特殊意义的字符转义为普通字符</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">^</td><td style="${ssrRenderStyle({ "text-align": "left" })}">(读作caret）表示以某个元字符开头</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">$</td><td style="${ssrRenderStyle({ "text-align": "left" })}">表示以某个元字符结尾</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">x|y</td><td style="${ssrRenderStyle({ "text-align": "left" })}">表示x/y中任意一个</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">[]</td><td style="${ssrRenderStyle({ "text-align": "left" })}">表示匹配[ ]中任意一个字符</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">[xyz]</td><td style="${ssrRenderStyle({ "text-align": "left" })}">表示x/y/z中任意一个</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">[a-z]</td><td style="${ssrRenderStyle({ "text-align": "left" })}">表示匹配a-z中的任意一个小写字母</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">[A-Z]</td><td style="${ssrRenderStyle({ "text-align": "left" })}">表示匹配A-Z中的任意一个大写字母</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">[0-9]</td><td style="${ssrRenderStyle({ "text-align": "left" })}">表示匹配0-9中的任意一个数字，等价于\\d</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">[^abc]</td><td style="${ssrRenderStyle({ "text-align": "left" })}">表示除了a、b、c以外的任意一个字符</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">()</td><td style="${ssrRenderStyle({ "text-align": "left" })}">正则分组</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">(?: )</td><td style="${ssrRenderStyle({ "text-align": "left" })}">表示当前分组只匹配不捕获（取消分组捕获）</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">(?=)</td><td style="${ssrRenderStyle({ "text-align": "left" })}">正向预查</td></tr><tr><td style="${ssrRenderStyle({ "text-align": "left" })}">(?!)</td><td style="${ssrRenderStyle({ "text-align": "left" })}">负向预查</td></tr></tbody></table><h2 id="正向预查、负向预查" tabindex="-1">正向预查、负向预查 <a class="header-anchor" href="#正向预查、负向预查" aria-label="Permalink to &quot;正向预查、负向预查&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> reg1</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /x(?=y)/</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> // 表示匹配x，并且仅当x后紧跟着一个y（匹配紧跟着y的x）</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> reg2</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /x(?!y)/</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> // 表示匹配x，并且仅当x后没有y（匹配后面没有y的x）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="构造函数方式" tabindex="-1">构造函数方式 <a class="header-anchor" href="#构造函数方式" aria-label="Permalink to &quot;构造函数方式&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">var</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> reg</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> new</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> RegExp</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\d</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;gi&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="字面量方式" tabindex="-1">字面量方式 <a class="header-anchor" href="#字面量方式" aria-label="Permalink to &quot;字面量方式&quot;">​</a></h3><p>两个斜线内为正则的内容，后面可以跟修饰符，与第一种构造函数方式相比更简洁，缺点是正则内容<code>不能拼接</code>.</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;aBcd efg&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">match</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[a-z]+</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// [&quot;a&quot;]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;aBcd efg&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">match</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[a-z]+</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">i</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// [&quot;aBcd&quot;]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;aBcd efg&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">match</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[a-z]+</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">g</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// [&quot;a&quot;, &quot;cd&quot;, &quot;efg&quot;]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;aBcd efg&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">match</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[a-z]+</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">gi</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// [&quot;aBcd&quot;, &quot;efg&quot;]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;aB</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\n</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">cd</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\n</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> efg&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">match</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">^</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[a-z]+</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">m</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// [&quot;a&quot;]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;aB</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\n</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">cd</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\n</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> efg&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">match</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">^</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[a-z]+</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">g</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// [&quot;a&quot;]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;aB</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\n</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">cd</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\n</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> efg&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">match</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">^</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[a-z]+</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">gm</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// [&quot;a&quot;, &quot;cd&quot;]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 注意不是 [&quot;a&quot;, &quot;cd&quot;, &quot;efg&quot;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h3><p><code>js正则删除行内块之间的空格</code></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> let</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> rep</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> function</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">match</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">item1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">item2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">item3</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">   // item2 是空格部分</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">   return</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> item1</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> +</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> item3</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> }</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> source</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> template</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">content</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">replace</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/(&gt;)(\\s</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">*</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">)(&lt;)/</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">g</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">rep</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>手机号*过滤</code></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;123567905849&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">replace</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">^</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">(\\d</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">{3}</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">)(\\d</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">*?</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">)(\\d</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">{4}</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">)</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">$</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;$1****$3&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)  </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 扩展性好</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;123567905849&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">substr</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">3</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">+</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;****&#39;</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> +</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;123567905849&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">substr</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">7</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">11</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)  </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 快</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>用正则写一个验证23-68中的数字</code></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> reg6</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[23-68]</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}"> // 不是表示23-68；而是表示2或3-6或8</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">/* 将范围拆分为23-29；30-59；60-68 */</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> reg7</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">^</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">(2</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[3-9]</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[3-5]</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">\\d</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">|</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">6</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[0-8]</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">)</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">$</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>写一个正则，匹配第二个字母和第四个字母相同</code></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">//\\数字 表示(引用)数字代表的分组的内容</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> reg</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">^</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[a-z]</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[a-z]</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">)</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[a-z]</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">\\1$</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">reg</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;data&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)) </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// true</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">reg</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;java&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)) </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// true</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">reg</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">test</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;fear&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)) </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>数据类型检测</code></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">Object</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">isTypeOf</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}"> function</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">val</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 1. 给传进来的val进行数据类型检测</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> result</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> Object</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">prototype</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">toString</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">call</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">val</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 2. 用一个正则把需要的代表类型的字符串获取到</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> reg</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">^</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">object (</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[a-zA-Z]+</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">)</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">\\]</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">$</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    let</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> [,</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">catches</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">] </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> reg</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">exec</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">result</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 从捕获结果中把类型字符串解构出来</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">    // 3. 把上一步得到的代表类型的字符串返回</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> catches</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">Object</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">isTypeOf</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)) </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// Number</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">Object</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">isTypeOf</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">true</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)) </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// Boolean</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><code>url查询参数序列化</code></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 1. 方便理解但方法繁杂</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> url</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;https://www.baidu.com/s?name=mars&amp;age=18&amp;address=hebei&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> reg</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">^</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">?=&amp;]+</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">)=(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">^</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">?=&amp;]+</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">)/</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">ig</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> urlAry</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> url</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">match</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">reg</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> params</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">for</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}"> 0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> ; </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> &lt;</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> urlAry</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">length</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> ; </span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">++</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">){</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> item</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> urlAry</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">i</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> itemAry</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E5C07B" })}"> item</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">split</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#98C379" })}">&#39;=&#39;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 按照=把字符串拆分成一个数组，数组的第一项就是key，第二项就是value</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    params</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">itemAry</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">0</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]] </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> itemAry</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">] </span><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 位params添加对象</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">params</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 2. 不容易理解但方法简洁</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> url</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#98C379" })}"> &#39;https://www.baidu.com/s?name=mars&amp;age=18&amp;address=hebei&#39;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> params</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {};</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> reg</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">^</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">?=&amp;]+</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">)=(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">^</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">?=&amp;]+</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">)/</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">ig</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">url</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">replace</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">reg</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, (</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">str</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">key</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, </span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">value</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> params</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">key</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">] </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> value</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">console</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">log</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">params</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">);</span></span>
<span class="line"></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#7F848E", "font-style": "italic" })}">// 3. 方便理解2的</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">const</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}"> queryURLParameter</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">url</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">)</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    let</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> regParam</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> /(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">^</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">?&amp;=#]+</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">)=</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">?</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">(</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">[</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">^</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">?&amp;=#]+</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">)</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">?</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">/</span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">ig</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">,</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">    obj</span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}"> =</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {};</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E5C07B" })}">    url</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">.</span><span style="${ssrRenderStyle({ "color": "#61AFEF" })}">replace</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">(</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">regParam</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">, (...</span><span style="${ssrRenderStyle({ "color": "#E06C75", "font-style": "italic" })}">arg</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">) </span><span style="${ssrRenderStyle({ "color": "#C678DD" })}">=&gt;</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}"> {</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#E06C75" })}">        obj</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}">arg</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">1</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">]] </span><span style="${ssrRenderStyle({ "color": "#56B6C2" })}">=</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> arg</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">[</span><span style="${ssrRenderStyle({ "color": "#D19A66" })}">2</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">];</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">    });</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C678DD" })}">    return</span><span style="${ssrRenderStyle({ "color": "#E06C75" })}"> obj</span><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">;</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#ABB2BF" })}">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h3 id="参考文档" tabindex="-1">参考文档 <a class="header-anchor" href="#参考文档" aria-label="Permalink to &quot;参考文档&quot;">​</a></h3><p><a href="https://github.com/any86/any-rule" target="_blank" rel="noreferrer">正则大全</a></p></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("workspace/Js/reg.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const reg = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  reg as default
};
