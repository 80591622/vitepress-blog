import{_ as s,c as n,o as a,a5 as l}from"./chunks/framework.BQQWXjGs.js";const u=JSON.parse('{"title":"Vue预渲染","description":"","frontmatter":{},"headers":[],"relativePath":"workspace/Frame/vue/prerender.md","filePath":"workspace/Frame/vue/prerender.md","lastUpdated":1713971483000}'),e={name:"workspace/Frame/vue/prerender.md"},p=l(`<h1 id="vue预渲染" tabindex="-1">Vue预渲染 <a class="header-anchor" href="#vue预渲染" aria-label="Permalink to &quot;Vue预渲染&quot;">​</a></h1><h2 id="ssr" tabindex="-1">SSR <a class="header-anchor" href="#ssr" aria-label="Permalink to &quot;SSR&quot;">​</a></h2><p>之前一段时间调研了React的<a href="https://juejin.im/post/6854573205349367815" target="_blank" rel="noreferrer">SSR</a>,今天有时间研究下Vue的预渲染。老套路还是先说说预渲染有什么好处，跟SSR有什么区别？？？？ Let&#39;s look down 👓⏬</p><p>如果你调研服务器端渲染 (SSR) 只是用来改善少数营销页面（例如 <code>/</code>, <code>/about</code>, <code>/contact</code> 等）的 SEO，那么你可能需要<strong>预渲染</strong>。无需使用 web 服务器实时动态编译 HTML，而是使用预渲染方式，在构建时 (build time) 简单地生成针对特定路由的静态 HTML 文件。优点是设置预渲染更简单，并可以将你的前端作为一个完全静态的站点。</p><p>预渲染是为了页面有更好的加载速度，而且可以改善少数页面的SEO，为什么是少数的，因为大量的路由会使预渲染变得非常缓慢（构建时）。预渲染基本原理是 - 启动无头浏览器，加载应用程序的路由并将结果保存到静态HTML文件中。然后，您可以将其与以前使用的任何静态文件服务解决方案一起使用，用最少的代码做到你想要的效果几乎没有任何的侵入性。</p><p>看下他们的区别：</p><table><thead><tr><th style="text-align:left;"><a href="https://juejin.im/post/6854573205349367815" target="_blank" rel="noreferrer">SSR</a></th><th style="text-align:left;"><a href="https://www.npmjs.com/package/prerender-spa-plugin" target="_blank" rel="noreferrer">预渲染</a></th></tr></thead><tbody><tr><td style="text-align:left;">运行时</td><td style="text-align:left;">构建时</td></tr><tr><td style="text-align:left;">代码侵入性大，开发调试代价高，报错不明显（钩子）</td><td style="text-align:left;">几乎没有侵入性</td></tr><tr><td style="text-align:left;">SEO更彻底</td><td style="text-align:left;">有局限性（动态URL的异步请求）</td></tr><tr><td style="text-align:left;">首屏加载更快</td><td style="text-align:left;">首屏加载快</td></tr><tr><td style="text-align:left;">需要Node环境，耗费CPU内存</td><td style="text-align:left;">不需要Node环境</td></tr><tr><td style="text-align:left;">难度较大（有现成的框架）</td><td style="text-align:left;">难度小</td></tr><tr><td style="text-align:left;">动态内容直出 HTMl</td><td style="text-align:left;">直出有限，客户端会再次加载（跳屏）</td></tr></tbody></table><h2 id="上干货" tabindex="-1">上干货 <a class="header-anchor" href="#上干货" aria-label="Permalink to &quot;上干货&quot;">​</a></h2><p>预渲染核心插件：<strong>prerender-spa-plugin</strong> 为了更好的SEO一般会动态需改meta的内容 <strong>vue-meta-info</strong></p><p>安装：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> add</span><span style="color:#98C379;"> prerender-spa-plugin</span><span style="color:#98C379;"> vue-meta-info</span><span style="color:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>prerender-spa-plugin 是基于puppeteer的，下载出错多试几次，百度很多文章可解决</p><p><strong>vue.config.js中进行配置</strong></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> PrerenderSPAPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;prerender-spa-plugin&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> Renderer</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> PrerenderSPAPlugin</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">PuppeteerRenderer</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  configureWebpack</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#C678DD;">       new</span><span style="color:#61AFEF;"> PrerenderSPAPlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">          // 生成文件的路径，这个目录只能有一级。若目录层次大于一级，在生成的时候不会有任何错误提示，在预渲染的时候只会卡着不动</span></span>
<span class="line"><span style="color:#E06C75;">          staticDir</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;./dist&#39;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">          // 可选-渲染的应用程序应输出到的路径。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">          // (默认为staticDir。）</span></span>
<span class="line"><span style="color:#E06C75;">          outputDir</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">join</span><span style="color:#ABB2BF;">（</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;"> ，</span><span style="color:#98C379;">&#39;/dist/prerendered&#39;</span><span style="color:#ABB2BF;">）， </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">          // 对应自己的路由文件</span></span>
<span class="line"><span style="color:#E06C75;">          routes</span><span style="color:#ABB2BF;">: [ </span><span style="color:#98C379;">&#39;/&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;/home&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;/list&#39;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">          // 若没有这段则不会进行预编译</span></span>
<span class="line"><span style="color:#E06C75;">          renderer</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Renderer</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">            inject</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">              foo</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;bar&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">            },</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // headless: false,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 在 main.js 中 document.dispatchEvent(new Event(&#39;render-event&#39;))，两者的事件名称要对应上。</span></span>
<span class="line"><span style="color:#E06C75;">            renderAfterDocumentEvent</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;render-event&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 可选-等待渲染，直到经过一定的时间。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 不推荐</span></span>
<span class="line"><span style="color:#E06C75;">            renderAfterTime</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">5000</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 可选-默认为0，无限制。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 路由是异步呈现的。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 使用它来限制并行渲染的路由数量</span></span>
<span class="line"><span style="color:#E06C75;">            maxConcurrentRoutes</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;"> ， </span></span>
<span class="line"><span style="color:#ABB2BF;">          })</span></span>
<span class="line"><span style="color:#ABB2BF;">        }),</span></span>
<span class="line"><span style="color:#ABB2BF;">    ]</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p><strong>main.js中进行配置</strong></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> Vue</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;vue&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> MetaInfo</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;vue-meta-info&#39;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// ......</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">MetaInfo</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Vue</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">  router</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  store</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">  render</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;font-style:italic;">h</span><span style="color:#C678DD;">=&gt;</span><span style="color:#61AFEF;">h</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">App</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#61AFEF;">  mounted</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#E5C07B;">     document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">dispatchEvent</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Event</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;render-event&#39;</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}).</span><span style="color:#61AFEF;">$mount</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;#app&#39;</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><code>注：预渲染方式下的route需采用history模式，否则每个打包生成的index.html的文件内容会一样</code></p><h2 id="组件内静态使用metainfo" tabindex="-1">组件内静态使用metaInfo <a class="header-anchor" href="#组件内静态使用metainfo" aria-label="Permalink to &quot;组件内静态使用metaInfo&quot;">​</a></h2><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">template</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">...</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">template</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  metaInfo</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    title</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;My Example App&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 可以是异步的</span></span>
<span class="line"><span style="color:#E06C75;">    meta</span><span style="color:#ABB2BF;">: [{                 </span></span>
<span class="line"><span style="color:#E06C75;">      name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;keyWords&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      content</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;预渲染&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }]</span></span>
<span class="line"><span style="color:#E06C75;">    link</span><span style="color:#ABB2BF;">: [{                </span></span>
<span class="line"><span style="color:#E06C75;">      rel</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;asstes&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      href</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;file.wkdevhub.cn&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }]</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>`,19),r=[p];function o(t,c,i,B,y,b){return a(),n("div",null,r)}const m=s(e,[["render",o]]);export{u as __pageData,m as default};
