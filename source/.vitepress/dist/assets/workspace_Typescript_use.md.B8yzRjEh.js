import{_ as s,c as n,o as a,a5 as l}from"./chunks/framework.BQQWXjGs.js";const C=JSON.parse('{"title":"使用指南（antdp）","description":"","frontmatter":{},"headers":[],"relativePath":"workspace/Typescript/use.md","filePath":"workspace/Typescript/use.md","lastUpdated":1713942612000}'),p={name:"workspace/Typescript/use.md"},o=l(`<h1 id="使用指南-antdp" tabindex="-1">使用指南（antdp） <a class="header-anchor" href="#使用指南-antdp" aria-label="Permalink to &quot;使用指南（antdp）&quot;">​</a></h1><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> type</span><span style="color:#E5C07B;"> SiderTheme</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;light&#39;</span><span style="color:#ABB2BF;"> | </span><span style="color:#98C379;">&#39;dark&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> interface</span><span style="color:#E5C07B;"> GlobalHeaderRightProps</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> ConnectProps</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  theme</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">SiderTheme</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  layout</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;sidemenu&#39;</span><span style="color:#ABB2BF;"> | </span><span style="color:#98C379;">&#39;topmenu&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">validateFields</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">unknown</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">fieldsValue</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">searchParamsType</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">interface</span><span style="color:#E5C07B;"> IProps</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;"> form</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">FormComponentProps</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&#39;form&#39;</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">React</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">FormEvent</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;">{}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p><strong>d.ts</strong></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  Reducer</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  AnyAction</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  ReducersMapObject</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  Dispatch</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  MiddlewareAPI</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  StoreEnhancer</span></span>
<span class="line"><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;redux&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">History</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &quot;history&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> interface</span><span style="color:#E5C07B;"> onActionFunc</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  (</span><span style="color:#E06C75;font-style:italic;">api</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">MiddlewareAPI</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">&gt;): </span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> interface</span><span style="color:#E5C07B;"> ReducerEnhancer</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  (</span><span style="color:#E06C75;font-style:italic;">reducer</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Reducer</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">&gt;): </span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> interface</span><span style="color:#E5C07B;"> Hooks</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">  onError</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: (</span><span style="color:#E06C75;font-style:italic;">e</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Error</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">dispatch</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Dispatch</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">&gt;) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> void</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  onAction</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">onActionFunc</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">onActionFunc</span><span style="color:#ABB2BF;">[],</span></span>
<span class="line"><span style="color:#61AFEF;">  onStateChange</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> void</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  onReducer</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">ReducerEnhancer</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">  onEffect</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> void</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">  onHmr</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> void</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  extraReducers</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">ReducersMapObject</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  extraEnhancers</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">StoreEnhancer</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">&gt;[],</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> type</span><span style="color:#E5C07B;"> DvaOption</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Hooks</span><span style="color:#ABB2BF;"> &amp; {</span></span>
<span class="line"><span style="color:#E06C75;">  initialState</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  history</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> interface</span><span style="color:#E5C07B;"> EffectsCommandMap</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">  put</span><span style="color:#ABB2BF;">: &lt;</span><span style="color:#E5C07B;">A</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> AnyAction</span><span style="color:#ABB2BF;">&gt;(</span><span style="color:#E06C75;font-style:italic;">action</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">A</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> any</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">  call</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Function</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">  select</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Function</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">  take</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Function</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">  cancel</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Function</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  [</span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">]: </span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> type</span><span style="color:#E5C07B;"> Effect</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">action</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">AnyAction</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">effects</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">EffectsCommandMap</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> void</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> type</span><span style="color:#E5C07B;"> EffectType</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;takeEvery&#39;</span><span style="color:#ABB2BF;"> | </span><span style="color:#98C379;">&#39;takeLatest&#39;</span><span style="color:#ABB2BF;"> | </span><span style="color:#98C379;">&#39;watcher&#39;</span><span style="color:#ABB2BF;"> | </span><span style="color:#98C379;">&#39;throttle&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> type</span><span style="color:#E5C07B;"> EffectWithType</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [</span><span style="color:#E5C07B;">Effect</span><span style="color:#ABB2BF;">, { </span><span style="color:#E06C75;">type</span><span style="color:#ABB2BF;"> : </span><span style="color:#E5C07B;">EffectType</span><span style="color:#ABB2BF;"> }];</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> type</span><span style="color:#E5C07B;"> Subscription</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">api</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">SubscriptionAPI</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">done</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Function</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> void</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> type</span><span style="color:#E5C07B;"> ReducersMapObjectWithEnhancer</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [</span><span style="color:#E5C07B;">ReducersMapObject</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">ReducerEnhancer</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> interface</span><span style="color:#E5C07B;"> EffectsMapObject</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  [</span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">]: </span><span style="color:#E5C07B;">Effect</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">EffectWithType</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> interface</span><span style="color:#E5C07B;"> SubscriptionAPI</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  history</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">History</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  dispatch</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Dispatch</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">&gt;,</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> interface</span><span style="color:#E5C07B;"> SubscriptionsMapObject</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  [</span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">]: </span><span style="color:#E5C07B;">Subscription</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> interface</span><span style="color:#E5C07B;"> Model</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  namespace</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  state</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">any</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  reducers</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">ReducersMapObject</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">ReducersMapObjectWithEnhancer</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  effects</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">EffectsMapObject</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  subscriptions</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">SubscriptionsMapObject</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> interface</span><span style="color:#E5C07B;"> RouterAPI</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  history</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">History</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  app</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">DvaInstance</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> interface</span><span style="color:#E5C07B;"> Router</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  (</span><span style="color:#E06C75;font-style:italic;">api</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">RouterAPI</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">JSX</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">Element</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> interface</span><span style="color:#E5C07B;"> DvaInstance</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   * Register an object of hooks on the application.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;"> hooks</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#61AFEF;">  use</span><span style="color:#ABB2BF;">: (</span><span style="color:#E06C75;font-style:italic;">hooks</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Hooks</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> void</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   * Register a model.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;"> model</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#61AFEF;">  model</span><span style="color:#ABB2BF;">: (</span><span style="color:#E06C75;font-style:italic;">model</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Model</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> void</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   * Unregister a model.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;"> namespace</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#61AFEF;">  unmodel</span><span style="color:#ABB2BF;">: (</span><span style="color:#E06C75;font-style:italic;">namespace</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> void</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   * Config router. Takes a function with arguments { history, dispatch },</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   * and expects router config. It use the same api as react-router,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   * return jsx elements or JavaScript Object for dynamic routing.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;"> router</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#61AFEF;">  router</span><span style="color:#ABB2BF;">: (</span><span style="color:#E06C75;font-style:italic;">router</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Router</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> void</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  /**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   * Start the application. Selector is optional. If no selector</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   * arguments, it will return a function that return JSX elements.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E06C75;font-style:italic;"> selector</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   */</span></span>
<span class="line"><span style="color:#61AFEF;">  start</span><span style="color:#ABB2BF;">: (</span><span style="color:#E06C75;font-style:italic;">selector</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">HTMLElement</span><span style="color:#ABB2BF;"> | </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> any</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> dva</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">opts</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">DvaOption</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">DvaInstance</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * Connects a React component to Dva.</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> function</span><span style="color:#61AFEF;"> connect</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#61AFEF;">  mapStateToProps</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Function</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">  mapDispatchToProps</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Function</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">  mergeProps</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Function</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">  options</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Object</span></span>
<span class="line"><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">Function</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br></div></div><p><strong>model</strong></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">Reducer</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;redux&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">Subscription</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">Effect</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;dva&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">NoticeIconData</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;@/components/NoticeIcon&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">queryNotices</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;@/services/user&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">ConnectState</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;./connect.d&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> interface</span><span style="color:#E5C07B;"> NoticeItem</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> NoticeIconData</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  id</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  type</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  status</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> interface</span><span style="color:#E5C07B;"> GlobalModelState</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  collapsed</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  notices</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">NoticeItem</span><span style="color:#ABB2BF;">[];</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> interface</span><span style="color:#E5C07B;"> GlobalModelType</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  namespace</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;global&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  state</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">GlobalModelState</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  effects</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    fetchNotices</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Effect</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    clearNotices</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Effect</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    changeNoticeReadState</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Effect</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  };</span></span>
<span class="line"><span style="color:#E06C75;">  reducers</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    changeLayoutCollapsed</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Reducer</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">GlobalModelState</span><span style="color:#ABB2BF;">&gt;;</span></span>
<span class="line"><span style="color:#E06C75;">    saveNotices</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Reducer</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">GlobalModelState</span><span style="color:#ABB2BF;">&gt;;</span></span>
<span class="line"><span style="color:#E06C75;">    saveClearedNotices</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Reducer</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">GlobalModelState</span><span style="color:#ABB2BF;">&gt;;</span></span>
<span class="line"><span style="color:#ABB2BF;">  };</span></span>
<span class="line"><span style="color:#E06C75;">  subscriptions</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">setup</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Subscription</span><span style="color:#ABB2BF;"> };</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> GlobalModel</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">GlobalModelType</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  namespace</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;global&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">  state</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    collapsed</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    notices</span><span style="color:#ABB2BF;">: [],</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">  effects</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#C678DD;">    *</span><span style="color:#61AFEF;">fetchNotices</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">_</span><span style="color:#ABB2BF;">, { </span><span style="color:#E06C75;font-style:italic;">call</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">put</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">select</span><span style="color:#ABB2BF;"> }) {</span></span>
<span class="line"><span style="color:#C678DD;">      const</span><span style="color:#E5C07B;"> data</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> yield</span><span style="color:#61AFEF;"> call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">queryNotices</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">      yield</span><span style="color:#61AFEF;"> put</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">        type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;saveNotices&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        payload</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      });</span></span>
<span class="line"><span style="color:#C678DD;">      const</span><span style="color:#E5C07B;"> unreadCount</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> yield</span><span style="color:#61AFEF;"> select</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">        (</span><span style="color:#E06C75;font-style:italic;">state</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">ConnectState</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> state</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">global</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">notices</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">filter</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">item</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#56B6C2;"> !</span><span style="color:#E5C07B;">item</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">read</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      );</span></span>
<span class="line"><span style="color:#C678DD;">      yield</span><span style="color:#61AFEF;"> put</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">        type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;user/changeNotifyCount&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        payload</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">          totalCount</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">          unreadCount</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#ABB2BF;">      });</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#C678DD;">    *</span><span style="color:#61AFEF;">clearNotices</span><span style="color:#ABB2BF;">({ </span><span style="color:#E06C75;font-style:italic;">payload</span><span style="color:#ABB2BF;"> }, { </span><span style="color:#E06C75;font-style:italic;">put</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">select</span><span style="color:#ABB2BF;"> }) {</span></span>
<span class="line"><span style="color:#C678DD;">      yield</span><span style="color:#61AFEF;"> put</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">        type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;saveClearedNotices&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        payload</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      });</span></span>
<span class="line"><span style="color:#C678DD;">      const</span><span style="color:#E5C07B;"> count</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> yield</span><span style="color:#61AFEF;"> select</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">state</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">ConnectState</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> state</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">global</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">notices</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">      const</span><span style="color:#E5C07B;"> unreadCount</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">number</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> yield</span><span style="color:#61AFEF;"> select</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">        (</span><span style="color:#E06C75;font-style:italic;">state</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">ConnectState</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> state</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">global</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">notices</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">filter</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">item</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#56B6C2;"> !</span><span style="color:#E5C07B;">item</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">read</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      );</span></span>
<span class="line"><span style="color:#C678DD;">      yield</span><span style="color:#61AFEF;"> put</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">        type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;user/changeNotifyCount&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        payload</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">          totalCount</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">count</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">          unreadCount</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#ABB2BF;">      });</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#C678DD;">    *</span><span style="color:#61AFEF;">changeNoticeReadState</span><span style="color:#ABB2BF;">({ </span><span style="color:#E06C75;font-style:italic;">payload</span><span style="color:#ABB2BF;"> }, { </span><span style="color:#E06C75;font-style:italic;">put</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">select</span><span style="color:#ABB2BF;"> }) {</span></span>
<span class="line"><span style="color:#C678DD;">      const</span><span style="color:#E5C07B;"> notices</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">NoticeItem</span><span style="color:#ABB2BF;">[] </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> yield</span><span style="color:#61AFEF;"> select</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">state</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">ConnectState</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span></span>
<span class="line"><span style="color:#E5C07B;">        state</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">global</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">notices</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">map</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">item</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">          const</span><span style="color:#E5C07B;"> notice</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> { ...</span><span style="color:#E06C75;">item</span><span style="color:#ABB2BF;"> };</span></span>
<span class="line"><span style="color:#C678DD;">          if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">notice</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">id</span><span style="color:#56B6C2;"> ===</span><span style="color:#E06C75;"> payload</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">            notice</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">read</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> true</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">          }</span></span>
<span class="line"><span style="color:#C678DD;">          return</span><span style="color:#E06C75;"> notice</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">        }),</span></span>
<span class="line"><span style="color:#ABB2BF;">      );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">      yield</span><span style="color:#61AFEF;"> put</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">        type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;saveNotices&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        payload</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">notices</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">      yield</span><span style="color:#61AFEF;"> put</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">        type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;user/changeNotifyCount&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        payload</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">          totalCount</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">notices</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">          unreadCount</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">notices</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">filter</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">item</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#56B6C2;"> !</span><span style="color:#E5C07B;">item</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">read</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#ABB2BF;">      });</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">  reducers</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#61AFEF;">    changeLayoutCollapsed</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">state</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">notices</span><span style="color:#ABB2BF;">: [], </span><span style="color:#E06C75;">collapsed</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;"> }, { </span><span style="color:#E06C75;font-style:italic;">payload</span><span style="color:#ABB2BF;"> }): </span><span style="color:#E5C07B;">GlobalModelState</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">        ...</span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        collapsed</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">payload</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      };</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#61AFEF;">    saveNotices</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">state</span><span style="color:#ABB2BF;">, { </span><span style="color:#E06C75;font-style:italic;">payload</span><span style="color:#ABB2BF;"> }): </span><span style="color:#E5C07B;">GlobalModelState</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">        collapsed</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        ...</span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        notices</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">payload</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      };</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#61AFEF;">    saveClearedNotices</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">state</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">notices</span><span style="color:#ABB2BF;">: [], </span><span style="color:#E06C75;">collapsed</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;"> }, { </span><span style="color:#E06C75;font-style:italic;">payload</span><span style="color:#ABB2BF;"> }): </span><span style="color:#E5C07B;">GlobalModelState</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">        collapsed</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        ...</span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        notices</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">state</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">notices</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">filter</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">item</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">boolean</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#E5C07B;"> item</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">type</span><span style="color:#56B6C2;"> !==</span><span style="color:#E06C75;"> payload</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">      };</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">  subscriptions</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#61AFEF;">    setup</span><span style="color:#ABB2BF;">({ </span><span style="color:#E06C75;font-style:italic;">history</span><span style="color:#ABB2BF;"> }): </span><span style="color:#E5C07B;">void</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      // Subscribe history(url) change, trigger \`load\` action if pathname is \`/\`</span></span>
<span class="line"><span style="color:#E5C07B;">      history</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">listen</span><span style="color:#ABB2BF;">(({ </span><span style="color:#E06C75;font-style:italic;">pathname</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">search</span><span style="color:#ABB2BF;"> }): </span><span style="color:#E5C07B;">void</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">typeof</span><span style="color:#E5C07B;"> window</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">ga</span><span style="color:#56B6C2;"> !==</span><span style="color:#98C379;"> &#39;undefined&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">          window</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">ga</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;send&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;pageview&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">pathname</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> search</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">      });</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#E06C75;"> GlobalModel</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br></div></div><p><strong>connect</strong></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">Dispatch</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">AnyAction</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;redux&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">interface</span><span style="color:#E5C07B;"> LoginProps</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  dispatch</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Dispatch</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">AnyAction</span><span style="color:#ABB2BF;">&gt;;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">@</span><span style="color:#61AFEF;">connect</span><span style="color:#ABB2BF;">(({ </span><span style="color:#E06C75;font-style:italic;">login</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">loading</span><span style="color:#ABB2BF;"> }: </span><span style="color:#E5C07B;">ConnectState</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> ({</span></span>
<span class="line"><span style="color:#E06C75;">  userLogin</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">login</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  submitting</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">loading</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">effects</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&#39;login/login&#39;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">}))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> interface</span><span style="color:#E5C07B;"> Loading</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  global</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  effects</span><span style="color:#ABB2BF;">: { [</span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;">]: </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;"> | undefined };</span></span>
<span class="line"><span style="color:#E06C75;">  models</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">    global</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    menu</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    setting</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    user</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    login</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">boolean</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  };</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> interface</span><span style="color:#E5C07B;"> ConnectState</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  global</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">GlobalModelState</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  loading</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">Loading</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  settings</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">SettingModelState</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  user</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">UserModelState</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">  login</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">LoginModelType</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div>`,8),e=[o];function c(r,t,B,y,i,b){return a(),n("div",null,e)}const A=s(p,[["render",c]]);export{C as __pageData,A as default};
