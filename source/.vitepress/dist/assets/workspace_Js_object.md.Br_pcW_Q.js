import{_ as s,c as n,o as a,a5 as l}from"./chunks/framework.BQQWXjGs.js";const C=JSON.parse('{"title":"Object的方法简单整理","description":"","frontmatter":{},"headers":[],"relativePath":"workspace/Js/object.md","filePath":"workspace/Js/object.md","lastUpdated":1713955424000}'),p={name:"workspace/Js/object.md"},o=l(`<h1 id="object的方法简单整理" tabindex="-1">Object的方法简单整理 <a class="header-anchor" href="#object的方法简单整理" aria-label="Permalink to &quot;Object的方法简单整理&quot;">​</a></h1><h2 id="object-create" tabindex="-1">Object.create() <a class="header-anchor" href="#object-create" aria-label="Permalink to &quot;Object.create()&quot;">​</a></h2><p>描述：该方法创建一个新对象，将对象继承到__proto__属性上<br> 格式：Object.create(proto[, propertiesObject])<br> 用法：如果用传统的方法要给一个对象的原型上添加属性和方法，是通过 <strong>propt</strong> 实现的<br></p><p>通过构造函数</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//创建一个构造函数或者类</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#61AFEF;"> People</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">(){}</span></span>
<span class="line"><span style="color:#E5C07B;">People</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">y</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 20</span></span>
<span class="line"><span style="color:#E5C07B;">People</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">z</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 40</span></span>
<span class="line"><span style="color:#E5C07B;">People</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">showNum</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">() {}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//通过构造函数创建实例</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> p</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> People</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">p</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__proto__</span><span style="color:#56B6C2;"> ===</span><span style="color:#E5C07B;"> People</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>使用<code>Object.create()</code></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> proto</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    y</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">20</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    z</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">40</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">    showNum</span><span style="color:#ABB2BF;">(){}</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> o</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">create</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">proto</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="object-defineproperty" tabindex="-1">Object.defineProperty() <a class="header-anchor" href="#object-defineproperty" aria-label="Permalink to &quot;Object.defineProperty()&quot;">​</a></h2><p>Object.defineProperty(obj, prop, descriptor)</p><p>obj: 需要被操作的目标对象<br> prop: 目标对象需要定义或修改的属性的名称<br> descriptor: 将被定义或修改的属性的描述符<br></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> obj</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Object</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">defineProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#E06C75;">    configurable</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    writable</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    enumerable</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;张三&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">obj</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">)  </span><span style="color:#7F848E;font-style:italic;">//张三</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="对象的数据属性" tabindex="-1">对象的数据属性 <a class="header-anchor" href="#对象的数据属性" aria-label="Permalink to &quot;对象的数据属性&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> person</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {}</span></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">defineProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;">,{</span></span>
<span class="line"><span style="color:#E06C75;">    configurable</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span><span style="color:#7F848E;font-style:italic;">// 能否使用delete、能否需改属性特性、或能否修改访问器属性、，false为不可重新定义，默认值为true</span></span>
<span class="line"><span style="color:#E06C75;">    enumerable</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span><span style="color:#7F848E;font-style:italic;">// 不可枚举 对象属性是否可通过for-in循环，flase为不可循环，默认值为true</span></span>
<span class="line"><span style="color:#E06C75;">    writable</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span><span style="color:#7F848E;font-style:italic;">// 对象属性是否可修改,flase为不可修改，默认值为true</span></span>
<span class="line"><span style="color:#E06C75;">    value</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&#39;xiaoming&#39;</span><span style="color:#7F848E;font-style:italic;"> // 对象属性的默认值，默认值为undefined</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// value</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">);</span><span style="color:#7F848E;font-style:italic;">// xiaoming，默认value</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// writable</span></span>
<span class="line"><span style="color:#E5C07B;">person</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;666&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">);</span><span style="color:#7F848E;font-style:italic;">// xiaoming，不可修改value</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// enumerable</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> i</span><span style="color:#C678DD;"> in</span><span style="color:#E06C75;"> person</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">]) </span><span style="color:#7F848E;font-style:italic;">// 无结果，不可循环</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">keys</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// []  与for in区别在于不能遍历出原型链上的属性</span></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getOwnPropertyNames</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// [&#39;name&#39;]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// configurable</span></span>
<span class="line"><span style="color:#C678DD;">delete</span><span style="color:#E5C07B;"> person</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">person</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">)</span><span style="color:#7F848E;font-style:italic;">// xiaoming，不可删除</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">defineProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;">,{</span></span>
<span class="line"><span style="color:#E06C75;">    configurable</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">true</span><span style="color:#7F848E;font-style:italic;"> // 不可修改，将抛出错误</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// Object.getOwnPropertyDescriptors(person) // 返回自身所有的属性</span></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getOwnPropertyDescriptor</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 返回自身属性</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">  configurable</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span></span>
<span class="line"><span style="color:#E06C75;">  enumerable</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span></span>
<span class="line"><span style="color:#E06C75;">  value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;xiaoming&quot;</span></span>
<span class="line"><span style="color:#E06C75;">  writable</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h2 id="object-defineproperties" tabindex="-1">Object.defineProperties() <a class="header-anchor" href="#object-defineproperties" aria-label="Permalink to &quot;Object.defineProperties()&quot;">​</a></h2><p>Object.defineProperties(obj, props)</p><p>obj: 将要被添加属性或修改属性的对象<br> props: 该对象的一个或多个键值对定义了将要为对象添加或修改的属性的具体配置</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> obj</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Object</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">defineProperties</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#E06C75;">    name</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">        value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;张三&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        configurable</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        writable</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        enumerable</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#E06C75;">    age</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">        value</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">18</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        configurable</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 张三, 18</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="object-getprototypeof" tabindex="-1">Object.getPrototypeOf() <a class="header-anchor" href="#object-getprototypeof" aria-label="Permalink to &quot;Object.getPrototypeOf()&quot;">​</a></h2><p>描述：用于读取一个对象的原型对象；</p><p>格式：Object.getPrototypeOf(obj);</p><p>用法：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getPrototypeOf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;foo&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">===</span><span style="color:#E5C07B;"> String</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &#39;foo&#39;</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__proto__</span><span style="color:#7F848E;font-style:italic;"> // true</span></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getPrototypeOf</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">===</span><span style="color:#E5C07B;"> Boolean</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#56B6C2;"> ===</span><span style="color:#E5C07B;"> true</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__proto__</span><span style="color:#7F848E;font-style:italic;"> // true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="object-setprototypeof" tabindex="-1">Object.setPrototypeOf( <a class="header-anchor" href="#object-setprototypeof" aria-label="Permalink to &quot;Object.setPrototypeOf(&quot;">​</a></h2><p>描述: Object.setPrototypeOf方法的作用与_proto_相同，用来设置一个对象的prototype对象，返回参数对象本身</p><p>格式：Object.setPrototypeOf(object, prototype)</p><p>该方法等同于下面的函数：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">obj</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">proto</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">  obj</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">__proto__</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> proto</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#E06C75;"> obj</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>示例</strong></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> proto</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {};</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> obj</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;"> };</span></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setPrototypeOf</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">proto</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E5C07B;">proto</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">y</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 20</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">proto</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">z</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 40</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#E5C07B;">obj</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">x</span><span style="color:#7F848E;font-style:italic;"> // 10</span></span>
<span class="line"><span style="color:#E5C07B;">obj</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">y</span><span style="color:#7F848E;font-style:italic;"> // 20</span></span>
<span class="line"><span style="color:#E5C07B;">obj</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">z</span><span style="color:#7F848E;font-style:italic;"> // 40</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="keys-values-entries" tabindex="-1">keys &amp; values &amp; entries <a class="header-anchor" href="#keys-values-entries" aria-label="Permalink to &quot;keys &amp; values &amp; entries&quot;">​</a></h2><ul><li>Object.keys 键</li><li>Object.values 值</li><li>Object.entries 组件二级数组</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> obj</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;">  {</span></span>
<span class="line"><span style="color:#E06C75;">    address</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;434343422&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    admin</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;3434&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    adminCharater</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;4444&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    adminRecord</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;33&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    article</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;22&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    artist</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;11&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#E5C07B;">  Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">entries</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">)</span><span style="color:#7F848E;font-style:italic;">// [[&quot;address&quot;, &quot;434343422&quot;]...]</span></span>
<span class="line"><span style="color:#E5C07B;">  Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">keys</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//[&quot;address&quot;, &quot;admin&quot;, &quot;adminCharater&quot;, &quot;adminRecord&quot;, &quot;article&quot;, &quot;artist&quot;]</span></span>
<span class="line"><span style="color:#E5C07B;">  Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">values</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//[&quot;434343422&quot;, &quot;3434&quot;, &quot;4444&quot;, &quot;33&quot;, &quot;22&quot;, &quot;11&quot;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//遍历数组，字符串等...</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> value</span><span style="color:#C678DD;"> of</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">values</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">)) { </span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//遍历对象</span></span>
<span class="line"><span style="color:#C678DD;">for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> value</span><span style="color:#C678DD;"> in</span><span style="color:#E06C75;"> obj</span><span style="color:#ABB2BF;">) { </span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="object-keys、object-getownpropertynames区别" tabindex="-1">Object.keys、Object.getOwnPropertyNames区别 <a class="header-anchor" href="#object-keys、object-getownpropertynames区别" aria-label="Permalink to &quot;Object.keys、Object.getOwnPropertyNames区别&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> obj</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> { </span><span style="color:#98C379;">&quot;prop1&quot;</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;v1&quot;</span><span style="color:#ABB2BF;"> };</span></span>
<span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">defineProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;prop2&quot;</span><span style="color:#ABB2BF;">, { </span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;v2&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">writable</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;"> });</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">keys</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">);           </span><span style="color:#7F848E;font-style:italic;">//output：1</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getOwnPropertyNames</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">);    </span><span style="color:#7F848E;font-style:italic;">//output：2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>内置的判断，访问和迭代方法</strong></p><table><thead><tr><th style="text-align:left;">功能</th><th style="text-align:left;">可枚举(writable:true)</th><th style="text-align:left;">可枚举、不可枚举</th></tr></thead><tbody><tr><td style="text-align:left;">判断</td><td style="text-align:left;">propertyIsEnumerable</td><td style="text-align:left;">in/hasOwnProperty</td></tr><tr><td style="text-align:left;">访问</td><td style="text-align:left;">Object.keys</td><td style="text-align:left;">Object.getOwnPropertyNames</td></tr><tr><td style="text-align:left;">迭代</td><td style="text-align:left;">for..in..</td><td style="text-align:left;">Object.getOwnPropertyNames</td></tr></tbody></table><h2 id="object-的-set-和-get-用法" tabindex="-1">Object 的 set 和 get 用法 <a class="header-anchor" href="#object-的-set-和-get-用法" aria-label="Permalink to &quot;Object 的 set 和 get 用法&quot;">​</a></h2><p>在初始化对象的时候这样使用</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> obj</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    a</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    b</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#C678DD;">    set</span><span style="color:#61AFEF;"> c</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">x</span><span style="color:#ABB2BF;">){</span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;c被赋值：&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">);</span><span style="color:#E06C75;">c</span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">;},</span></span>
<span class="line"><span style="color:#C678DD;">    get</span><span style="color:#61AFEF;"> c</span><span style="color:#ABB2BF;">(){</span><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;c被取出: &#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">c</span><span style="color:#ABB2BF;">);</span><span style="color:#C678DD;">return</span><span style="color:#E06C75;"> c</span><span style="color:#ABB2BF;">}  </span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">obj</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">c</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">3</span><span style="color:#7F848E;font-style:italic;">  //c被赋值： 3</span></span>
<span class="line"><span style="color:#E5C07B;">obj</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">c</span><span style="color:#7F848E;font-style:italic;">  //c被取出:  3</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>对象初始化之后可以这样添加属性</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> obj</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    a</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    b</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">obj</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">__defineGetter__</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;c&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(){</span><span style="color:#C678DD;">return</span><span style="color:#E06C75;"> c</span><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#E5C07B;">obj</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">__defineSetter__</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;c&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">x</span><span style="color:#ABB2BF;">){</span><span style="color:#E06C75;">c</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> x</span><span style="color:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>或者使用</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">defineProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">c</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#61AFEF;">　　set</span><span style="color:#ABB2BF;">:</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">x</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">　　　　console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;c被赋值：&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">　　　　c</span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;">x</span></span>
<span class="line"><span style="color:#ABB2BF;">　　},</span></span>
<span class="line"><span style="color:#61AFEF;">　　get</span><span style="color:#ABB2BF;">:</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#E5C07B;">　　　　console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;c被取出：&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">c</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">　　　　return</span><span style="color:#E06C75;"> c</span></span>
<span class="line"><span style="color:#ABB2BF;">　　}</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"><span style="color:#E5C07B;">obj</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">c</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">3</span><span style="color:#7F848E;font-style:italic;">  //c被赋值： 3</span></span>
<span class="line"><span style="color:#E5C07B;">obj</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">c</span><span style="color:#7F848E;font-style:italic;">  //c被取出:  3</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="object-fromentries" tabindex="-1">Object.fromEntries() <a class="header-anchor" href="#object-fromentries" aria-label="Permalink to &quot;Object.fromEntries()&quot;">​</a></h2><p>ES10新增</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> entries</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Map</span><span style="color:#ABB2BF;">([</span></span>
<span class="line"><span style="color:#ABB2BF;">  [</span><span style="color:#98C379;">&#39;foo&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;bar&#39;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">  [</span><span style="color:#98C379;">&#39;baz&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">42</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> obj</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">fromEntries</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">entries</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// expected output: Object { foo: &quot;bar&quot;, baz: 42 }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="lodash-pick" tabindex="-1">lodash/pick <a class="header-anchor" href="#lodash-pick" aria-label="Permalink to &quot;lodash/pick&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E5C07B;font-style:italic;"> {object}</span><span style="color:#E06C75;font-style:italic;"> obj</span><span style="color:#7F848E;font-style:italic;"> - 对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E5C07B;font-style:italic;"> {array}</span><span style="color:#E06C75;font-style:italic;"> props</span><span style="color:#7F848E;font-style:italic;"> - 要取那些属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E5C07B;font-style:italic;"> {function}</span><span style="color:#E06C75;font-style:italic;"> predicate</span><span style="color:#7F848E;font-style:italic;"> - 回调</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@returns</span><span style="color:#E5C07B;font-style:italic;"> {object}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> basePickBy</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">obj</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">props</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">predicate</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> props</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">reduce</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">acc</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">      predicate</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">], </span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">acc</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> obj</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#E06C75;"> acc</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }, {});</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * pick</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> *</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E5C07B;font-style:italic;"> {*}</span><span style="color:#E06C75;font-style:italic;"> obj</span><span style="color:#7F848E;font-style:italic;"> - 对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> * </span><span style="color:#C678DD;font-style:italic;">@param</span><span style="color:#E5C07B;font-style:italic;"> {*}</span><span style="color:#E06C75;font-style:italic;"> props</span><span style="color:#7F848E;font-style:italic;"> - 要取那些属性</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> pick</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">obj</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">props</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#61AFEF;"> basePickBy</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">props</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">value</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E06C75;"> key</span><span style="color:#C678DD;"> in</span><span style="color:#E06C75;"> obj</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> data</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">message</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;Foo&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">11</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">c</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#61AFEF;">pick</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">,[</span><span style="color:#98C379;">&#39;a&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;b&#39;</span><span style="color:#ABB2BF;">])  </span><span style="color:#7F848E;font-style:italic;">// {a: 11, b: 2}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p><strong>结果同上：</strong></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">parse</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">stringify</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">,[</span><span style="color:#98C379;">&#39;a&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;b&#39;</span><span style="color:#ABB2BF;">])) </span><span style="color:#7F848E;font-style:italic;">// {a: 11, b: 2}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="浅拷贝-深拷贝" tabindex="-1">浅拷贝/深拷贝 <a class="header-anchor" href="#浅拷贝-深拷贝" aria-label="Permalink to &quot;浅拷贝/深拷贝&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//浅克隆 [层级嵌套不能超过2级,包括2级]</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#61AFEF;"> clone</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;font-style:italic;"> source</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">assign</span><span style="color:#ABB2BF;">({}, </span><span style="color:#E06C75;">source</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#61AFEF;"> clone</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;font-style:italic;"> source</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> { ...</span><span style="color:#E06C75;">source</span><span style="color:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//深克隆</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> deepclone</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">obj</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">   if</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">typeof</span><span style="color:#E06C75;"> obj</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &#39;object&#39;</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E06C75;"> obj</span><span style="color:#56B6C2;"> !==</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> o</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> obj</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">push</span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;">[]</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;">{};</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">obj</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">push</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> attr</span><span style="color:#C678DD;"> in</span><span style="color:#E06C75;"> obj</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">obj</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">hasOwnProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">attr</span><span style="color:#ABB2BF;">)){</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">typeof</span><span style="color:#E06C75;"> obj</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">attr</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">===</span><span style="color:#98C379;"> &#39;object&#39;</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E06C75;">                o</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">attr</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> deepclone</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">attr</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">                o</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">attr</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> obj</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">attr</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> o</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">     } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> obj</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// or 取巧方法 JSON.parse(JSON.stringify());</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 注意这种取巧方法是有限制的</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 1. 只能解析Number、String、Array等能够被json表示的数据结构（无法拷贝一写特殊的对象，诸如 RegExp, Date, Set, Map，函数 等。）</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 2. 不能处理循环引用</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> obj</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">val</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#E5C07B;">obj</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">target</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> obj</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//拷贝obj会出现系统栈溢出，因为出现了无限递归的情况。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">parse</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">stringify</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//VM913:1 Uncaught TypeError: Converting circular structure to JSON</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//--&gt; starting at object with constructor &#39;Object&#39;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//--- property &#39;target&#39; closes the circle</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//at JSON.stringify (&lt;anonymous&gt;)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//at &lt;anonymous&gt;:1:17</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//(anonymous) @ VM913:1</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//解决死循环的问题</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#61AFEF;"> isObject</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">target</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">typeof</span><span style="color:#E06C75;"> target</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &#39;object&#39;</span><span style="color:#56B6C2;"> ||</span><span style="color:#C678DD;"> typeof</span><span style="color:#E06C75;"> target</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &#39;function&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#E06C75;"> target</span><span style="color:#56B6C2;"> !==</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#61AFEF;"> deepClone</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">map</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Map</span><span style="color:#ABB2BF;">()) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> { </span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  //如果有的话直接跳过</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">map</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">))  </span><span style="color:#C678DD;">return</span><span style="color:#E06C75;"> target</span><span style="color:#ABB2BF;">; </span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#61AFEF;">isObject</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">)) { </span></span>
<span class="line"><span style="color:#E5C07B;">    map</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">set</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">); </span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> cloneTarget</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Array</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isArray</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">?</span><span style="color:#ABB2BF;"> []</span><span style="color:#C678DD;">:</span><span style="color:#ABB2BF;"> {}; </span></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> prop</span><span style="color:#C678DD;"> in</span><span style="color:#E06C75;"> target</span><span style="color:#ABB2BF;">) { </span></span>
<span class="line"><span style="color:#C678DD;">      if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">target</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">hasOwnProperty</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">prop</span><span style="color:#ABB2BF;">)) { </span></span>
<span class="line"><span style="color:#E06C75;">          cloneTarget</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">prop</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> deepClone</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">target</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">prop</span><span style="color:#ABB2BF;">],</span><span style="color:#E06C75;">map</span><span style="color:#ABB2BF;">); </span></span>
<span class="line"><span style="color:#ABB2BF;">      } </span></span>
<span class="line"><span style="color:#ABB2BF;">    } </span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> cloneTarget</span><span style="color:#ABB2BF;">; </span></span>
<span class="line"><span style="color:#ABB2BF;">  } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> { </span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> target</span><span style="color:#ABB2BF;">; </span></span>
<span class="line"><span style="color:#ABB2BF;">  } </span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//map 和 a一直是强引用的关系， 在程序结束之前，a 所占的内存空间一直不会被释放。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//弱引用的对象可以在任何时候被回收，而对于强引用来说，只要这个强引用还在，那么对象无法被回收。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//ES6给我们提供了这样的数据结构，它的名字叫WeakMap,它是一种特殊的Map, 其中的键是弱引用的。\`其键必须是对象\`，而值可以是任意的</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//稍微改造一下即可:</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#61AFEF;"> deepClone</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">target</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">map</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> WeakMap</span><span style="color:#ABB2BF;">()) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  //...</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br></div></div><h2 id="对象转原始类型是根据什么流程运行的" tabindex="-1">对象转原始类型是根据什么流程运行的？ <a class="header-anchor" href="#对象转原始类型是根据什么流程运行的" aria-label="Permalink to &quot;对象转原始类型是根据什么流程运行的？&quot;">​</a></h2><p>对象转原始类型，会优先调用内置的[ToPrimitive]函数，对于该函数而言，其逻辑如下：</p><p>如果Symbol.toPrimitive()方法，优先调用再返回<br> 调用valueOf()，如果转换为原始类型，则返回<br> 调用toString()，如果转换为原始类型，则返回<br> 如果都没有返回原始类型，会报错</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;"> const</span><span style="color:#E5C07B;"> obj</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  value</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">3</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">  valueOf</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#D19A66;"> 4</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#61AFEF;">  toString</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#98C379;"> &#39;5&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">  [</span><span style="color:#E5C07B;">Symbol</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">toPrimitive</span><span style="color:#ABB2BF;">]() {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#D19A66;"> 6</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj</span><span style="color:#56B6C2;"> +</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// 输出7</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="如何让if-a-1-a-2-条件成立" tabindex="-1">如何让if(a == 1 &amp;&amp; a == 2)条件成立？ <a class="header-anchor" href="#如何让if-a-1-a-2-条件成立" aria-label="Permalink to &quot;如何让if(a == 1 &amp;&amp; a == 2)条件成立？&quot;">​</a></h2><p>就是上面例子的应用</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  value</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">  valueOf</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">    this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">value</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">a</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 1</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> ==</span><span style="color:#D19A66;"> 2</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">);</span><span style="color:#7F848E;font-style:italic;">//true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="对象比较" tabindex="-1">对象比较 <a class="header-anchor" href="#对象比较" aria-label="Permalink to &quot;对象比较&quot;">​</a></h2><h3 id="hashcode" tabindex="-1">hashcode <a class="header-anchor" href="#hashcode" aria-label="Permalink to &quot;hashcode&quot;">​</a></h3><p>javascript 对象的比较是比较坑爹的一件事，因为javascript对象比较的是引用地址，当两个引用地址相同的对象总是相等的,或者两个完全一样的对象也是不相等的。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;"> var</span><span style="color:#E06C75;"> object1</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    name</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;1234 &quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    code</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">123</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    test</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;321&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> object2</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">    name</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;1234 &quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    code</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">123</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    test</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;321&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">object1</span><span style="color:#56B6C2;">===</span><span style="color:#E06C75;">object2</span><span style="color:#ABB2BF;">)   </span><span style="color:#7F848E;font-style:italic;">//false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>解决方法使用hashcode</p><p>这里只是简单的走个流程，详细的请查看<code>js-hash-code</code></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> hashCode</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">str</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  let</span><span style="color:#E06C75;"> hash</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">chr</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">len</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">str</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#56B6C2;"> ===</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">return</span><span style="color:#E06C75;"> hash</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">  for</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">len</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> str</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E06C75;"> len</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">    chr</span><span style="color:#56B6C2;">   =</span><span style="color:#E5C07B;"> str</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">charCodeAt</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">    hash</span><span style="color:#56B6C2;">  =</span><span style="color:#ABB2BF;"> ((</span><span style="color:#E06C75;">hash</span><span style="color:#56B6C2;"> &lt;&lt;</span><span style="color:#D19A66;"> 5</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;"> hash</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">+</span><span style="color:#E06C75;"> chr</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">    hash</span><span style="color:#C678DD;"> |=</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#E06C75;"> hash</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line highlighted"><span style="color:#ABB2BF;">&lt;&lt;</span><span style="color:#ABB2BF;">是移位符</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#98C379;">移位运算就是对二进制进行有规律低移位。移位运算可以设计很多奇妙的效果，在图形图像编程中应用广泛。</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#98C379;">|= 按位或．然后赋值．</span></span>
<span class="line"></span>
<span class="line"><span style="color:#98C379;">i=1;//二进制为0001</span></span>
<span class="line"><span style="color:#98C379;">i|2;//2的二进制为0010 两个按位或为0011也就是3</span></span>
<span class="line"><span style="color:#98C379;">i|=2等价于i=i|2;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">object1</span><span style="color:#56B6C2;">===</span><span style="color:#E06C75;">object2</span><span style="color:#ABB2BF;">);  </span><span style="color:#7F848E;font-style:italic;">//false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> test1</span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;">hashCode</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">stringify</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">object1</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> test2</span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;">hashCode</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">stringify</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">object2</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">test1</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">test2</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">test1</span><span style="color:#56B6C2;">===</span><span style="color:#E06C75;">test2</span><span style="color:#ABB2BF;">);  </span><span style="color:#7F848E;font-style:italic;">//true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="递归" tabindex="-1">递归 <a class="header-anchor" href="#递归" aria-label="Permalink to &quot;递归&quot;">​</a></h3><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"> 判断对象相等的步骤：</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">1.先判断两者是不是对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">2.对象的键值对数量是否相等</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">3.判断两个对象的所有key值是否相等相同</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">4.判断两个对象的相应的key对应的值是否相同</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">来一个递归判断里面的对象循环1-4步骤代码如下</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#61AFEF;"> isEqual</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">obj1</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">obj2</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">   let</span><span style="color:#E06C75;"> isObj1</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> obj1</span><span style="color:#C678DD;"> instanceof</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">   let</span><span style="color:#E06C75;"> isObj2</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> obj2</span><span style="color:#C678DD;"> instanceof</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">   if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">isObj1</span><span style="color:#56B6C2;"> ||</span><span style="color:#56B6C2;"> !</span><span style="color:#E06C75;">isObj2</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">return</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">is</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj1</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">obj2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">   let</span><span style="color:#E06C75;"> kyes1</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">keys</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">   let</span><span style="color:#E06C75;"> kyes2</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">keys</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">   if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">kyes1</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#56B6C2;"> !==</span><span style="color:#E5C07B;"> kyes2</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">return</span><span style="color:#D19A66;"> false</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">   for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> item</span><span style="color:#C678DD;"> in</span><span style="color:#E06C75;"> kyes1</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">       if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">kyes2</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">includes</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">kyes1</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">item</span><span style="color:#ABB2BF;">])) {</span></span>
<span class="line"><span style="color:#C678DD;">           return</span><span style="color:#D19A66;"> false</span></span>
<span class="line"><span style="color:#ABB2BF;">       }</span></span>
<span class="line"><span style="color:#ABB2BF;">   }</span></span>
<span class="line"><span style="color:#ABB2BF;">   </span></span>
<span class="line"><span style="color:#C678DD;">   for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> attr</span><span style="color:#C678DD;"> in</span><span style="color:#E06C75;"> obj1</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">       let</span><span style="color:#E06C75;"> t1</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> obj1</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">attr</span><span style="color:#ABB2BF;">] </span><span style="color:#C678DD;">instanceof</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">       let</span><span style="color:#E06C75;"> t2</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> obj2</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">attr</span><span style="color:#ABB2BF;">] </span><span style="color:#C678DD;">instanceof</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">       if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">t1</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E06C75;"> t2</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">           return</span><span style="color:#61AFEF;"> isEqual</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obj1</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">attr</span><span style="color:#ABB2BF;">], </span><span style="color:#E06C75;">obj2</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">attr</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"><span style="color:#ABB2BF;">       } </span><span style="color:#C678DD;">else</span><span style="color:#C678DD;"> if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">obj1</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">attr</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">!==</span><span style="color:#E06C75;"> obj2</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">attr</span><span style="color:#ABB2BF;">]) {</span></span>
<span class="line"><span style="color:#C678DD;">           return</span><span style="color:#D19A66;"> false</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">       }</span></span>
<span class="line"><span style="color:#ABB2BF;">   }</span></span>
<span class="line"><span style="color:#C678DD;">   return</span><span style="color:#D19A66;"> true</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h2 id="参考文档" tabindex="-1">参考文档 <a class="header-anchor" href="#参考文档" aria-label="Permalink to &quot;参考文档&quot;">​</a></h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">MDN OBJECT</a></p>`,74),e=[o];function r(c,t,B,y,i,b){return a(),n("div",null,e)}const A=s(p,[["render",r]]);export{C as __pageData,A as default};
