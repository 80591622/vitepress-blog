import{_ as s,c as n,o as a,a5 as l}from"./chunks/framework.BQQWXjGs.js";const F=JSON.parse('{"title":"脚手架vue-cli","description":"","frontmatter":{},"headers":[],"relativePath":"workspace/Frame/vue/vue-cli.md","filePath":"workspace/Frame/vue/vue-cli.md","lastUpdated":1713971483000}'),p={name:"workspace/Frame/vue/vue-cli.md"},e=l(`<h1 id="脚手架vue-cli" tabindex="-1">脚手架vue-cli <a class="header-anchor" href="#脚手架vue-cli" aria-label="Permalink to &quot;脚手架vue-cli&quot;">​</a></h1><h2 id="vue-cli" tabindex="-1">vue-cli <a class="header-anchor" href="#vue-cli" aria-label="Permalink to &quot;vue-cli&quot;">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 安装 Vue CLI 3.x</span></span>
<span class="line"><span style="color:#61AFEF;">yarn</span><span style="color:#98C379;"> global</span><span style="color:#98C379;"> @vue/cli</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;"># my-project 是你的项目名称</span></span>
<span class="line"><span style="color:#61AFEF;">vue</span><span style="color:#98C379;"> create</span><span style="color:#98C379;"> my-project</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>vue-cli 中包含着 typescript 选项，只需要选择即可</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E06C75;">vue</span><span style="color:#E06C75;"> create</span><span style="color:#E06C75;"> repo</span></span>
<span class="line"><span style="color:#ABB2BF;"># </span><span style="color:#E06C75;">手动配置的时候需要选择</span><span style="color:#E06C75;"> TypeScript</span></span>
<span class="line"><span style="color:#E06C75;">Check</span><span style="color:#E06C75;"> the</span><span style="color:#E06C75;"> features</span><span style="color:#E06C75;"> needed</span><span style="color:#E06C75;"> for</span><span style="color:#E06C75;"> your</span><span style="color:#E06C75;"> project</span><span style="color:#ABB2BF;">:</span></span>
<span class="line"><span style="color:#ABB2BF;"> ◉ </span><span style="color:#E06C75;">Babel</span></span>
<span class="line"><span style="color:#ABB2BF;"> ◉ </span><span style="color:#E06C75;">TypeScript</span></span>
<span class="line"><span style="color:#ABB2BF;"> ◯ </span><span style="color:#E06C75;">Progressive</span><span style="color:#E06C75;"> Web</span><span style="color:#61AFEF;"> App</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">PWA</span><span style="color:#ABB2BF;">) </span><span style="color:#E06C75;">Support</span></span>
<span class="line"><span style="color:#ABB2BF;"> ◯ </span><span style="color:#E06C75;">Router</span></span>
<span class="line"><span style="color:#ABB2BF;"> ◉ </span><span style="color:#E06C75;">Vuex</span></span>
<span class="line"><span style="color:#ABB2BF;"> ◉ </span><span style="color:#E5C07B;">CSS</span><span style="color:#E06C75;"> Pre</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">processors</span></span>
<span class="line"><span style="color:#ABB2BF;"> ◉ </span><span style="color:#E06C75;">Linter</span><span style="color:#56B6C2;"> /</span><span style="color:#E06C75;"> Formatter</span></span>
<span class="line"><span style="color:#ABB2BF;"> ◯ </span><span style="color:#E06C75;">Unit</span><span style="color:#E06C75;"> Testing</span></span>
<span class="line"><span style="color:#ABB2BF;"> ◯ </span><span style="color:#E5C07B;">E2E</span><span style="color:#E06C75;"> Testing</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="vue-config-js-的配置" tabindex="-1">vue.config.js 的配置 <a class="header-anchor" href="#vue-config-js-的配置" aria-label="Permalink to &quot;vue.config.js 的配置&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 这个文件用于修改cli和webpack的配置</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 基于CommonJS 的风格导出一个对象</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 和webpack.config.js一样，修改后需要重启</span></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    outputDir</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;./dist&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 指定文件打包后的输出路径</span></span>
<span class="line"><span style="color:#E06C75;">    lintOnSave</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 启用eslint语法检查，默认启用</span></span>
<span class="line"><span style="color:#E06C75;">    productionSourceMap</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 生产环境是否需要source-map,如果设为false可以加速构建(打包)</span></span>
<span class="line"><span style="color:#E06C75;">    devServer</span><span style="color:#ABB2BF;">: { </span><span style="color:#7F848E;font-style:italic;">// vue-cli 支持所有webpack-dev-server的配置</span></span>
<span class="line"><span style="color:#E06C75;">        port</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">8082</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 端口号</span></span>
<span class="line"><span style="color:#E06C75;">        open</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 自动打开浏览器</span></span>
<span class="line"><span style="color:#E06C75;">        host</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;0.0.0.0&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 指定使用一个 host。默认是 localhost</span></span>
<span class="line"><span style="color:#E06C75;">        https</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 是否启用https</span></span>
<span class="line"><span style="color:#E06C75;">        proxy</span><span style="color:#ABB2BF;">: { </span><span style="color:#7F848E;font-style:italic;">// 这个必须会，用来解决开发环境跨域的问题</span></span>
<span class="line"><span style="color:#98C379;">            &#39;/api&#39;</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">                target</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;http://localhost:8000&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                changeOrigin</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                secure</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="开启gzip压缩" tabindex="-1">开启Gzip压缩 <a class="header-anchor" href="#开启gzip压缩" aria-label="Permalink to &quot;开启Gzip压缩&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/* vue.config.js */</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> isPro</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">NODE_ENV</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &#39;production&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    ...</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#E06C75;">    configureWebpack</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;font-style:italic;">config</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">isPro</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">            return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">                plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#C678DD;">                    new</span><span style="color:#61AFEF;"> CompressionWebpackPlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                         // 目标文件名称。[path] 被替换为原始文件的路径和 [query] 查询</span></span>
<span class="line"><span style="color:#E06C75;">                        asset</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;[path].gz[query]&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                        // 使用 gzip 压缩</span></span>
<span class="line"><span style="color:#E06C75;">                        algorithm</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;gzip&#39;</span><span style="color:#ABB2BF;">, </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                        // 处理与此正则相匹配的所有文件</span></span>
<span class="line"><span style="color:#E06C75;">                        test</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> RegExp</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#98C379;">                            &#39;</span><span style="color:#56B6C2;">\\\\</span><span style="color:#98C379;">.(js|css)$&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">                        ),</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                        // 只处理大于此大小的文件</span></span>
<span class="line"><span style="color:#E06C75;">                        threshold</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">10240</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                        // 最小压缩比达到 0.8 时才会被压缩</span></span>
<span class="line"><span style="color:#E06C75;">                        minRatio</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0.8</span><span style="color:#ABB2BF;">，</span></span>
<span class="line"><span style="color:#ABB2BF;">                    })</span></span>
<span class="line"><span style="color:#ABB2BF;">                ]</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    ...</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h2 id="分析包文件" tabindex="-1">分析包文件 <a class="header-anchor" href="#分析包文件" aria-label="Permalink to &quot;分析包文件&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> BundleAnalyzerPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;webpack-bundle-analyzer&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">BundleAnalyzerPlugin</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">chainWebpack</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;font-style:italic;">config</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 修复HMR</span></span>
<span class="line"><span style="color:#E5C07B;">    config</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">resolve</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">symlinks</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">isAnalyze</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">        config</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">plugin</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;webpack-bundle-analyzer&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#C678DD;">                new</span><span style="color:#61AFEF;"> BundleAnalyzerPlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">                    analyzerPort</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">9999</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                    openAnalyzer</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">                }))</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="拆包" tabindex="-1">拆包 <a class="header-anchor" href="#拆包" aria-label="Permalink to &quot;拆包&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E06C75;">configureWebpack</span><span style="color:#ABB2BF;">: () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> ({</span></span>
<span class="line"><span style="color:#E06C75;">    optimization</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">        splitChunks</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">        cacheGroups</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">            vendor</span><span style="color:#ABB2BF;">:{</span></span>
<span class="line"><span style="color:#E06C75;">            chunks</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;all&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /node_modules/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                name</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;vendor&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                minChunks</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                maxInitialRequests</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                minSize</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                priority</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">100</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">            },</span></span>
<span class="line"><span style="color:#E06C75;">            common</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">                chunks</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;all&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;">/</span><span style="color:#D19A66;">[</span><span style="color:#56B6C2;">\\\\</span><span style="color:#D19A66;">/]</span><span style="color:#E06C75;">src</span><span style="color:#D19A66;">[</span><span style="color:#56B6C2;">\\\\</span><span style="color:#D19A66;">/]</span><span style="color:#E06C75;">js</span><span style="color:#D19A66;">[</span><span style="color:#56B6C2;">\\\\</span><span style="color:#D19A66;">/]</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;common&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                minChunks</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                maxInitialRequests</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                minSize</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                priority</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">60</span></span>
<span class="line"><span style="color:#ABB2BF;">            },</span></span>
<span class="line"><span style="color:#E06C75;">            styles</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">                name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;styles&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                test</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;"> /</span><span style="color:#56B6C2;">\\.</span><span style="color:#E06C75;">(sa</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">sc</span><span style="color:#ABB2BF;">|</span><span style="color:#E06C75;">c)ss</span><span style="color:#C678DD;">$</span><span style="color:#E06C75;">/</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                chunks</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;all&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                enforce</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">                },</span></span>
<span class="line"><span style="color:#E06C75;">                runtimeChunk</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">                name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;manifest&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h2 id="默认插件简介" tabindex="-1">默认插件简介 <a class="header-anchor" href="#默认插件简介" aria-label="Permalink to &quot;默认插件简介&quot;">​</a></h2><p>通过对 <code>vue.config.js</code> 的了解，我们知道了 <code>vue-cli 3.x</code>为我们默认封装了项目运行的常用 <code>webpack</code> 配置，那么它给我们提供了哪些默认插件，每一个<code>plugin</code> 又有着怎样的用途呢？除了使用 <strong>vue inspect plugins</strong> 我们还可以通过运行 <strong>vue ui</strong> 进入可视化页面查看，步骤如下</p><ul><li>打开可视化页面，点击对应项目进入管理页面（如果没有对应项目，需要导入或新建）</li><li>点击侧边栏 <code>Tasks</code> 选项，再点击二级栏 <code>inspect</code>选项</li><li>点击<code> Run task</code> 按钮执行审查命令</li></ul><p><img src="https://ae01.alicdn.com/kf/Hb1e97ba0e7ce4cb2b72ea6466cbb0ba6N.png" alt=""></p><blockquote><p>最后我们从输出的内容中找到 <code>plugins</code> 数组，其包含了如下插件（配置项已经省略，增加了定义插件的代码）：</p></blockquote><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// vue-loader是 webpack 的加载器，允许你以单文件组件的格式编写 Vue 组件</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> VueLoaderPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;vue-loader/lib/plugin&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// webpack 内置插件，用于创建在编译时可以配置的全局常量</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">DefinePlugin</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;webpack&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 用于强制所有模块的完整路径必需与磁盘上实际路径的确切大小写相匹配</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> CaseSensitivePathsPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;case-sensitive-paths-webpack-plugin&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 识别某些类型的 webpack 错误并整理，以提供开发人员更好的体验。</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> FriendlyErrorsPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;friendly-errors-webpack-plugin&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 将 CSS 提取到单独的文件中，为每个包含 CSS 的 JS 文件创建一个 CSS 文件</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> MiniCssExtractPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;mini-css-extract-plugin&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 用于在 webpack 构建期间优化、最小化 CSS文件</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> OptimizeCssnanoPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;optimize-css-assets-webpack-plugin&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// webpack 内置插件，用于根据模块的相对路径生成 hash 作为模块 id, 一般用于生产环境</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> { </span><span style="color:#E5C07B;">HashedModuleIdsPlugin</span><span style="color:#ABB2BF;"> } </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;webpack&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 用于根据模板或使用加载器生成 HTML 文件</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> HtmlWebpackPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;html-webpack-plugin&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 用于在使用 html-webpack-plugin 生成的 html 中添加 &lt;link rel =&#39;preload&#39;&gt; 或 &lt;link rel =&#39;prefetch&#39;&gt;，有助于异步加载</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> PreloadPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;preload-webpack-plugin&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 用于将单个文件或整个目录复制到构建目录</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> CopyWebpackPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;copy-webpack-plugin&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        /* config.plugin(&#39;vue-loader&#39;) */</span></span>
<span class="line"><span style="color:#C678DD;">        new</span><span style="color:#61AFEF;"> VueLoaderPlugin</span><span style="color:#ABB2BF;">(), </span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        /* config.plugin(&#39;define&#39;) */</span></span>
<span class="line"><span style="color:#C678DD;">        new</span><span style="color:#61AFEF;"> DefinePlugin</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        /* config.plugin(&#39;case-sensitive-paths&#39;) */</span></span>
<span class="line"><span style="color:#C678DD;">        new</span><span style="color:#61AFEF;"> CaseSensitivePathsPlugin</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        /* config.plugin(&#39;friendly-errors&#39;) */</span></span>
<span class="line"><span style="color:#C678DD;">        new</span><span style="color:#61AFEF;"> FriendlyErrorsWebpackPlugin</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        /* config.plugin(&#39;extract-css&#39;) */</span></span>
<span class="line"><span style="color:#C678DD;">        new</span><span style="color:#61AFEF;"> MiniCssExtractPlugin</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        /* config.plugin(&#39;optimize-css&#39;) */</span></span>
<span class="line"><span style="color:#C678DD;">        new</span><span style="color:#61AFEF;"> OptimizeCssnanoPlugin</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        /* config.plugin(&#39;hash-module-ids&#39;) */</span></span>
<span class="line"><span style="color:#C678DD;">        new</span><span style="color:#61AFEF;"> HashedModuleIdsPlugin</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        /* config.plugin(&#39;html&#39;) */</span></span>
<span class="line"><span style="color:#C678DD;">        new</span><span style="color:#61AFEF;"> HtmlWebpackPlugin</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        /* config.plugin(&#39;preload&#39;) */</span></span>
<span class="line"><span style="color:#C678DD;">        new</span><span style="color:#61AFEF;"> PreloadPlugin</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        /* config.plugin(&#39;copy&#39;) */</span></span>
<span class="line"><span style="color:#C678DD;">        new</span><span style="color:#61AFEF;"> CopyWebpackPlugin</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">    ]</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br></div></div><h2 id="使用-alias-简化路径" tabindex="-1">使用 alias 简化路径 <a class="header-anchor" href="#使用-alias-简化路径" aria-label="Permalink to &quot;使用 alias 简化路径&quot;">​</a></h2><p>而在 <code>CLI 3.x </code>中我们无法直接操作 <code>webpack</code> 的配置文件，我们需要通过 <code>chainWebpack</code> 来进行间接修改，代码如下</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/* vue.config.js */</span></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // ...</span></span>
<span class="line"><span style="color:#61AFEF;">    chainWebpack</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;font-style:italic;">config</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        config</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">resolve</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">alias</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">set</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;@&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;src&#39;</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">set</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;_lib&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;src/common&#39;</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">set</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;_com&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;src/components&#39;</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">set</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;_img&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;src/images&#39;</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">            .</span><span style="color:#61AFEF;">set</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;_ser&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;src/services&#39;</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">    }, </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   // ...</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>这样我们修改 <code>webpack alias</code> 来简化路径的优化就实现了。 但是需要注意的是对于在样式及 <code>htm</code>l 模板中引用路径的简写时，前面需要加上 <code>～</code> 符，否则路径解析会失败，如：</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#D19A66;">.img</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    background: (~_img/home.png);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="构建多页应用" tabindex="-1">构建多页应用 <a class="header-anchor" href="#构建多页应用" aria-label="Permalink to &quot;构建多页应用&quot;">​</a></h2><h2 id="多入口" tabindex="-1">多入口 <a class="header-anchor" href="#多入口" aria-label="Permalink to &quot;多入口&quot;">​</a></h2><p>在单页应用中，我们的入口文件只有一个，<code>CLI</code> 默认配置的是 <code>main.js</code>，但是到了多页应用， 我们的入口文件便包含了 <code>page1.js、page2.js、index.js</code>等，数量取决于 pages 文件夹下目录的个数， 这时候为了项目的可拓展性，我们需要自动计算入口文件的数量并解析路径配置到 <code>webpack</code> 中的 <code>entry</code> 属性上，如：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // ...</span></span>
<span class="line"><span style="color:#E06C75;">    entry</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">        page1</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;/xxx/pages/page1/page1.js&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        page2</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;/xxx/pages/page2/page2.js&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        index</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;/xxx/pages/index/index.js&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   //  ...</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>那么我们如何读取并解析这样的路径呢，这里就需要使用工具和函数来解决了。 我们可以在根目录新建 <code>build</code> 文件夹存放 <code>utils.js</code> 这样共用的 <code>webpack</code> 功能性文件，并加入多入口读取解析方法</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/* utils.js */</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> path</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;path&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// glob 是 webpack 安装时依赖的一个第三方模块，该模块允许你使用 * 等符号,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 例如 lib/*.js 就是获取 lib 文件夹下的所有 js 后缀名的文件</span></span>
<span class="line highlighted"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> glob</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;glob&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 取得相应的页面路径，因为之前的配置，所以是 src 文件夹下的 pages 文件夹</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> PAGE_PATH</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;../src/pages&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/* </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">* 多入口配置</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">* 通过 glob 模块读取 pages 文件夹下的所有对应文件夹下的 js * 后缀文件，如果该文件存在</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">* 那么就作为入口处理</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#E5C07B;">exports</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getEntries</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> entryFiles</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> glob</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sync</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">PAGE_PATH</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &#39;/*/*.js&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 同步读取所有入口文件</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> map</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {}</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 遍历所有入口文件</span></span>
<span class="line"><span style="color:#E5C07B;">    entryFiles</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">filePath</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 获取文件名</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> filename</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> filePath</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">substring</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">filePath</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lastIndexOf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;</span><span style="color:#56B6C2;">\\/</span><span style="color:#98C379;">&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">filePath</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lastIndexOf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;.&#39;</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 以键值对的形式存储</span></span>
<span class="line"><span style="color:#E06C75;">        map</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">filename</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> filePath</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">    })</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> map</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/* vue.config.js */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> utils</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;./build/utils&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // ...</span></span>
<span class="line"><span style="color:#61AFEF;">    configureWebpack</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;font-style:italic;">config</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        config</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">entry</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> utils</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getEntries</span><span style="color:#ABB2BF;">()</span></span>
<span class="line highlighted"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // ...</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="多模板" tabindex="-1">多模板 <a class="header-anchor" href="#多模板" aria-label="Permalink to &quot;多模板&quot;">​</a></h2><p>相对于多入口来说，多模板的配置也是大同小异，这里所说的模板便是每个<code> page</code> 下的<code> html</code> 模板文件， 而模板文件的作用主要用于 <code>webpack </code>中 <code>html-webpack-plugin</code> 插件的配置， 其会根据模板文件生产一个编译后的 <code>html</code> 文件并自动加入携带 <code>hash </code>的脚本和样式，基本配置如下</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/* webpack 配置文件 */</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> HtmlWebpackPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;html-webpack-plugin&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// 安装并引用插件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // ...</span></span>
<span class="line"><span style="color:#E06C75;">    plugins</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#C678DD;">        new</span><span style="color:#61AFEF;"> HtmlWebpackPlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">            title</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;My Page&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 生成 html 中的 title</span></span>
<span class="line"><span style="color:#E06C75;">            filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;demo.html&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 生成 html 的文件名</span></span>
<span class="line"><span style="color:#E06C75;">            template</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;xxx/xxx/demo.html&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 模板路径</span></span>
<span class="line"><span style="color:#E06C75;">            chunks</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&#39;manifest&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;vendor&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;demo&#39;</span><span style="color:#ABB2BF;">], </span><span style="color:#7F848E;font-style:italic;">// 所要包含的模块</span></span>
<span class="line"><span style="color:#E06C75;">            inject</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 是否注入资源</span></span>
<span class="line"><span style="color:#ABB2BF;">        })</span></span>
<span class="line"><span style="color:#ABB2BF;">    ]</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // ...</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/* utils.js */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 多页面输出配置</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 与上面的多页面入口配置相同，读取 page 文件夹下的对应的 html 后缀文件，然后放入数组中</span></span>
<span class="line"><span style="color:#E5C07B;">exports</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">htmlPlugin</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;font-style:italic;"> configs</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> entryHtml</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> glob</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sync</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">PAGE_PATH</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &#39;/*/*.html&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> arr</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> []</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#E5C07B;">    entryHtml</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">filePath</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> filename</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> filePath</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">substring</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">filePath</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lastIndexOf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;</span><span style="color:#56B6C2;">\\/</span><span style="color:#98C379;">&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">filePath</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lastIndexOf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;.&#39;</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> conf</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">            template</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">filePath</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 模板路径</span></span>
<span class="line"><span style="color:#E06C75;">            filename</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">filename</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &#39;.html&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 生成 html 的文件名</span></span>
<span class="line"><span style="color:#E06C75;">            chunks</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&#39;manifest&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;vendor&#39;</span><span style="color:#ABB2BF;">,  </span><span style="color:#E06C75;">filename</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#E06C75;">            inject</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 如果有自定义配置可以进行 merge</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">configs</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">            conf</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> merge</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">conf</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">configs</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 针对生产环境配置</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">NODE_ENV</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &#39;production&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">            conf</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> merge</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">conf</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#E06C75;">                minify</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">                    removeComments</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 删除 html 中的注释代码</span></span>
<span class="line"><span style="color:#E06C75;">                    collapseWhitespace</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 删除 html 中的空白符</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                    // removeAttributeQuotes: true // 删除 html 元素中属性的引号</span></span>
<span class="line"><span style="color:#ABB2BF;">                },</span></span>
<span class="line"><span style="color:#E06C75;">                chunksSortMode</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;manual&#39;</span><span style="color:#7F848E;font-style:italic;"> // 按 manual 的顺序引入</span></span>
<span class="line"><span style="color:#ABB2BF;">            })</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#E5C07B;">        arr</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> HtmlWebpackPlugin</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">conf</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#ABB2BF;">    })</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> arr</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/* vue.config.js */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> utils</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;./build/utils&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // ...</span></span>
<span class="line"><span style="color:#61AFEF;">    configureWebpack</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;font-style:italic;">config</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        config</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">entry</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> utils</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getEntries</span><span style="color:#ABB2BF;">() </span><span style="color:#7F848E;font-style:italic;">// 直接覆盖 entry 配置</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 使用 return 一个对象会通过 webpack-merge 进行合并，plugins 不会置空</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">            plugins</span><span style="color:#ABB2BF;">: [...</span><span style="color:#E5C07B;">utils</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">htmlPlugin</span><span style="color:#ABB2BF;">()]</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line highlighted"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // ...</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>如此我们多页应用的多入口和多模板的配置就完成了， 这时候我们运行命令 <code>yarn build</code> 后你会发现 <code>dist</code> 目录下生成了 3 个 html 文件，分别是 <code>index.html、page1.html 和 page2.html</code></p><h2 id="使用-pages-配置" tabindex="-1">使用 pages 配置 <a class="header-anchor" href="#使用-pages-配置" aria-label="Permalink to &quot;使用 pages 配置&quot;">​</a></h2><p>其实，在 <code>vue.config.js</code> 中，我们还有一个配置没有使用，便是 <code>pages</code>。<code>pages</code> 对象允许我们为应用配置多个入口及模板， 这就为我们的多页应用提供了开放的配置入口。官方示例代码如下</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/* vue.config.js */</span></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    pages</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">        index</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // page 的入口</span></span>
<span class="line"><span style="color:#E06C75;">            entry</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;src/index/main.js&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 模板来源</span></span>
<span class="line"><span style="color:#E06C75;">            template</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;public/index.html&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 在 dist/index.html 的输出</span></span>
<span class="line"><span style="color:#E06C75;">            filename</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;index.html&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 当使用 title 选项时，</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // template 中的 title 标签需要是 &lt;title&gt;&lt;%= htmlWebpackPlugin.options.title %&gt;&lt;/title&gt;</span></span>
<span class="line"><span style="color:#E06C75;">            title</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;Index Page&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 在这个页面中包含的块，默认情况下会包含</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 提取出来的通用 chunk 和 vendor chunk。</span></span>
<span class="line"><span style="color:#E06C75;">            chunks</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&#39;chunk-vendors&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;chunk-common&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;index&#39;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 当使用只有入口的字符串格式时，</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 模板会被推导为 \`public/subpage.html\`</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 并且如果找不到的话，就回退到 \`public/index.html\`。</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 输出文件名会被推导为 \`subpage.html\`。</span></span>
<span class="line"><span style="color:#E06C75;">        subpage</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;src/subpage/main.js&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>我们不难发现，<code>pages</code> 对象中的 <code>key</code> 就是入口的别名，而其 <code>value</code> 对象其实是入口 <code>entry</code> 和模板属性的合并， 这样我们上述介绍的获取多入口和多模板的方法就可以合并成一个函数来进行多页的处理，合并后的 <code>setPages</code> 方法如下</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#56B6C2;">/</span><span style="color:#E06C75;"> pages</span><span style="color:#E06C75;"> 多入口配置</span></span>
<span class="line"><span style="color:#E5C07B;">exports</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setPages</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;font-style:italic;"> configs</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> entryFiles</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> glob</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">sync</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">PAGE_PATH</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &#39;/*/*.js&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> map</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">    entryFiles</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">filePath</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> filename</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> filePath</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">substring</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">filePath</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lastIndexOf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;</span><span style="color:#56B6C2;">\\/</span><span style="color:#98C379;">&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">+</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">filePath</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lastIndexOf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;.&#39;</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> tmp</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> filePath</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">substring</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">filePath</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lastIndexOf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;</span><span style="color:#56B6C2;">\\/</span><span style="color:#98C379;">&#39;</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> conf</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // page 的入口</span></span>
<span class="line"><span style="color:#E06C75;">            entry</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">filePath</span><span style="color:#ABB2BF;">, </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 模板来源</span></span>
<span class="line"><span style="color:#E06C75;">            template</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">tmp</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &#39;.html&#39;</span><span style="color:#ABB2BF;">, </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 在 dist/index.html 的输出</span></span>
<span class="line"><span style="color:#E06C75;">            filename</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">filename</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &#39;.html&#39;</span><span style="color:#ABB2BF;">, </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">            // 页面模板需要加对应的js脚本，如果不加这行则每个页面都会引入所有的js脚本</span></span>
<span class="line"><span style="color:#E06C75;">            chunks</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&#39;manifest&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;vendor&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">filename</span><span style="color:#ABB2BF;">], </span></span>
<span class="line"><span style="color:#E06C75;">            inject</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">configs</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">            conf</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> merge</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">conf</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">configs</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">NODE_ENV</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &#39;production&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">            conf</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> merge</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">conf</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#E06C75;">                minify</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">                    removeComments</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 删除 html 中的注释代码</span></span>
<span class="line"><span style="color:#E06C75;">                    collapseWhitespace</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 删除 html 中的空白符</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">                    // removeAttributeQuotes: true // 删除 html 元素中属性的引号</span></span>
<span class="line"><span style="color:#ABB2BF;">                },</span></span>
<span class="line"><span style="color:#E06C75;">                chunksSortMode</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;manual&#39;</span><span style="color:#7F848E;font-style:italic;">// 按 manual 的顺序引入</span></span>
<span class="line"><span style="color:#ABB2BF;">            })</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">        map</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">filename</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> conf</span></span>
<span class="line"><span style="color:#ABB2BF;">    })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> map</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/* vue.config.js */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> utils</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> require</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;./build/utils&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // ...</span></span>
<span class="line"><span style="color:#E06C75;">    pages</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">utils</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setPages</span><span style="color:#ABB2BF;">(),</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // ...</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>这样我们多页应用基于 <code>pages</code> 配置的改进就大功告成了，当你运行打包命令来查看输出结果的时候，你会发现和之前的方式相比并没有什么变化， 这就说明这两种方式都适用于多页的构建，但是这里还是<code>推荐</code>大家使用更便捷的 <code>pages</code> 配置</p><h2 id="多页面应用分页面打包" tabindex="-1">多页面应用分页面打包 <a class="header-anchor" href="#多页面应用分页面打包" aria-label="Permalink to &quot;多页面应用分页面打包&quot;">​</a></h2><p><strong>如果支持分项目编译打包到相应文件夹中,请看我的github <a href="https://github.com/wkvictory/vue-mpa/blob/master/vue.config.js#L17" target="_blank" rel="noreferrer">编译打包到相应文件夹</a></strong></p><h2 id="路由配置" tabindex="-1">路由配置 <a class="header-anchor" href="#路由配置" aria-label="Permalink to &quot;路由配置&quot;">​</a></h2><p>首先我们要明确一点就是，多页应用中的每个单页都是相互隔离的，即如果你想从 <code>page1</code> 下的路由跳到 <code>page2</code> 下的路由， 你无法使用 <code>vue-router</code> 中的方法进行跳转，需要使用原生方法：<code>location.href</code> 或 <code>location.replace</code></p><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">template</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;app&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;nav&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> @</span><span style="color:#D19A66;">click</span><span style="color:#ABB2BF;">=</span><span style="color:#ABB2BF;">&quot;</span><span style="color:#61AFEF;">goFn</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;">&quot;</span><span style="color:#ABB2BF;">&gt;Index&lt;/</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">&gt; |</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> @</span><span style="color:#D19A66;">click</span><span style="color:#ABB2BF;">=</span><span style="color:#ABB2BF;">&quot;</span><span style="color:#61AFEF;">goFn</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;page1&#39;</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;">&quot;</span><span style="color:#ABB2BF;">&gt;Page1&lt;/</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">&gt; |</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;"> @</span><span style="color:#D19A66;">click</span><span style="color:#ABB2BF;">=</span><span style="color:#ABB2BF;">&quot;</span><span style="color:#61AFEF;">goFn</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;page2&#39;</span><span style="color:#ABB2BF;">)</span><span style="color:#ABB2BF;">&quot;</span><span style="color:#ABB2BF;">&gt;Page2&lt;/</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">&gt; |</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">router-view</span><span style="color:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">template</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    methods</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#61AFEF;">        goFn</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">            location</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">href</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> \`</span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">BASE_URL</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> name</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>但是为了保持和<code>Vue</code> 路由跳转同样的风格，我可以对单页之间的跳转做一下封装， 实现一个<code> Navigator</code> 类，类的代码可以查看本文最后的示例，封装完成后我们可以将跳转方法修改为</p><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">this.$openRouter({</span></span>
<span class="line"><span style="color:#ABB2BF;">    name: name, // 跳转地址</span></span>
<span class="line"><span style="color:#ABB2BF;">    query: {</span></span>
<span class="line"><span style="color:#ABB2BF;">        text: &#39;hello&#39; // 可以进行参数传递</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>将其绑定到 Vue 的原型链上</p><div class="language-vue line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">import { Navigator } from &#39;../../common&#39; // 引入 Navigator</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">Vue.prototype.$openRouter = Navigator.openRouter; // 添加至 Vue 原型链</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>至此我们已经能够成功模仿 <code>vue-router </code>进行单页间的跳转，但是需要注意的是因为其本质使用的是 <code>location</code> 跳转，所以必然会产生浏览器的刷新与重载</p><h2 id="重定向" tabindex="-1">重定向 <a class="header-anchor" href="#重定向" aria-label="Permalink to &quot;重定向&quot;">​</a></h2><p>当我们完成上述路由跳转的功能后，可以在本地服务器上来进行一下测试，你会发现<code> Index</code> 首页可以正常打开， 但是跳转 <code>Page1、Page2 </code>却仍然处于 <code>Index</code> 父组件下，这是因为浏览器认为你所要跳转的页面还是在 <code>Index</code> 根路由下， 同时又没有匹配到<code> Index</code> 单页中对应的路由。这时候我们服务器需要做一次重定向，将下方路由指向对应的 <code>html </code>文件即可</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">/vue/page1</span><span style="color:#ABB2BF;"> -&gt; </span><span style="color:#98C379;">/vue/page1.html</span></span>
<span class="line"><span style="color:#61AFEF;">/vue/page2</span><span style="color:#ABB2BF;"> -&gt; </span><span style="color:#98C379;">/vue/page2.html</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>在 <code>vue.config.js</code> 中，我们需要对 <code>devServer</code> 进行配置，添加 <code>historyApiFallback</code>配置项， 该配置项主要用于解决 <code>HTML5 History API</code> 产生的问题，比如其 <code>rewrites</code> 选项用于重写路由</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">/* vue.config.js */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> baseUrl</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;/vue/&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">module</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">exports</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // ...</span></span>
<span class="line"><span style="color:#E06C75;">    devServer</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">        historyApiFallback</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">            rewrites</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">                { </span><span style="color:#E06C75;">from</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> RegExp</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">baseUrl</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &#39;page1&#39;</span><span style="color:#ABB2BF;">), </span><span style="color:#E06C75;">to</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">baseUrl</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &#39;page1.html&#39;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">                { </span><span style="color:#E06C75;">from</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> RegExp</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">baseUrl</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &#39;page2&#39;</span><span style="color:#ABB2BF;">), </span><span style="color:#E06C75;">to</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">baseUrl</span><span style="color:#56B6C2;"> +</span><span style="color:#98C379;"> &#39;page2.html&#39;</span><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#ABB2BF;">            ]</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">   // ...</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>`,59),o=[e];function c(r,t,B,i,y,b){return a(),n("div",null,o)}const A=s(p,[["render",c]]);export{F as __pageData,A as default};
