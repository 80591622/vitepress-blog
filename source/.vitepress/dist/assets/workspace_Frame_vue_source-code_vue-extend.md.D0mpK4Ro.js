import{_ as s,c as n,o as a,a5 as l}from"./chunks/framework.BQQWXjGs.js";const C=JSON.parse('{"title":"全局挂载组件之Vue.extend","description":"","frontmatter":{},"headers":[],"relativePath":"workspace/Frame/vue/source-code/vue-extend.md","filePath":"workspace/Frame/vue/source-code/vue-extend.md","lastUpdated":1713942612000}'),p={name:"workspace/Frame/vue/source-code/vue-extend.md"},e=l(`<h1 id="全局挂载组件之vue-extend" tabindex="-1">全局挂载组件之Vue.extend <a class="header-anchor" href="#全局挂载组件之vue-extend" aria-label="Permalink to &quot;全局挂载组件之Vue.extend&quot;">​</a></h1><p><code>Vue.extend</code> 属于Vue的全局 api，在实际业务开发中我们很少使用，因为相比常用的 <code>Vue.component</code> 写法使用 <code>extend</code> 步骤要更加繁琐一些。但是在一些独立组件开发场景中（例如：ElementUI库），所以<code>Vue.extend</code> + <code>$mount</code> 这对组合非常有必要需要我们了解下。</p><h2 id="vue-component" tabindex="-1">Vue.component <a class="header-anchor" href="#vue-component" aria-label="Permalink to &quot;Vue.component&quot;">​</a></h2><p><a href="https://cn.vuejs.org/v2/api/index.html#Vue-componen" target="_blank" rel="noreferrer">文档</a></p><p><strong>官网用法</strong>：</p><p>注册或获取全局组件。注册还会自动使用给定的 <code>id</code> 设置组件的名称</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 注册组件，传入一个扩展过的构造器</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">component</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;my-component&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">extend</span><span style="color:#ABB2BF;">({ </span><span style="color:#7F848E;font-style:italic;">/* ... */</span><span style="color:#ABB2BF;"> }))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 注册组件，传入一个选项对象 (自动调用 Vue.extend)</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">component</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;my-component&#39;</span><span style="color:#ABB2BF;">, { </span><span style="color:#7F848E;font-style:italic;">/* ... */</span><span style="color:#ABB2BF;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 获取注册的组件 (始终返回构造器)</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> MyComponent</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">component</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;my-component&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> ElInput</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">component</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;ElInput&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">new</span><span style="color:#E06C75;"> ElInput</span><span style="color:#ABB2BF;">);  </span><span style="color:#7F848E;font-style:italic;">// 就是Inout的实例</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>用法也特别的简单，你写好的组件，直接在main.js里面导入然后使用<code>Vue.component(&#39;xx-xxx&#39;,xxx)</code>就可以全局通用了。</p><ul><li><strong>好处</strong><ul><li>这样的<code>好处</code>就是所有页面基本上都是通过 router 来管理可以直接注册，组件的创建我们不需要去关注，相比 <code>extend</code> 要更省心一点</li></ul></li><li><strong>缺点</strong><ul><li>组件的名称都是自定义的，如果我要从接口动态渲染怎么办。【extend不用必须在初始化的时候完成，下面有实例】</li><li>有内容都是在 <code>#app</code> 下渲染，注册组件都是在当前位置渲染。如果我要实现一个模态框的提示组件，就比较鸡肋了。</li></ul></li></ul><p>这时候，<code>Vue.extend + vm.$mount</code> 组合就派上用场了。</p><h2 id="vue-extend" tabindex="-1">Vue.extend <a class="header-anchor" href="#vue-extend" aria-label="Permalink to &quot;Vue.extend&quot;">​</a></h2><p><a href="https://cn.vuejs.org/v2/api/index.html#Vue-extend" target="_blank" rel="noreferrer">文档</a></p><p><strong>官网用法:</strong></p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;"> id</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;mount-point&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 创建构造器</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> Profile</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">extend</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">  template</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;&lt;p&gt;{{firstName}} {{lastName}} aka {{alias}}&lt;/p&gt;&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">  data</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">      firstName</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;Walter&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      lastName</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;White&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      alias</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;Heisenberg&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 创建 Profile 实例，并挂载到一个元素上。</span></span>
<span class="line"><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Profile</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">$mount</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;#mount-point&#39;</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>结果如下：</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">&gt;Walter White aka Heisenberg&lt;/</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>可以发现<code>Id</code>为<code>mount-point</code>的div ,是直接被替代了，没有在内部填充，在我们 <code>main.js</code> 初始化的时候用发其实也是一样：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Vue</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">  router</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">  store</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;">  render</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;font-style:italic;">h</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#61AFEF;"> h</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">App</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}).</span><span style="color:#61AFEF;">$mount</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;#app&#39;</span><span style="color:#ABB2BF;">);  </span><span style="color:#7F848E;font-style:italic;">// 此处都是替换，不是填充</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>下面简单的分析下<code>$mount</code>的源码</strong></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// src/platforms/web/entry-runtime-with-compiler.js</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> config</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;core/config&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">warn</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">cached</span><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;core/util/index&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">mark</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">measure</span><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;core/util/perf&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> Vue</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;./runtime/index&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">query</span><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;./util/index&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">compileToFunctions</span><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;./compiler/index&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">shouldDecodeNewlines</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">shouldDecodeNewlinesForHref</span><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;./util/compat&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> idToTemplate</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> cached</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">id</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> el</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> query</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#E06C75;"> el</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E5C07B;"> el</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">innerHTML</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> mount</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$mount</span><span style="color:#ABB2BF;">;  </span><span style="color:#7F848E;font-style:italic;">// 缓存了原型上的 $mount 方法</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">$mount</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">el</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">hydrating</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">  el</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> el</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#61AFEF;"> query</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">el</span><span style="color:#ABB2BF;">)  </span><span style="color:#7F848E;font-style:italic;">// 通过 query函数 就是获取真实的DOM元素</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 判断获取的真实 dom元素是否为 body 或 documentElement 报警告</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">el</span><span style="color:#56B6C2;"> ===</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">body</span><span style="color:#56B6C2;"> ||</span><span style="color:#E06C75;"> el</span><span style="color:#56B6C2;"> ===</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">documentElement</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">NODE_ENV</span><span style="color:#56B6C2;"> !==</span><span style="color:#98C379;"> &#39;production&#39;</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#61AFEF;"> warn</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#98C379;">      \`Do not mount Vue to &lt;html&gt; or &lt;body&gt; - mount to normal elements instead.\`</span></span>
<span class="line"><span style="color:#ABB2BF;">    )</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> this</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> options</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$options</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 判断有么有render , 咱们一般都是用 template 写的vue，需要编译</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">options</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">render</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> template</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> options</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">template</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">template</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">      if</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">typeof</span><span style="color:#E06C75;"> template</span><span style="color:#56B6C2;"> ===</span><span style="color:#98C379;"> &#39;string&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">template</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">charAt</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">===</span><span style="color:#98C379;"> &#39;#&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">          template</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> idToTemplate</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">template</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">          /* istanbul ignore if */</span></span>
<span class="line"><span style="color:#C678DD;">          if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">NODE_ENV</span><span style="color:#56B6C2;"> !==</span><span style="color:#98C379;"> &#39;production&#39;</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#56B6C2;"> !</span><span style="color:#E06C75;">template</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#61AFEF;">            warn</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#98C379;">              \`Template element not found or is empty: </span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">options</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">template</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">              this</span></span>
<span class="line"><span style="color:#ABB2BF;">            )</span></span>
<span class="line"><span style="color:#ABB2BF;">          }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">      } </span><span style="color:#C678DD;">else</span><span style="color:#C678DD;"> if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">template</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">nodeType</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">        template</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> template</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">innerHTML</span></span>
<span class="line"><span style="color:#ABB2BF;">      } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">NODE_ENV</span><span style="color:#56B6C2;"> !==</span><span style="color:#98C379;"> &#39;production&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#61AFEF;">          warn</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;invalid template option:&#39;</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> template</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#E5C07B;"> this</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    } </span><span style="color:#C678DD;">else</span><span style="color:#C678DD;"> if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">el</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">      template</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> getOuterHTML</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">el</span><span style="color:#ABB2BF;">)  </span><span style="color:#7F848E;font-style:italic;">// 即获取 el 的 outerHTML</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">template</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      // 然后通过compileToFunctions将 template 转化为 render 函数，options.render = render</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      // 所有 Vue 的组件的渲染最终都需要 render 方法，无论是用单页面 .vue 方式开发，还是写了 el 或者 template 属性，</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      // 最终都要被转成 render 方法，那么这个过程是 Vue 的一个 “在线编译” 的过程， 它是调用 compileToFunctions 方法实现的，最后调用原型上的 $mount 方法挂载。</span></span>
<span class="line"><span style="color:#C678DD;">      const</span><span style="color:#ABB2BF;"> {</span><span style="color:#E5C07B;">render</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">staticRenderFns</span><span style="color:#ABB2BF;">} </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> compileToFunctions</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">template</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#E06C75;">        outputSourceRange</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">NODE_ENV</span><span style="color:#56B6C2;"> !==</span><span style="color:#98C379;"> &#39;production&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        shouldDecodeNewlines</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        shouldDecodeNewlinesForHref</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        delimiters</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">options</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">delimiters</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        comments</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">options</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">comments</span></span>
<span class="line"><span style="color:#ABB2BF;">      }, </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">      options</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">render</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> render</span></span>
<span class="line"><span style="color:#E5C07B;">      options</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">staticRenderFns</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> staticRenderFns</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 如果没有传el的话，会直接执行这步，会把组件在内存中渲染完毕</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#E5C07B;"> mount</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">el</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">hydrating</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 及时获取HTML 兼容IE</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> getOuterHTML</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">el</span><span style="color:#ABB2BF;">): </span><span style="color:#E5C07B;">string</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">el</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">outerHTML</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> el</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">outerHTML</span></span>
<span class="line"><span style="color:#ABB2BF;">  } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#E5C07B;"> container</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createElement</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;div&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">    container</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">appendChild</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">el</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">cloneNode</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">))</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> container</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">innerHTML</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">compile</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> compileToFunctions</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#E06C75;"> Vue</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br></div></div><ul><li><p><code>$mount </code>方法支持传入 2 个参数，第一个是 el，它表示挂载的元素，可以是字符串，也可以是 DOM 对象，如果是字符串在浏览器环境下会调用 query 方法转换成 DOM 对象的。第二个参数是和服务端渲染相关，在浏览器环境下不需要传第二个参数。</p></li><li><p><code>$mount </code>方法实际上会调用<code> mountComponent</code> 方法，方法定义在 <code>src/core/instance/lifecycle.js </code>中</p></li></ul><h2 id="实现一个弹框组件" tabindex="-1">实现一个弹框组件 <a class="header-anchor" href="#实现一个弹框组件" aria-label="Permalink to &quot;实现一个弹框组件&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// message/src/index.vue</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">template</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;font-style:italic;"> class</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;wrap&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;font-style:italic;"> class</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;message&quot;</span><span style="color:#FFFFFF;"> :class=&quot;item.type&quot;</span><span style="color:#D19A66;font-style:italic;"> v-for</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;item in notices&quot;</span><span style="color:#FFFFFF;"> :key=&quot;item._name&quot;&gt;</span></span>
<span class="line"><span style="color:#FFFFFF;">            &lt;div</span><span style="color:#D19A66;font-style:italic;"> class</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;content&quot;</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#C678DD;">{</span><span style="color:#ABB2BF;">{item.</span><span style="color:#E06C75;">content</span><span style="color:#ABB2BF;">}</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#56B6C2;">&lt;/</span><span style="color:#E06C75;">template</span><span style="color:#56B6C2;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  // 默认选项</span></span>
<span class="line"><span style="color:#ABB2BF;">  const defaultOptions = </span><span style="color:#C678DD;">{</span></span>
<span class="line"><span style="color:#E06C75;">    duration</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1500</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;info&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    content</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;这是一条提示信息！&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#C678DD;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">  let mid = 0</span></span>
<span class="line"><span style="color:#ABB2BF;">  export default </span><span style="color:#C678DD;">{</span></span>
<span class="line"><span style="color:#E06C75;">    name</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&#39;MyMessage&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#7F848E;font-style:italic;">// 建议添加方便外面直接取值</span></span>
<span class="line"><span style="color:#61AFEF;">    data</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">      return {</span></span>
<span class="line"><span style="color:#E06C75;">        notices</span><span style="color:#ABB2BF;">: []</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#E06C75;">    methods</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#61AFEF;">      addMessage</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">notice</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {}) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // name标识 用于移除弹窗</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> _name</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getName</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        // 合并选项</span></span>
<span class="line"><span style="color:#E06C75;">        notice</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">assign</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">          _name</span></span>
<span class="line"><span style="color:#ABB2BF;">        }, </span><span style="color:#E06C75;">defaultOptions</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">notice</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">        this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">notices</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">notice</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">        setTimeout</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">          this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">removeNotice</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">_name</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        }, </span><span style="color:#E5C07B;">notice</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">duration</span><span style="color:#ABB2BF;">) </span></span>
<span class="line"><span style="color:#ABB2BF;">      },</span></span>
<span class="line"><span style="color:#61AFEF;">      getName</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#98C379;"> &#39;msg_&#39;</span><span style="color:#56B6C2;"> +</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">mid</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">)  </span><span style="color:#7F848E;font-style:italic;">//创建一个唯一的值 </span></span>
<span class="line"><span style="color:#ABB2BF;">      },</span></span>
<span class="line"><span style="color:#61AFEF;">      removeNotice</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">_name</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> index</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">notices</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">findIndex</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">item</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#E5C07B;"> item</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_name</span><span style="color:#56B6C2;"> ===</span><span style="color:#E06C75;"> _name</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">        this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">notices</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">splice</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">index</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">)  </span><span style="color:#7F848E;font-style:italic;">// 删除当前超时的dom</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">style</span><span style="color:#D19A66;font-style:italic;"> scoped</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    .wrap </span><span style="color:#C678DD;">{</span></span>
<span class="line"><span style="color:#E06C75;">        position</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">fixed</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        top</span><span style="color:#ABB2BF;">: 50</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        left</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">50</span><span style="color:#56B6C2;">%</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        display</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">flex</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        flex</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">direction</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">column</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        align</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">items</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">center</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        transform</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">translateX</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">-</span><span style="color:#D19A66;">50</span><span style="color:#56B6C2;">%</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    .message </span><span style="color:#C678DD;">{</span></span>
<span class="line"><span style="color:#56B6C2;">        --</span><span style="color:#E06C75;">borderWidth</span><span style="color:#ABB2BF;">: 3</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        min</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">width</span><span style="color:#ABB2BF;">: 240</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        max</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">width</span><span style="color:#ABB2BF;">: 500</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        margin</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">bottom</span><span style="color:#ABB2BF;">: 10</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        border</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">radius</span><span style="color:#ABB2BF;">: 3</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        box</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">shadow</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;"> 8</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;"> #</span><span style="color:#E06C75;">ddd</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        overflow</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">hidden</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    .content </span><span style="color:#C678DD;">{</span></span>
<span class="line"><span style="color:#E06C75;">        padding</span><span style="color:#ABB2BF;">: 8</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        line</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">height</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1.3</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    // 对应的集中状态 </span></span>
<span class="line"><span style="color:#ABB2BF;">    .message.info </span><span style="color:#C678DD;">{</span></span>
<span class="line"><span style="color:#E06C75;">        border</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">left</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">var</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">--</span><span style="color:#E06C75;">borderWidth</span><span style="color:#ABB2BF;">) </span><span style="color:#E06C75;">solid</span><span style="color:#ABB2BF;"> #</span><span style="color:#D19A66;">909399</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        background</span><span style="color:#ABB2BF;">: #</span><span style="color:#E5C07B;">F4F4F5</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    .message.success </span><span style="color:#C678DD;">{</span></span>
<span class="line"><span style="color:#E06C75;">        border</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">left</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">var</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">--</span><span style="color:#E06C75;">borderWidth</span><span style="color:#ABB2BF;">) </span><span style="color:#E06C75;">solid</span><span style="color:#ABB2BF;"> #67</span><span style="color:#E5C07B;">C23A</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        background</span><span style="color:#ABB2BF;">: #</span><span style="color:#E5C07B;">F0F9EB</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    .message.error </span><span style="color:#C678DD;">{</span></span>
<span class="line"><span style="color:#E06C75;">        border</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">left</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">var</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">--</span><span style="color:#E06C75;">borderWidth</span><span style="color:#ABB2BF;">) </span><span style="color:#E06C75;">solid</span><span style="color:#ABB2BF;"> #</span><span style="color:#E5C07B;">F56C6C</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        background</span><span style="color:#ABB2BF;">: #</span><span style="color:#E5C07B;">FEF0F0</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    .message.warning </span><span style="color:#C678DD;">{</span></span>
<span class="line"><span style="color:#E06C75;">        border</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">left</span><span style="color:#ABB2BF;">: </span><span style="color:#61AFEF;">var</span><span style="color:#ABB2BF;">(</span><span style="color:#56B6C2;">--</span><span style="color:#E06C75;">borderWidth</span><span style="color:#ABB2BF;">) </span><span style="color:#E06C75;">solid</span><span style="color:#ABB2BF;"> #</span><span style="color:#E5C07B;">E6A23C</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E06C75;">        background</span><span style="color:#ABB2BF;">: #</span><span style="color:#E5C07B;">FDF6EC</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">style</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br></div></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// message/index.js</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> Vue</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;vue&#39;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> Message</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;./src/index.vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> messageInstance</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> TempMessage</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 模拟异步请求</span></span>
<span class="line"><span style="color:#61AFEF;">setTimeout</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  TempMessage</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> Message</span></span>
<span class="line"><span style="color:#ABB2BF;">}, </span><span style="color:#D19A66;">2000</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#61AFEF;"> init</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  let</span><span style="color:#E06C75;"> MessageConstructor</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> TempMessage</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E5C07B;"> Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">extend</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">TempMessage</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">  messageInstance</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> MessageConstructor</span><span style="color:#ABB2BF;">({})</span><span style="color:#7F848E;font-style:italic;">// 构造函数可以接传值，data、methods.....</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // console.log(messageInstance);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // $mount()不带参数，会把组件在内存中渲染完毕</span></span>
<span class="line"><span style="color:#E5C07B;">  messageInstance</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">$mount</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // messageInstance.$el 拿到的就是组件对应的dom元素,可以直接操作dom</span></span>
<span class="line"><span style="color:#E5C07B;">  document</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">body</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">appendChild</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">messageInstance</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$el</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#E5C07B;">  messageInstance</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">$el</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">style</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">zIndex</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 9999</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#61AFEF;"> caller</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">options</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">messageInstance</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 进页面初始化</span></span>
<span class="line"><span style="color:#61AFEF;">    init</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // addMessage 是组件内部声明的方法，也可以通过构造函数传对应的方法</span></span>
<span class="line"><span style="color:#E5C07B;">  messageInstance</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addMessage</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">  install</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">vue</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$mymessage</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> caller</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// main.js</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> Message</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;@/components/Message/index.js&#39;</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">Message</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>使用</strong></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">$mymessage</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">   type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;warning&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">   content</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;你好坏啊，我好喜欢&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">   duration</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">6000</span></span>
<span class="line"><span style="color:#ABB2BF;"> })</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="参考文章" tabindex="-1">参考文章 <a class="header-anchor" href="#参考文章" aria-label="Permalink to &quot;参考文章&quot;">​</a></h2><p><a href="https://blog.csdn.net/weixin_44867717/article/details/104954173" target="_blank" rel="noreferrer">JavaScript 方式调用的组件</a></p>`,30),o=[e];function r(c,t,B,y,i,b){return a(),n("div",null,o)}const u=s(p,[["render",r]]);export{C as __pageData,u as default};
