import{_ as s,c as n,o as a,a5 as l}from"./chunks/framework.BQQWXjGs.js";const A=JSON.parse('{"title":"Dva封装","description":"","frontmatter":{},"headers":[],"relativePath":"workspace/Frame/react/dva.md","filePath":"workspace/Frame/react/dva.md","lastUpdated":1713942612000}'),p={name:"workspace/Frame/react/dva.md"},o=l(`<h1 id="dva封装" tabindex="-1">Dva封装 <a class="header-anchor" href="#dva封装" aria-label="Permalink to &quot;Dva封装&quot;">​</a></h1><h2 id="dva" tabindex="-1">Dva <a class="header-anchor" href="#dva" aria-label="Permalink to &quot;Dva&quot;">​</a></h2><div class="language-jsx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> React</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;react&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> ReactDOM</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;react-dom&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">createStore</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">combineReducers</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">applyMiddleware</span><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;redux&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">Provider</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">connect</span><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;react-redux&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> createSagaMiddleware</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;redux-saga&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#D19A66;"> *</span><span style="color:#C678DD;"> as</span><span style="color:#E06C75;"> effects</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;redux-saga/effects&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">createHashHistory</span><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;history&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> NAMESPACE_SEPERATOR</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;/&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    connect</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> app</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">        model</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        _models</span><span style="color:#ABB2BF;">:[],</span></span>
<span class="line"><span style="color:#E06C75;">        router</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        _router</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        start</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">    function</span><span style="color:#61AFEF;"> model</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">model</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">        app</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">_models</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">model</span><span style="color:#ABB2BF;">);</span><span style="color:#7F848E;font-style:italic;">//把传入的model存放起来</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">    function</span><span style="color:#61AFEF;"> router</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">routeConfig</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;">        app</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_router</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> routeConfig</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">//把路由的配置暂存起来</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">    function</span><span style="color:#61AFEF;"> start</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">root</span><span style="color:#ABB2BF;">){</span><span style="color:#7F848E;font-style:italic;">//启动渲染</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> reducers</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {};</span></span>
<span class="line"><span style="color:#C678DD;">        for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> model</span><span style="color:#C678DD;"> of</span><span style="color:#E5C07B;"> app</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_models</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E06C75;">            reducers</span><span style="color:#ABB2BF;">[</span><span style="color:#E5C07B;">model</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">namespace</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">state</span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;">model</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;font-style:italic;">action</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">                let</span><span style="color:#E06C75;"> actionType</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> action</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">type</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">//获取动作类型 counter/add  [&#39;counter&#39;,&#39;add&#39;]</span></span>
<span class="line"><span style="color:#C678DD;">                let</span><span style="color:#E06C75;"> values</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> actionType</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">split</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">NAMESPACE_SEPERATOR</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">                if</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">values</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">==</span><span style="color:#E5C07B;"> model</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">namespace</span><span style="color:#ABB2BF;">){</span><span style="color:#7F848E;font-style:italic;">//如果说命名空间的名字和动作命名空间一样的话</span></span>
<span class="line"><span style="color:#C678DD;">                    let</span><span style="color:#E06C75;"> reducer</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> model</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">reducers</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">values</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">]];</span><span style="color:#7F848E;font-style:italic;">//获取要进行计算状态的reducer</span></span>
<span class="line"><span style="color:#C678DD;">                    if</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">reducer</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#C678DD;">                      return</span><span style="color:#61AFEF;"> reducer</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">action</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">                }</span></span>
<span class="line"><span style="color:#C678DD;">                return</span><span style="color:#E06C75;"> state</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> reducer</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> combineReducers</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">reducers</span><span style="color:#ABB2BF;">);</span><span style="color:#7F848E;font-style:italic;">//合并reducers</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> sagaMiddleware</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> createSagaMiddleware</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">        function*</span><span style="color:#61AFEF;"> rootSaga</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#C678DD;">            for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> model</span><span style="color:#C678DD;"> of</span><span style="color:#E5C07B;"> app</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">_models</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">                for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> key</span><span style="color:#C678DD;"> in</span><span style="color:#E5C07B;"> model</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">effects</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#C678DD;">                    yield</span><span style="color:#E5C07B;"> effects</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">takeEvery</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`</span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">model</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">namespace</span><span style="color:#C678DD;">}\${</span><span style="color:#E5C07B;">NAMESPACE_SEPERATOR</span><span style="color:#C678DD;">}\${</span><span style="color:#E06C75;">key</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">model</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">effects</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">],</span><span style="color:#E06C75;">effects</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">                }</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> store</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> createStore</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">reducer</span><span style="color:#ABB2BF;">,</span><span style="color:#61AFEF;">applyMiddleware</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">sagaMiddleware</span><span style="color:#ABB2BF;">));</span><span style="color:#7F848E;font-style:italic;">//创建仓库</span></span>
<span class="line"><span style="color:#E5C07B;">        sagaMiddleware</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">run</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">rootSaga</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">        const</span><span style="color:#E5C07B;"> history</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> createHashHistory</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> App</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> app</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">_router</span><span style="color:#ABB2BF;">({</span><span style="color:#E06C75;">app</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">history</span><span style="color:#ABB2BF;">});</span><span style="color:#7F848E;font-style:italic;">//获取要渲染的组件</span></span>
<span class="line"><span style="color:#E5C07B;">        ReactDOM</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">render</span><span style="color:#ABB2BF;">(</span><span style="color:#7F848E;font-style:italic;">//执行渲染</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;</span><span style="color:#E5C07B;">Provider</span><span style="color:#D19A66;font-style:italic;"> store</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#E06C75;">store</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">                {</span><span style="color:#E06C75;">App</span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;/</span><span style="color:#E5C07B;">Provider</span><span style="color:#ABB2BF;">&gt;,</span><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">querySelector</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">root</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        );</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> app</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br></div></div><h2 id="简单使用" tabindex="-1">简单使用 <a class="header-anchor" href="#简单使用" aria-label="Permalink to &quot;简单使用&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">adminCharacters</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">adminCharactersDelete</span><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;src/api/admin&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    namespace</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;roleAdmin&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    state</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">        dataSource</span><span style="color:#ABB2BF;">: [],</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#E06C75;">    effects</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#C678DD;">        *</span><span style="color:#61AFEF;"> fetchData</span><span style="color:#ABB2BF;"> ({</span><span style="color:#E06C75;font-style:italic;">id</span><span style="color:#ABB2BF;">}, {</span><span style="color:#E06C75;font-style:italic;">call</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">put</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">select</span><span style="color:#ABB2BF;">}) {</span></span>
<span class="line"><span style="color:#C678DD;">            const</span><span style="color:#ABB2BF;"> {</span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;">} </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> yield</span><span style="color:#61AFEF;"> call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">adminCharacters</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">            yield</span><span style="color:#61AFEF;"> put</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">                type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;save&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">                payload</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">                    dataSource</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">                },</span></span>
<span class="line"><span style="color:#ABB2BF;">            });</span></span>
<span class="line"><span style="color:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#C678DD;">        *</span><span style="color:#61AFEF;"> deleteData</span><span style="color:#ABB2BF;"> ({</span><span style="color:#E06C75;font-style:italic;">id</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">cb</span><span style="color:#ABB2BF;">}, {</span><span style="color:#E06C75;font-style:italic;">call</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">put</span><span style="color:#ABB2BF;">}) {</span></span>
<span class="line"><span style="color:#C678DD;">            const</span><span style="color:#ABB2BF;"> {</span><span style="color:#E5C07B;">success</span><span style="color:#ABB2BF;">} </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> yield</span><span style="color:#61AFEF;"> call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">adminCharactersDelete</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">success</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#61AFEF;">                cb</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#E06C75;">    reducers</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#61AFEF;">        save</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">state</span><span style="color:#ABB2BF;">, {</span><span style="color:#E06C75;font-style:italic;">payload</span><span style="color:#ABB2BF;">}) {</span></span>
<span class="line"><span style="color:#C678DD;">            return</span><span style="color:#ABB2BF;"> {...</span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E06C75;">payload</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#ABB2BF;">        },</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div>`,5),e=[o];function r(c,t,B,y,i,C){return a(),n("div",null,e)}const b=s(p,[["render",r]]);export{A as __pageData,b as default};
