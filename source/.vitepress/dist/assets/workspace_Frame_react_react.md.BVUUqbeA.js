import{_ as s,c as n,o as a,a5 as l}from"./chunks/framework.BQQWXjGs.js";const b=JSON.parse('{"title":"React基本用法","description":"","frontmatter":{},"headers":[],"relativePath":"workspace/Frame/react/react.md","filePath":"workspace/Frame/react/react.md","lastUpdated":1713942612000}'),p={name:"workspace/Frame/react/react.md"},o=l(`<h1 id="react基本用法" tabindex="-1">React基本用法 <a class="header-anchor" href="#react基本用法" aria-label="Permalink to &quot;React基本用法&quot;">​</a></h1><h2 id="路由传递参数" tabindex="-1">路由传递参数 <a class="header-anchor" href="#路由传递参数" aria-label="Permalink to &quot;路由传递参数&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Link</span><span style="color:#D19A66;font-style:italic;"> to</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E06C75;">        pathname</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;/&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        search</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;?lx=1&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        hash</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&quot;#AA&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        state</span><span style="color:#ABB2BF;">: {</span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">} </span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span><span style="color:#C678DD;">}</span><span style="color:#D19A66;font-style:italic;"> exact</span><span style="color:#ABB2BF;"> &gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">     首页</span></span>
<span class="line"><span style="color:#ABB2BF;"> &lt;/</span><span style="color:#E5C07B;">Link</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li><p>1.问号传参 基于location来完成处理 <strong>let {data, location: {<code>search</code>}} = this.props</strong></p></li><li><p>2.地址栏传参基于match的params来完成处理 <strong>let {data, match: {<code>params</code>}} = this.prop</strong></p></li><li><p>3.Link传参 循环进来的，此参数传参在浏览器看不见 <strong>let {data, location: {<code>state</code>}} = this.props</strong></p></li><li><p>参数解析（问号传参）</p></li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//两种方式都行</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> utils</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">   queryURLParameter</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">url</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> regParam</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> /(</span><span style="color:#D19A66;">[</span><span style="color:#ABB2BF;">^</span><span style="color:#D19A66;">?&amp;=#]+</span><span style="color:#E06C75;">)=</span><span style="color:#D19A66;">?</span><span style="color:#E06C75;">(</span><span style="color:#D19A66;">[</span><span style="color:#ABB2BF;">^</span><span style="color:#D19A66;">?&amp;=#]+</span><span style="color:#E06C75;">)</span><span style="color:#D19A66;">?</span><span style="color:#E06C75;">/</span><span style="color:#C678DD;">ig</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">            obj</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {};</span></span>
<span class="line"><span style="color:#E5C07B;">        url</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">regParam</span><span style="color:#ABB2BF;">, (...</span><span style="color:#E06C75;font-style:italic;">arg</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">            obj</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">arg</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">]] </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> arg</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#ABB2BF;">        });</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#E06C75;"> obj</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">   },</span></span>
<span class="line"><span style="color:#61AFEF;">   queryStringToJson</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">queryString</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">queryString</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">indexOf</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;?&#39;</span><span style="color:#ABB2BF;">) </span><span style="color:#56B6C2;">&gt;</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">            queryString</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> queryString</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">split</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;?&#39;</span><span style="color:#ABB2BF;">)[</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#C678DD;">        const</span><span style="color:#E5C07B;"> pairs</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> queryString</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">split</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;&amp;&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">        const</span><span style="color:#E5C07B;"> result</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {};</span></span>
<span class="line"><span style="color:#E5C07B;">        pairs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">forEach</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">pair</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">            pair</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> pair</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">split</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;=&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">            result</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">pair</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">]] </span><span style="color:#56B6C2;">=</span><span style="color:#61AFEF;"> decodeURIComponent</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">pair</span><span style="color:#ABB2BF;">[</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">||</span><span style="color:#98C379;"> &#39;&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        });</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#E06C75;"> result</span></span>
<span class="line"><span style="color:#ABB2BF;">   }</span></span>
<span class="line"><span style="color:#ABB2BF;">        </span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#E06C75;"> utils</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="发起-ajax-请求" tabindex="-1">发起 AJAX 请求 <a class="header-anchor" href="#发起-ajax-请求" aria-label="Permalink to &quot;发起 AJAX 请求&quot;">​</a></h2><p>我们应当将AJAX 请求放到 <code>componentDidMount</code> 函数中执行，主要原因有下</p><ul><li><code>componentsDidMount</code>里面请求数据此时dom已经渲染上去，从用户友好角度来讲，我们更愿意让用户先看到一个没有数据的方式，再通过一个spin的动画，来加载数据;<code>componentsWillMount</code>里面请求数据，拿到数据之后setState的时机是不确定的，可能是render之前，也可能是render之后，并不是下一个时间段，这依赖于ajax的返回时间，所以不能准时的出现loading图，所以说会出现较长白屏的现象.</li><li>还有在rn中，用react做服务端的同构，或者更高技术的时候会有一系列的问题【componentWillMount时发生在服务端 componentDidMount在客户端，会冲突】。</li><li>React16 调和算法<code>Fiber</code>会通过开始或停止渲染的方式优化应用性能，其会影响到 <code>componentWillMount 的触发次数</code>。对于 componentWillMount 这个生命周期函数的调用次数会变得不确定，React 可能会多次频繁调用 componentWillMount</li></ul><h2 id="proptypes" tabindex="-1">PropTypes <a class="header-anchor" href="#proptypes" aria-label="Permalink to &quot;PropTypes&quot;">​</a></h2><p><code>JavaScript 是弱类型语言，所以请尽量声明 propTypes 对 props 进行校验，以减少不必要的问题。</code></p><p><strong><code>内置的 prop type 有：</code></strong></p><ul><li>PropTypes.array</li><li>PropTypes.bool</li><li>PropTypes.func</li><li>PropTypes.number</li><li>PropTypes.object</li><li>PropTypes.string</li><li>PropTypes.any</li><li>PropTypes.shape</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> PropTypes</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;prop-types&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">static</span><span style="color:#E06C75;"> defaultProps</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    a</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    b</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#E06C75;">static</span><span style="color:#E06C75;"> propTypes</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    a</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">PropTypes</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">number</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    b</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">PropTypes</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">number</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    store</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">PropTypes</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">shape</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">           subscribe</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">PropTypes</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">func</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">isRequired</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">           dispatch</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">PropTypes</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">func</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">isRequired</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">           getState</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">PropTypes</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">func</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">isRequired</span></span>
<span class="line"><span style="color:#ABB2BF;">    }),</span></span>
<span class="line"><span style="color:#E06C75;">    data</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">PropTypes</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">array</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">isRequired</span><span style="color:#7F848E;font-style:italic;">//必须有</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p><a href="https://zh-hans.reactjs.org/docs/typechecking-with-proptypes.html" target="_blank" rel="noreferrer">查看更多</a></p><h2 id="hooks为何能使用const-在下面声明的函数" tabindex="-1">Hooks为何能使用const 在下面声明的函数 <a class="header-anchor" href="#hooks为何能使用const-在下面声明的函数" aria-label="Permalink to &quot;Hooks为何能使用const 在下面声明的函数&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//思想</span></span>
<span class="line"><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> () {</span></span>
<span class="line"><span style="color:#C678DD;">   function</span><span style="color:#61AFEF;"> b</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#E06C75;"> a</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> a</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#61AFEF;"> b</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">})();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="组件传递参数" tabindex="-1">组件传递参数 <a class="header-anchor" href="#组件传递参数" aria-label="Permalink to &quot;组件传递参数&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//父</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">List</span><span style="color:#D19A66;font-style:italic;"> onItem</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">item</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onItem</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">item</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//子</span></span>
<span class="line"><span style="color:#ABB2BF;">{</span><span style="color:#E5C07B;">list</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">map</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">item</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">index</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;font-style:italic;"> className</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#E5C07B;">styles</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">item</span><span style="color:#C678DD;">}</span><span style="color:#D19A66;font-style:italic;"> key</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#E06C75;">index</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#D19A66;font-style:italic;">     onClick</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">props</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onItem</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">item</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">   )</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">//父</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">List</span><span style="color:#D19A66;font-style:italic;"> onItem</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">onItem</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">//子</span></span>
<span class="line"><span style="color:#C678DD;">{</span><span style="color:#E5C07B;">list</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">map</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">item</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">index</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;font-style:italic;"> className</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#E5C07B;">styles</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">item</span><span style="color:#C678DD;">}</span><span style="color:#D19A66;font-style:italic;"> key</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#E06C75;">index</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#D19A66;font-style:italic;">     onClick</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">props</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">onItem</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">item</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">   )</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="purecomponent原理" tabindex="-1">PureComponent原理 <a class="header-anchor" href="#purecomponent原理" aria-label="Permalink to &quot;PureComponent原理&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E06C75;">shouldComponentUpdate</span><span style="color:#ABB2BF;">: (</span><span style="color:#E06C75;font-style:italic;">nextProps</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {}, </span><span style="color:#E06C75;font-style:italic;">nextState</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {}) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  const</span><span style="color:#E5C07B;"> thisProps</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">props</span><span style="color:#56B6C2;"> ||</span><span style="color:#ABB2BF;"> {}, </span><span style="color:#E5C07B;">thisState</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">state</span><span style="color:#56B6C2;"> ||</span><span style="color:#ABB2BF;"> {};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">keys</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">thisProps</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">length</span><span style="color:#56B6C2;"> !==</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">keys</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">nextProps</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">length</span><span style="color:#56B6C2;"> ||</span></span>
<span class="line"><span style="color:#E5C07B;">      Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">keys</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">thisState</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">length</span><span style="color:#56B6C2;"> !==</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">keys</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">nextState</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">length</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#D19A66;"> true</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> key</span><span style="color:#C678DD;"> in</span><span style="color:#E06C75;"> nextProps</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">is</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">thisProps</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">], </span><span style="color:#E06C75;">nextProps</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">])) {</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#D19A66;"> true</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> key</span><span style="color:#C678DD;"> in</span><span style="color:#E06C75;"> nextState</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">thisState</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">!==</span><span style="color:#E06C75;"> nextState</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">||</span><span style="color:#56B6C2;"> !</span><span style="color:#E5C07B;">Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">is</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">thisState</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">], </span><span style="color:#E06C75;">nextState</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">])) {</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#D19A66;"> true</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#D19A66;"> false</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="缓存路由" tabindex="-1">缓存路由 <a class="header-anchor" href="#缓存路由" aria-label="Permalink to &quot;缓存路由&quot;">​</a></h2><p><a href="https://juejin.im/post/5cef73a3e51d4510926a7aeb" target="_blank" rel="noreferrer">网址</a></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> React</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;react&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> PropTypes</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;prop-types&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">matchPath</span><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;react-router&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">Route</span><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;react-router-dom&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> RouteCache</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> React</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">Component</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  static</span><span style="color:#E06C75;"> propTypes</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    include</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">PropTypes</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">oneOfType</span><span style="color:#ABB2BF;">([</span></span>
<span class="line"><span style="color:#E5C07B;">      PropTypes</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">bool</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E5C07B;">      PropTypes</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">array</span></span>
<span class="line"><span style="color:#ABB2BF;">    ])</span></span>
<span class="line"><span style="color:#ABB2BF;">  };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E06C75;">  cache</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {}; </span><span style="color:#7F848E;font-style:italic;">//缓存已加载过的组件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">  render</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#ABB2BF;"> {</span><span style="color:#E5C07B;">children</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">include</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> []} </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">props</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> React</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">Children</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">map</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">children</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">child</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">      if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">React</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">isValidElement</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">child</span><span style="color:#ABB2BF;">)) { </span><span style="color:#7F848E;font-style:italic;">// 验证是否为是react element</span></span>
<span class="line"><span style="color:#C678DD;">        const</span><span style="color:#ABB2BF;"> {</span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">} </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> child</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">props</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        const</span><span style="color:#E5C07B;"> match</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> matchPath</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">location</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">pathname</span><span style="color:#ABB2BF;">, {...</span><span style="color:#E5C07B;">child</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">props</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">match</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">include</span><span style="color:#56B6C2;"> ===</span><span style="color:#D19A66;"> true</span><span style="color:#56B6C2;"> ||</span><span style="color:#E5C07B;"> include</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">includes</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">))) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">          //如果匹配，则将对应path的computedMatch属性加入cache对象里</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">          //当include为true时，缓存全部组件，当include为数组时缓存对应组件</span></span>
<span class="line"><span style="color:#E5C07B;">          this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">cache</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">computedMatch</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">match</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //可以在computedMatch里追加入一个display属性，可以在路由组件的props.match拿到</span></span>
<span class="line"><span style="color:#C678DD;">        const</span><span style="color:#E5C07B;"> cloneProps</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">cache</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">&amp;&amp;</span><span style="color:#E5C07B;"> Object</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">assign</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">cache</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">path</span><span style="color:#ABB2BF;">].</span><span style="color:#E06C75;">computedMatch</span><span style="color:#ABB2BF;">, {</span><span style="color:#E06C75;">display</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">match</span><span style="color:#C678DD;"> ?</span><span style="color:#98C379;"> &#39;block&#39;</span><span style="color:#C678DD;"> :</span><span style="color:#98C379;"> &#39;none&#39;</span><span style="color:#ABB2BF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;font-style:italic;"> style</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">display</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">match</span><span style="color:#C678DD;"> ?</span><span style="color:#98C379;"> &#39;block&#39;</span><span style="color:#C678DD;"> :</span><span style="color:#98C379;"> &#39;none&#39;</span><span style="color:#ABB2BF;">}</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#C678DD;">{</span><span style="color:#E5C07B;">React</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">cloneElement</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">child</span><span style="color:#ABB2BF;">, {</span><span style="color:#E06C75;">computedMatch</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">cloneProps</span><span style="color:#ABB2BF;">})</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;;</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 使用</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">RouteCache</span><span style="color:#D19A66;font-style:italic;"> include</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&#39;/login&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;/home&#39;</span><span style="color:#ABB2BF;">]</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E5C07B;">Route</span><span style="color:#D19A66;font-style:italic;"> path</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;/login&quot;</span><span style="color:#D19A66;font-style:italic;"> component</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#E06C75;">Login</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  &lt;</span><span style="color:#E5C07B;">Route</span><span style="color:#D19A66;font-style:italic;"> path</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;/home&quot;</span><span style="color:#D19A66;font-style:italic;"> component</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#E06C75;">App</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E5C07B;">RouteCache</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><h2 id="获取实际的dom" tabindex="-1">获取实际的DOM <a class="header-anchor" href="#获取实际的dom" aria-label="Permalink to &quot;获取实际的DOM&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">ReactDOM</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">findDOMNode</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">sildeWrapper</span><span style="color:#ABB2BF;">).</span><span style="color:#E06C75;">clientWidth</span><span style="color:#ABB2BF;">;   </span><span style="color:#7F848E;font-style:italic;">//废弃  改用ref</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="添加dom" tabindex="-1">添加DOM <a class="header-anchor" href="#添加dom" aria-label="Permalink to &quot;添加DOM&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;font-style:italic;"> dangerouslySetInnerHTML</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">__html</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;&lt;p&gt;123&lt;/p&gt;&#39;</span><span style="color:#ABB2BF;">}</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="react-memo" tabindex="-1">React.memo <a class="header-anchor" href="#react-memo" aria-label="Permalink to &quot;React.memo&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> PowerList</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;./components/PowerList&quot;</span></span>
<span class="line highlighted"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> MemoPowerList</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> memo</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">PowerList</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">prevProps</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">nextProps</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;"> prevProps</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">data</span><span style="color:#56B6C2;"> ===</span><span style="color:#E5C07B;"> nextProps</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;"> render</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#ABB2BF;">     &lt;</span><span style="color:#E5C07B;">MemoPowerList</span><span style="color:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="react-createelement" tabindex="-1">React.createElement <a class="header-anchor" href="#react-createelement" aria-label="Permalink to &quot;React.createElement&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">React</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createElement</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E06C75;">  type</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  {</span><span style="color:#E06C75;">props</span><span style="color:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;">  [...</span><span style="color:#E06C75;">children</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// jsx 语法</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;font-style:italic;"> id</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;one&#39;</span><span style="color:#D19A66;font-style:italic;"> class</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&#39;two&#39;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;font-style:italic;"> id</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;spanOne&quot;</span><span style="color:#ABB2BF;">&gt;this is spanOne&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">h1</span><span style="color:#D19A66;font-style:italic;"> id</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;spanTwo&quot;</span><span style="color:#ABB2BF;">&gt;this is spanTwo&lt;/</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 转化为 js</span></span>
<span class="line highlighted"><span style="color:#E5C07B;">React</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createElement</span><span style="color:#ABB2BF;">(</span></span>
<span class="line highlighted"><span style="color:#98C379;">    &quot;div&quot;</span><span style="color:#ABB2BF;">, {</span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;one&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">className</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;two&quot;</span><span style="color:#ABB2BF;">},</span></span>
<span class="line highlighted"><span style="color:#E5C07B;">    React</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createElement</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;div&quot;</span><span style="color:#ABB2BF;">, {</span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;spanOne&quot;</span><span style="color:#ABB2BF;">}, </span><span style="color:#98C379;">&quot;this is spanOne&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line highlighted"><span style="color:#E5C07B;">    React</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createElement</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;h1&quot;</span><span style="color:#ABB2BF;">, {</span><span style="color:#E06C75;">id</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;spanTwo&quot;</span><span style="color:#ABB2BF;">}, </span><span style="color:#98C379;">&quot;this is spanTwo&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line highlighted"><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="react-cloneelement" tabindex="-1">React.cloneElement <a class="header-anchor" href="#react-cloneelement" aria-label="Permalink to &quot;React.cloneElement&quot;">​</a></h2><p>新的子元素将取代现有的子元素， <code>key</code>和<code>ref</code>将被保留</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E5C07B;">React</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">cloneElement</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E06C75;">  element</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  {</span><span style="color:#E06C75;">props</span><span style="color:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;">  [...</span><span style="color:#E06C75;">children</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>适用于</strong> 父组件是<code>独立</code>的，子组件是<code>独立</code>的， 父组件数据改变，想要通知子组件，或者子组件想要改父组件的数据(也是通过回调)</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> React</span><span style="color:#ABB2BF;">, {</span><span style="color:#E06C75;">Fragment</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">Component</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">useState</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">useEffect</span><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;react&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> MyContainer</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> Component</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    state</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">count</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#61AFEF;">    handleClick</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setState</span><span style="color:#ABB2BF;">(({</span><span style="color:#E06C75;font-style:italic;">count</span><span style="color:#ABB2BF;">}) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">            return</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">count</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">count</span><span style="color:#56B6C2;"> +</span><span style="color:#D19A66;"> 1</span><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">        })</span></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">    render</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">        const</span><span style="color:#ABB2BF;"> {</span><span style="color:#E5C07B;">count</span><span style="color:#ABB2BF;">} </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;</span><span style="color:#E5C07B;">Fragment</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line highlighted"><span style="color:#C678DD;">                {</span><span style="color:#E5C07B;">React</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">Children</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">map</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">props</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">children</span><span style="color:#ABB2BF;">, (</span><span style="color:#E06C75;font-style:italic;">item</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">index</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line highlighted"><span style="color:#C678DD;">                    return</span><span style="color:#E5C07B;"> React</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">cloneElement</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">item</span><span style="color:#ABB2BF;">,</span></span>
<span class="line highlighted"><span style="color:#ABB2BF;">                        {</span></span>
<span class="line highlighted"><span style="color:#E06C75;">                            parentState</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">count</span><span style="color:#ABB2BF;">,</span></span>
<span class="line highlighted"><span style="color:#E06C75;">                            handleClick</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">handleClick</span></span>
<span class="line highlighted"><span style="color:#ABB2BF;">                        },</span></span>
<span class="line highlighted"><span style="color:#ABB2BF;">                    )</span></span>
<span class="line highlighted"><span style="color:#ABB2BF;">                })</span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;/</span><span style="color:#E5C07B;">Fragment</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">        )</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> MySub</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">props</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#ABB2BF;"> {</span><span style="color:#E5C07B;">subInfo</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">parentState</span><span style="color:#ABB2BF;">, </span><span style="color:#E5C07B;">handleClick</span><span style="color:#ABB2BF;">} </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> props</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;font-style:italic;"> style</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">margin</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;15px&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">border</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;1px solid red&quot;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">padding</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">10</span><span style="color:#ABB2BF;">}</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">            子元素:</span><span style="color:#C678DD;">{</span><span style="color:#E06C75;">subInfo</span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;</span><span style="color:#E06C75;">br</span><span style="color:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">            父组件属性count值: </span><span style="color:#C678DD;">{</span><span style="color:#E06C75;">parentState</span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;</span><span style="color:#E06C75;">br</span><span style="color:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;</span><span style="color:#E06C75;">button</span><span style="color:#D19A66;font-style:italic;"> onClick</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#ABB2BF;">() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#61AFEF;"> handleClick</span><span style="color:#ABB2BF;">()</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">&gt;点击+1&lt;/</span><span style="color:#E06C75;">button</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    )</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> Index</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;</span><span style="color:#E5C07B;">Fragment</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;</span><span style="color:#E5C07B;">MyContainer</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">                &lt;</span><span style="color:#E5C07B;">MySub</span><span style="color:#D19A66;font-style:italic;"> subInfo</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#98C379;">&quot;第一个&quot;</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">                &lt;</span><span style="color:#E5C07B;">MySub</span><span style="color:#D19A66;font-style:italic;"> subInfo</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#98C379;">&quot;第二个&quot;</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;/</span><span style="color:#E5C07B;">MyContainer</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;/</span><span style="color:#E5C07B;">Fragment</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    )</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#E06C75;"> Index</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><h2 id="reactdom-createportal" tabindex="-1">ReactDOM.createPortal <a class="header-anchor" href="#reactdom-createportal" aria-label="Permalink to &quot;ReactDOM.createPortal&quot;">​</a></h2><p>react 中所有的组件都会位于#app下，而使用Portals提供了一种脱离#app的组件。</p><p>适用 <code>模态框，通知，警告，goTop</code> 等</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> React</span><span style="color:#ABB2BF;">, {</span><span style="color:#E06C75;">Fragment</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">useState</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">useEffect</span><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;react&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> ReactDOM</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;react-dom&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> modalRoot</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;modal&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> Modal</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> React</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">Component</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    constructor</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">props</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;font-style:italic;">        super</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">props</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">el</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createElement</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;div&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#61AFEF;">    componentDidMount</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">        modalRoot</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">appendChild</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">el</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;root&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#E5C07B;">style</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">display</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;none&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#61AFEF;">    componentWillUnmount</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">        modalRoot</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">removeChild</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">el</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#61AFEF;">    render</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line highlighted"><span style="color:#C678DD;">        return</span><span style="color:#E5C07B;"> ReactDOM</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createPortal</span><span style="color:#ABB2BF;">(</span></span>
<span class="line highlighted"><span style="color:#E5C07B;">            this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">props</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">children</span><span style="color:#ABB2BF;">,</span></span>
<span class="line highlighted"><span style="color:#E5C07B;">            this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">el</span><span style="color:#ABB2BF;">,</span></span>
<span class="line highlighted"><span style="color:#ABB2BF;">        );</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> f</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;</span><span style="color:#E5C07B;">Modal</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">            妈的 DW</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;/</span><span style="color:#E5C07B;">Modal</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    )</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#E06C75;"> f</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><h2 id="render-props" tabindex="-1">Render Props <a class="header-anchor" href="#render-props" aria-label="Permalink to &quot;Render Props&quot;">​</a></h2><p>就是给组件添加一个<code>值为函数</code>的属性，这个函数可以在<code>组件渲染</code>的时候调用</p><p><strong>适用于</strong> 父组件是独立的，子组件是独立的， 父组件数据改变，想要通知子组件，或者子组件想要改父组件的数据(也是通过回调)</p><p><strong>实现一个图片跟随鼠标的功能</strong></p><p>不知道这个功能之前可能这样实现</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> React</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;react&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#61AFEF;"> Cat</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> ({</span><span style="color:#E06C75;font-style:italic;">mouse</span><span style="color:#ABB2BF;">}) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;</span><span style="color:#E06C75;">img</span><span style="color:#D19A66;font-style:italic;"> src</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;https://ae01.alicdn.com/kf/H62563fe1dc6447aca248634b671b7a59W.png&quot;</span></span>
<span class="line"><span style="color:#D19A66;font-style:italic;">             style</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">position</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;absolute&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">left</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">mouse</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">top</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">mouse</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">y</span><span style="color:#ABB2BF;">}</span><span style="color:#C678DD;">}</span><span style="color:#D19A66;font-style:italic;"> alt</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    );</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> Mouse</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> React</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">Component</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    state</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">y</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#61AFEF;">    handleMouseMove</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">event</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setState</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">            x</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">event</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">clientX</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">            y</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">event</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">clientY</span></span>
<span class="line"><span style="color:#ABB2BF;">        }, () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">            this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">props</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">render</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">//在这里传给父组件</span></span>
<span class="line"><span style="color:#ABB2BF;">        });</span></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"><span style="color:#61AFEF;">    render</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;font-style:italic;"> style</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">height</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;100vh&#39;</span><span style="color:#ABB2BF;">}</span><span style="color:#C678DD;">}</span><span style="color:#D19A66;font-style:italic;"> onMouseMove</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">handleMouseMove</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">                &lt;</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;移动鼠标&lt;/</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">                &lt;</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">&gt;当前的鼠标定位 (X:</span><span style="color:#C678DD;">{</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">state</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">x</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">, Y:</span><span style="color:#C678DD;">{</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">state</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">y</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">)&lt;/</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">                {</span><span style="color:#7F848E;font-style:italic;">/*TODO:组件在里面渲染*/</span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#C678DD;">                {</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">props</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">children</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">  </span></span>
<span class="line"><span style="color:#ABB2BF;">                </span></span>
<span class="line"><span style="color:#C678DD;">                {</span><span style="color:#7F848E;font-style:italic;">/*TODO:这种方式简单*/</span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#C678DD;">                {</span><span style="color:#7F848E;font-style:italic;">/*{*/</span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#C678DD;">                {</span><span style="color:#7F848E;font-style:italic;">/*    React.Children.map(this.props.children, (item, index) =&gt; {*/</span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#C678DD;">                {</span><span style="color:#7F848E;font-style:italic;">/*        return React.cloneElement(item,*/</span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#C678DD;">                {</span><span style="color:#7F848E;font-style:italic;">/*            {*/</span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#C678DD;">                {</span><span style="color:#7F848E;font-style:italic;">/*                mouse: this.state*/</span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#C678DD;">                {</span><span style="color:#7F848E;font-style:italic;">/*            },*/</span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#C678DD;">                {</span><span style="color:#7F848E;font-style:italic;">/*        )*/</span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#C678DD;">                {</span><span style="color:#7F848E;font-style:italic;">/*    })*/</span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#C678DD;">                {</span><span style="color:#7F848E;font-style:italic;">/*}*/</span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">        );</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> Index</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> React</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">Component</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    state</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">mouse</span><span style="color:#ABB2BF;">: {} };  </span><span style="color:#7F848E;font-style:italic;">//交给他们的父级来出来，然后重新state,把值传进来</span></span>
<span class="line"><span style="color:#61AFEF;">    render</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">        const</span><span style="color:#ABB2BF;"> {</span><span style="color:#E5C07B;">mouse</span><span style="color:#ABB2BF;">} </span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;</span><span style="color:#E5C07B;">Mouse</span><span style="color:#D19A66;font-style:italic;"> render</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">item</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">                this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setState</span><span style="color:#ABB2BF;">({</span><span style="color:#E06C75;">mouse</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">item</span><span style="color:#ABB2BF;">})</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">                &lt;</span><span style="color:#E5C07B;">Cat</span><span style="color:#D19A66;font-style:italic;"> mouse</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#E06C75;">mouse</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;/</span><span style="color:#E5C07B;">Mouse</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">        );</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#E06C75;"> Index</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div><p>现在可以这么实现</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> React</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;react&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#61AFEF;"> Cat</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> ({</span><span style="color:#E06C75;font-style:italic;">mouse</span><span style="color:#ABB2BF;">}) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;</span><span style="color:#E06C75;">img</span><span style="color:#D19A66;font-style:italic;"> src</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;https://ae01.alicdn.com/kf/H62563fe1dc6447aca248634b671b7a59W.png&quot;</span></span>
<span class="line"><span style="color:#D19A66;font-style:italic;">             style</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">position</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;absolute&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">left</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">mouse</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">top</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">mouse</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">y</span><span style="color:#ABB2BF;">}</span><span style="color:#C678DD;">}</span><span style="color:#D19A66;font-style:italic;"> alt</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    );</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> Mouse</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> React</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">Component</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">    state</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">x</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">y</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#61AFEF;">    handleMouseMove</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">event</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        this</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setState</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">            x</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">event</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">clientX</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">            y</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">event</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">clientY</span></span>
<span class="line"><span style="color:#ABB2BF;">        });</span></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"><span style="color:#61AFEF;">    render</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;font-style:italic;"> style</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#ABB2BF;">{</span><span style="color:#E06C75;">height</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;100vh&#39;</span><span style="color:#ABB2BF;">}</span><span style="color:#C678DD;">}</span><span style="color:#D19A66;font-style:italic;"> onMouseMove</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">handleMouseMove</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">                &lt;</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;移动鼠标&lt;/</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">                &lt;</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">&gt;当前的鼠标定位 (X:</span><span style="color:#C678DD;">{</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">state</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">x</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">, Y:</span><span style="color:#C678DD;">{</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">state</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">y</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">)&lt;/</span><span style="color:#E06C75;">p</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#C678DD;">                {</span><span style="color:#7F848E;font-style:italic;">/*TODO:在render里面执行的这个方法，不仅仅是执行当前这个函数还把函数在这里渲染出来了*/</span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#C678DD;">                {</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">props</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">render</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">state</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">        );</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#61AFEF;"> Index</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#61AFEF;"> catRender</span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">item</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Cat</span><span style="color:#D19A66;font-style:italic;"> mouse</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#E06C75;">item</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">/&gt;;</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#ABB2BF;"> (&lt;</span><span style="color:#E5C07B;">Mouse</span><span style="color:#D19A66;font-style:italic;"> render</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#E06C75;">catRender</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">/&gt;);</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#E06C75;"> Index</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h2 id="error-boundaries" tabindex="-1">Error Boundaries <a class="header-anchor" href="#error-boundaries" aria-label="Permalink to &quot;Error Boundaries&quot;">​</a></h2><p><code>错误边界</code>是一种React组件，这种组件<strong>可以捕获并打印发生在其子组件树任何位置的 JavaScript 错误，并且，它会渲染出备用 UI</strong>，而不是渲染那些崩溃了的子组件树。 错误边界在渲染期间、生命周期方法和整个组件树的构造函数中捕获错误。</p><p><strong>static getDerivedStateFromError(error)</strong></p><p>当后代组件抛出错误时，首先会调用这个方法，并将抛出的错误作为参数。无论这个方法返回什么值，都将用于更新组件的状态。</p><p>在后代组件抛出错误之后，也会调用<strong>componentDidCatch</strong>方法除了抛出的错误之外，还会有另一个参数，这个参数包含了有关错误的更多信息</p><ul><li>getDerivedStateFromError是在reconciliation阶段触发，所以getDerivedStateFromError进行捕获错误后进行组件的状态变更，不允许出现副作用。</li><li>componentDidCatch因为在commit阶段，因此允许执行副作用。 它应该用于记录错误之类的情况</li></ul><div class="warning custom-block"><p class="custom-block-title">注意</p><p>错误边界无法捕获以下场景中产生的错误：</p><ul><li>事件处理（了解更多）</li><li>异步代码（例如 <code>setTimeout</code> 或 <code>requestAnimationFrame</code> 回调函数）</li><li>服务端渲染</li><li>它自身抛出来的错误（并非它的子组件）</li></ul><p><strong>只有 class 组件才可以成为错误边界组件</strong></p><p>自React16起，<code>任何未被错误边界捕获的错误</code>将会导致整个React组件树被卸载。</p><p><strong>错误边界的<code>粒度</code>由你来决定，可以将其包装在<code>最顶层的路由</code>组件并为用户展示一个 “Something went wrong” 的错误信息， 就像服务端框架经常处理崩溃一样。 你也可以将<code>单独的部件</code>包装在错误边界以保护应用其他部分不崩溃。</strong></p></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> ErrorBoundary</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> React</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">Component</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  constructor</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">props</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;font-style:italic;">    super</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">props</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">    this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">state</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">hasError</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">false</span><span style="color:#ABB2BF;"> };</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  static</span><span style="color:#61AFEF;"> getDerivedStateFromError</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">error</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 更新 state 使下一次渲染能够显示降级后的 UI</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">hasError</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;"> };</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">  componentDidCatch</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">error</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">errorInfo</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    // 你同样可以将错误日志上报给服务器</span></span>
<span class="line"><span style="color:#61AFEF;">    logErrorToMyService</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">error</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">errorInfo</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">  render</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">state</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">hasError</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      // 你可以自定义降级后的 UI 并渲染</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;Something went wrong.&lt;/</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">props</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">children</span><span style="color:#ABB2BF;">; </span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="code-splitting" tabindex="-1">Code Splitting <a class="header-anchor" href="#code-splitting" aria-label="Permalink to &quot;Code Splitting&quot;">​</a></h2><p><strong>import()</strong></p><p>适用于函数</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//add.js</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> const</span><span style="color:#61AFEF;"> sum</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">a</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">b</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#E06C75;"> a</span><span style="color:#56B6C2;"> +</span><span style="color:#E06C75;"> b</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//index.js</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> React</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;react&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> Index</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">    const</span><span style="color:#61AFEF;"> handleClick</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> async</span><span style="color:#ABB2BF;"> () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line highlighted"><span style="color:#C678DD;">        const</span><span style="color:#ABB2BF;"> {</span><span style="color:#E5C07B;">sum</span><span style="color:#ABB2BF;">} </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> await</span><span style="color:#61AFEF;"> import</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;./add&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line highlighted"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">sum</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;">    };</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;</span><span style="color:#E06C75;">button</span><span style="color:#D19A66;font-style:italic;"> onClick</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#E06C75;">handleClick</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">&gt;点击&lt;/</span><span style="color:#E06C75;">button</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    );</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#E06C75;"> Index</span><span style="color:#ABB2BF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><strong>React.lazy</strong></p><p>适用于组件 目前不支持服务端渲染</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line highlighted"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> Foo</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> React</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">lazy</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#61AFEF;"> import</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;../components/Foo&#39;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#61AFEF;">render</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line highlighted"><span style="color:#ABB2BF;">            &lt;</span><span style="color:#E5C07B;">Suspense</span><span style="color:#D19A66;font-style:italic;"> fallback</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;loading...&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">                &lt;</span><span style="color:#E5C07B;">Foo</span><span style="color:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;/</span><span style="color:#E5C07B;">Suspense</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">        )</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><code>React.lazy 目前只支持默认导出（default exports)</code> 你可以创建一个中间模块，来重新导出为默认模块</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//a.jsx</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> const</span><span style="color:#E5C07B;"> A</span><span style="color:#56B6C2;"> =</span><span style="color:#7F848E;font-style:italic;"> /* ... */</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> const</span><span style="color:#E5C07B;"> B</span><span style="color:#56B6C2;"> =</span><span style="color:#7F848E;font-style:italic;"> /* ... */</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//middle.js</span></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">A</span><span style="color:#C678DD;"> as</span><span style="color:#C678DD;"> default</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &quot;./a&quot;</span><span style="color:#ABB2BF;">;   </span><span style="color:#7F848E;font-style:italic;">//A就相当于默认导出</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//index.jsx</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> React</span><span style="color:#ABB2BF;">, { </span><span style="color:#E06C75;">lazy</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;react&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;"> A</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> lazy</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#61AFEF;"> import</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;./middle&quot;</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E5C07B;">Suspense</span><span style="color:#D19A66;font-style:italic;"> fallback</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;loading...&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E5C07B;">A</span><span style="color:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E5C07B;">Suspense</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="react-strictmode" tabindex="-1">React.StrictMode <a class="header-anchor" href="#react-strictmode" aria-label="Permalink to &quot;React.StrictMode&quot;">​</a></h2><p>开发模式会调用多次</p><p>StrictMode 是一个用来突出显示应用程序中潜在问题的工具。与 Fragment 一样，StrictMode 不会渲染任何可见的 UI。它为其后代元素触发额外的检查和警告</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> React</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;react&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> ExampleApplication</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E5C07B;">Header</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E5C07B;">React.StrictMode</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">          &lt;</span><span style="color:#E5C07B;">ComponentOne</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">          &lt;</span><span style="color:#E5C07B;">ComponentTwo</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;/</span><span style="color:#E5C07B;">React.StrictMode</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E5C07B;">Footer</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  );</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><strong>StrictMode 目前有助于：</strong></p><ul><li>识别不安全的生命周期</li><li>关于使用过时字符串 ref API 的警告（React.createRef();）</li><li>关于使用废弃的 findDOMNode 方法的警告（貌似没有）</li><li>检测遗留 context API</li><li>检测意外的副作用</li></ul><p>react 在检测意外的副作用时可能重复调用某些生命周期方法、hooks 或者 render 方法，其包括：</p><p>class 组件的 constructor，render 以及 shouldComponentUpdate 方法 class 组件的生命周期方法 getDerivedStateFromProps 函数组件 状态更新函数 (即 setState 的第一个参数） 函数组件中 useState，useMemo 或者 useReducer 中的函数 当 React 发现在重复调用这些方法时出现了内存泄漏、无限循环或者其他奇怪的表现时会在控制台输出错误，以供程序员快速定位错误。</p><p>简单来说就是我们在使用 hooks 或者在某些生命周期函数中不应该使用有副作用的代码。在开发模式的 StrictMode 下，React 会帮助我们发现这些不好的代码并给予提示。</p><p>StrictMode 的这个重复调用的特性只使用于开发模式，在生产模式下不会触发多次调用。</p><h2 id="ref-非受控" tabindex="-1">ref(非受控) <a class="header-anchor" href="#ref-非受控" aria-label="Permalink to &quot;ref(非受控)&quot;">​</a></h2><p>React的ref有4种用法：</p><ul><li>字符串(已废弃)</li><li>回调函数</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//获取子组件的dom节点</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> CustomTextInput</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">props</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">            &lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;font-style:italic;"> ref</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#E5C07B;">props</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">inputRef</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    );</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> Parent</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">props</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      My input: &lt;</span><span style="color:#E5C07B;">CustomTextInput</span><span style="color:#D19A66;font-style:italic;"> inputRef</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#E5C07B;">props</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">inputRef</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  );</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> Grandparent</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> React</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">Component</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">  render</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E5C07B;">Parent</span></span>
<span class="line"><span style="color:#D19A66;font-style:italic;">        inputRef</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#E06C75;font-style:italic;">el</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">inputElement</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> el</span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">      /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    );</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><ul><li><p><strong>React.createRef()</strong> （React16.3提供,无状态的组件也可以使用）</p></li><li><p>Hooks <strong>useRef()</strong> 用法类似createRef()</p></li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#61AFEF;"> Example</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> inputRef</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> useRef</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">null</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#61AFEF;">    useEffect</span><span style="color:#ABB2BF;">(() </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">        inputRef</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">current</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">focus</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }, []);</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;font-style:italic;"> type</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;text&quot;</span><span style="color:#D19A66;font-style:italic;"> ref</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#E06C75;">inputRef</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    )</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//类组件</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> Child</span><span style="color:#C678DD;"> extends</span><span style="color:#E5C07B;"> React</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">Component</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#C678DD;">    constructor</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">props</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#E5C07B;font-style:italic;">        super</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">props</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">        this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">myRef</span><span style="color:#56B6C2;">=</span><span style="color:#E5C07B;">React</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createRef</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#61AFEF;">    componentDidMount</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">myRef</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">current</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#61AFEF;">    render</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#E06C75;">input</span><span style="color:#D19A66;font-style:italic;"> ref</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">myRef</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//无状态组件</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> CustomTextInput</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">props</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // textInput must be declared here so the ref can refer to it</span></span>
<span class="line"><span style="color:#C678DD;">  let</span><span style="color:#E06C75;"> textInput</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> React</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">createRef</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  function</span><span style="color:#61AFEF;"> handleClick</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">    textInput</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">current</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">focus</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">input</span></span>
<span class="line"><span style="color:#D19A66;font-style:italic;">        type</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;text&quot;</span></span>
<span class="line"><span style="color:#D19A66;font-style:italic;">        ref</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#E06C75;">textInput</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">      &lt;</span><span style="color:#E06C75;">input</span></span>
<span class="line"><span style="color:#D19A66;font-style:italic;">        type</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;button&quot;</span></span>
<span class="line"><span style="color:#D19A66;font-style:italic;">        value</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;Focus the text input&quot;</span></span>
<span class="line"><span style="color:#D19A66;font-style:italic;">        onClick</span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;">{</span><span style="color:#E06C75;">handleClick</span><span style="color:#C678DD;">}</span></span>
<span class="line"><span style="color:#ABB2BF;">      /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">    &lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  );</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><ul><li><code>React.forwardRef()</code> 同样是React 16.3版本后提供的，可以用来创建子组件，以传递ref。</li></ul><h2 id="react生命周期" tabindex="-1">React生命周期 <a class="header-anchor" href="#react生命周期" aria-label="Permalink to &quot;React生命周期&quot;">​</a></h2><p><img src="https://ae01.alicdn.com/kf/Hbb3d522c7afa45d894e583388f1615f4p.jpg" alt=""></p><h2 id="极简-react-入门配置" tabindex="-1">极简 React 入门配置 <a class="header-anchor" href="#极简-react-入门配置" aria-label="Permalink to &quot;极简 React 入门配置&quot;">​</a></h2><p><a href="https://kentcdodds.com/blog/super-simple-start-to-react" target="_blank" rel="noreferrer">https://kentcdodds.com/blog/super-simple-start-to-react</a></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">div</span><span style="color:#D19A66;font-style:italic;"> id</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;root&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;font-style:italic;"> src</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;https://unpkg.com/react@16.13.1/umd/react.development.js&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;font-style:italic;"> src</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;https://unpkg.com/react-dom@16.13.1/umd/react-dom.development.js&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;font-style:italic;"> src</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;https://unpkg.com/@babel/standalone@7.8.3/babel.js&quot;</span><span style="color:#ABB2BF;">&gt;&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">script</span><span style="color:#D19A66;font-style:italic;"> type</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;text/babel&quot;</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">  const </span><span style="color:#C678DD;">{</span><span style="color:#E06C75;">PureComponent</span><span style="color:#C678DD;">}</span><span style="color:#ABB2BF;"> = React;</span></span>
<span class="line"><span style="color:#ABB2BF;">  // 也可以是函数式 </span></span>
<span class="line"><span style="color:#ABB2BF;">  class App extends PureComponent </span><span style="color:#C678DD;">{</span></span>
<span class="line"><span style="color:#61AFEF;">    render</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> () </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#ABB2BF;"> (</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">          &lt;</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;watermark-webp&lt;/</span><span style="color:#E06C75;">h1</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">        &lt;/</span><span style="color:#E06C75;">div</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">      )</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">  }</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  ReactDOM.render(&lt;</span><span style="color:#E5C07B;">App</span><span style="color:#ABB2BF;"> /&gt;, document.getElementById(&#39;root&#39;))</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">script</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">body</span><span style="color:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;/</span><span style="color:#E06C75;">html</span><span style="color:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="antd" tabindex="-1">antd <a class="header-anchor" href="#antd" aria-label="Permalink to &quot;antd&quot;">​</a></h2><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">@import</span><span style="color:#98C379;"> &#39;~antd/es/style/themes/default.less&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">@pro-header-hover-bg</span><span style="color:#ABB2BF;">: rgba(0, 0, 0, 0.025);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//获取from里面的数据集合</span></span>
<span class="line"><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">props</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">form</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getFieldsValue</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//重置from输入的内容，（参数不传默认是所有的）</span></span>
<span class="line"><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">props</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">form</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resetFields</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;search_product_name&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//抛出错误</span></span>
<span class="line"><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">props</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">form</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setFields</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">   name</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">      value</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">val</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        errors</span><span style="color:#ABB2BF;">: [</span><span style="color:#C678DD;">new</span><span style="color:#61AFEF;"> Error</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;forbid ha&#39;</span><span style="color:#ABB2BF;">)],</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//设置from的值</span></span>
<span class="line"><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">props</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">form</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">setFieldsValue</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">   points</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">1212121</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">});</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">* 提交数据滚动到该位置</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">* 参数1 只捕捉该字段的数据</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">* 参数2 定义 validateFieldsAndScroll 的滚动行为</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">* 参数3 获取数据，错误捕获</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#E5C07B;">form</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">validateFieldsAndScroll</span><span style="color:#ABB2BF;">( </span></span>
<span class="line"><span style="color:#ABB2BF;">   [</span><span style="color:#98C379;">&#39;user&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;password&#39;</span><span style="color:#ABB2BF;">],</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#E06C75;">      scroll</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#E06C75;">           offsetTop</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">60</span></span>
<span class="line"><span style="color:#ABB2BF;">       }</span></span>
<span class="line"><span style="color:#ABB2BF;">   },(</span><span style="color:#E06C75;font-style:italic;">err</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">fieldsValue</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">err</span><span style="color:#ABB2BF;">)</span><span style="color:#C678DD;">return</span><span style="color:#D19A66;"> false</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">   }     </span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//自定义输入框额格式 </span></span>
<span class="line"><span style="color:#ABB2BF;">{</span><span style="color:#61AFEF;">getFieldDecorator</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;user&#39;</span><span style="color:#ABB2BF;">, {</span></span>
<span class="line"><span style="color:#E06C75;">    rules</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span><span style="color:#E06C75;">required</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">message</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;必填&#39;</span><span style="color:#ABB2BF;">},</span></span>
<span class="line"><span style="color:#ABB2BF;">    {</span></span>
<span class="line"><span style="color:#61AFEF;">        validator</span><span style="color:#ABB2BF;">: (</span><span style="color:#E06C75;font-style:italic;">rule</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">value</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">callback</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">            if</span><span style="color:#ABB2BF;"> (</span><span style="color:#98C379;">&#39;不符合&#39;</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#61AFEF;">                callback</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;不符合&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">            }</span></span>
<span class="line"><span style="color:#61AFEF;">            callback</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">    ],</span></span>
<span class="line"><span style="color:#E06C75;">    initialValue</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">})(&lt;</span><span style="color:#E5C07B;">Input</span><span style="color:#ABB2BF;">/&gt;)}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><h2 id="定义环境变量" tabindex="-1">定义环境变量 <a class="header-anchor" href="#定义环境变量" aria-label="Permalink to &quot;定义环境变量&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#E06C75;">cross</span><span style="color:#56B6C2;">-</span><span style="color:#E06C75;">env</span><span style="color:#E5C07B;"> ANALYZE</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">true</span><span style="color:#7F848E;font-style:italic;"> // 设置环境变量</span></span>
<span class="line"><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">ANALYZE</span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;">true</span><span style="color:#7F848E;font-style:italic;">  // 获取环境变量</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">new</span><span style="color:#E5C07B;"> webpack</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">DefinePlugin</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">    ENV</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">JSON</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">stringify</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">process</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">env</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">ENV</span><span style="color:#ABB2BF;">), </span><span style="color:#7F848E;font-style:italic;">// 可以设置环境变量在页面直接使用</span></span>
<span class="line"><span style="color:#ABB2BF;">}),</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>react 默认测试环境 NODE_ENV为<code>development</code>，正式为<code>production</code></p><h2 id="dva-effects" tabindex="-1">dva &amp; effects <a class="header-anchor" href="#dva-effects" aria-label="Permalink to &quot;dva &amp; effects&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">//全局执行model</span></span>
<span class="line"><span style="color:#E5C07B;">window</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">g_app</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//effects基本用法</span></span>
<span class="line"><span style="color:#56B6C2;">*</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">action</span><span style="color:#ABB2BF;">,{</span><span style="color:#E06C75;">put</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">call</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">select</span><span style="color:#ABB2BF;">}){</span></span>
<span class="line"><span style="color:#C678DD;">    yield</span><span style="color:#61AFEF;"> call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">delay</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;">);</span><span style="color:#7F848E;font-style:italic;">//yield 调用一个delay的方法，返回一个promise,会等待在这里。等待到promise变成完成态</span></span>
<span class="line"><span style="color:#C678DD;">    yield</span><span style="color:#61AFEF;"> fork</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">delay</span><span style="color:#ABB2BF;">,</span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;">);</span><span style="color:#7F848E;font-style:italic;">//yield 调用一个delay的方法，返回一个promise,直接执行不会堵塞</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#C678DD;">    yield</span><span style="color:#61AFEF;"> put</span><span style="color:#ABB2BF;">({</span><span style="color:#E06C75;">type</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&#39;counter/minus&#39;</span><span style="color:#ABB2BF;">});</span><span style="color:#7F848E;font-style:italic;">//put派发一个动作,相当于dispatch;注意： put 也是阻塞 effect</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> state</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> yield</span><span style="color:#61AFEF;"> select</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">state</span><span style="color:#C678DD;">=&gt;</span><span style="color:#E5C07B;">state</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">counter</span><span style="color:#ABB2BF;">);  </span><span style="color:#7F848E;font-style:italic;">//获取store的数据相当于 store.getState()</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#ABB2BF;"> {</span><span style="color:#E06C75;">push</span><span style="color:#ABB2BF;">} </span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;"> routerRedux</span><span style="color:#ABB2BF;">;</span><span style="color:#7F848E;font-style:italic;">//dva封装的router-redux，dva的核心库没有这个方法。</span></span>
<span class="line"><span style="color:#C678DD;">    yield</span><span style="color:#61AFEF;"> put</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">action</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">to</span><span style="color:#ABB2BF;">));</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//effects里面调取公共的方法  例：</span></span>
<span class="line"><span style="color:#E06C75;"> effects</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#56B6C2;">    *</span><span style="color:#61AFEF;"> a</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">action</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">8888</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    },</span></span>
<span class="line"><span style="color:#56B6C2;">    *</span><span style="color:#61AFEF;"> b</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">action</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">person</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">        yield</span><span style="color:#61AFEF;"> put</span><span style="color:#ABB2BF;">({</span><span style="color:#7F848E;font-style:italic;">//就是dispatch</span></span>
<span class="line"><span style="color:#E06C75;">            type</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;a&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">        })</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//dva请求多个接口</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//方法一 ：利用Promise.all</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> [</span><span style="color:#E5C07B;">ary1</span><span style="color:#ABB2BF;">,</span><span style="color:#E5C07B;">ary2</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> yield</span><span style="color:#E5C07B;"> Promise</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">all</span><span style="color:#ABB2BF;">([</span><span style="color:#61AFEF;">queryWxapps</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">scenicid</span><span style="color:#ABB2BF;">()[</span><span style="color:#98C379;">&#39;id&#39;</span><span style="color:#ABB2BF;">]), </span><span style="color:#61AFEF;">queryWxapps</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">scenicid</span><span style="color:#ABB2BF;">()[</span><span style="color:#98C379;">&#39;id&#39;</span><span style="color:#ABB2BF;">]), </span><span style="color:#61AFEF;">queryWxapps</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">scenicid</span><span style="color:#ABB2BF;">()[</span><span style="color:#98C379;">&#39;id&#39;</span><span style="color:#ABB2BF;">])])</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">ary1</span><span style="color:#ABB2BF;">);</span><span style="color:#7F848E;font-style:italic;">//[{},{}]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//方法二 ：利用axios.all()</span></span>
<span class="line"><span style="color:#E5C07B;">axios</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">all</span><span style="color:#ABB2BF;">([</span><span style="color:#61AFEF;">queryWxapps</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">scenicid</span><span style="color:#ABB2BF;">()[</span><span style="color:#98C379;">&#39;id&#39;</span><span style="color:#ABB2BF;">]), </span><span style="color:#61AFEF;">queryWxapps</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">scenicid</span><span style="color:#ABB2BF;">()[</span><span style="color:#98C379;">&#39;id&#39;</span><span style="color:#ABB2BF;">]), </span><span style="color:#61AFEF;">queryWxapps</span><span style="color:#ABB2BF;">(</span><span style="color:#61AFEF;">scenicid</span><span style="color:#ABB2BF;">()[</span><span style="color:#98C379;">&#39;id&#39;</span><span style="color:#ABB2BF;">]).</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">axios</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">spread</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">user</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">aside</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E5C07B;">  console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">user</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">  console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">aside</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}));</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//方法三 ：sage提供的将会同步执行</span></span>
<span class="line"><span style="color:#E06C75;">const</span><span style="color:#ABB2BF;"> [</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">c</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> yield</span><span style="color:#ABB2BF;"> [</span></span>
<span class="line"><span style="color:#61AFEF;">    call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">groupbuysList</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">shopid</span><span style="color:#ABB2BF;">()[</span><span style="color:#98C379;">&#39;id&#39;</span><span style="color:#ABB2BF;">], </span><span style="color:#E5C07B;">action</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">params</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#61AFEF;">    call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">groupbuysList</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">shopid</span><span style="color:#ABB2BF;">()[</span><span style="color:#98C379;">&#39;id&#39;</span><span style="color:#ABB2BF;">], </span><span style="color:#E5C07B;">action</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">params</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#61AFEF;">    call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">groupbuysList</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">shopid</span><span style="color:#ABB2BF;">()[</span><span style="color:#98C379;">&#39;id&#39;</span><span style="color:#ABB2BF;">], </span><span style="color:#E5C07B;">action</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">params</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//方法四 ：sage提供的yield all</span></span>
<span class="line"><span style="color:#E06C75;"> const</span><span style="color:#ABB2BF;"> [</span><span style="color:#E06C75;">a</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">b</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">c</span><span style="color:#ABB2BF;">]  </span><span style="color:#56B6C2;">=</span><span style="color:#C678DD;"> yield</span><span style="color:#61AFEF;"> all</span><span style="color:#ABB2BF;">([</span></span>
<span class="line"><span style="color:#61AFEF;">    call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">groupbuysList</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">shopid</span><span style="color:#ABB2BF;">()[</span><span style="color:#98C379;">&#39;id&#39;</span><span style="color:#ABB2BF;">], </span><span style="color:#E5C07B;">action</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">params</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#61AFEF;">    call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">groupbuysList</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">shopid</span><span style="color:#ABB2BF;">()[</span><span style="color:#98C379;">&#39;id&#39;</span><span style="color:#ABB2BF;">], </span><span style="color:#E5C07B;">action</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">params</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#61AFEF;">    call</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">groupbuysList</span><span style="color:#ABB2BF;">, </span><span style="color:#61AFEF;">shopid</span><span style="color:#ABB2BF;">()[</span><span style="color:#98C379;">&#39;id&#39;</span><span style="color:#ABB2BF;">], </span><span style="color:#E5C07B;">action</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">params</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div>`,97),e=[o];function r(c,t,B,y,i,F){return a(),n("div",null,e)}const C=s(p,[["render",r]]);export{b as __pageData,C as default};
