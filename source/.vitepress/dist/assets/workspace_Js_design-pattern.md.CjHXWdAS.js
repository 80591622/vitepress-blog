import{_ as s,c as n,o as a,a5 as l}from"./chunks/framework.BQQWXjGs.js";const A=JSON.parse('{"title":"JS设计模式探索","description":"","frontmatter":{},"headers":[],"relativePath":"workspace/Js/design-pattern.md","filePath":"workspace/Js/design-pattern.md","lastUpdated":1713942612000}'),p={name:"workspace/Js/design-pattern.md"},e=l(`<h1 id="js设计模式探索" tabindex="-1">JS设计模式探索 <a class="header-anchor" href="#js设计模式探索" aria-label="Permalink to &quot;JS设计模式探索&quot;">​</a></h1><h2 id="单例模式" tabindex="-1">单例模式 <a class="header-anchor" href="#单例模式" aria-label="Permalink to &quot;单例模式&quot;">​</a></h2><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#E06C75;"> singleton</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;"> name</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;wk&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;"> age</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">24</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#61AFEF;"> walk</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#E5C07B;">     console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">age</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">//24</span></span>
<span class="line"><span style="color:#ABB2BF;"> },</span></span>
<span class="line"><span style="color:#61AFEF;"> eat</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     //todo</span></span>
<span class="line"><span style="color:#ABB2BF;"> }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li>不足之处:<br><ul><li>(1)没有什么封装性，所有的属性方法都是暴露的。<br></li><li>(2)全局变量很容易造成命名空间污染。<br></li><li>(3)对象一开始变创建，万一我们用不上就浪费了。<br></li></ul></li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#61AFEF;"> person</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     // 这里声明私有变量和方法；</span></span>
<span class="line"><span style="color:#C678DD;">     const</span><span style="color:#E5C07B;"> privateVariable</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &#39;私有的外面获取不到&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">     </span></span>
<span class="line"><span style="color:#C678DD;">     function</span><span style="color:#61AFEF;"> showPrivate</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#E5C07B;">         console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">privateVariable</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">     }</span></span>
<span class="line"><span style="color:#ABB2BF;">     </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">     //公有的变量和方法(可以访问私有变量和方法);</span></span>
<span class="line"><span style="color:#C678DD;">     return</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">         publicMethod</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#61AFEF;">             showPrivate</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">         },</span></span>
<span class="line"><span style="color:#E06C75;">         publicVar</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;共有的外面能直接获取&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">     }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;">  single</span><span style="color:#56B6C2;"> =</span><span style="color:#61AFEF;"> person</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">single</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">publicMethod</span><span style="color:#ABB2BF;">(); </span><span style="color:#7F848E;font-style:italic;">// &#39;私有的外面获取不到&#39;</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">single</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">publicVar</span><span style="color:#ABB2BF;">); </span><span style="color:#7F848E;font-style:italic;">// &#39;共有的外面能直接获取&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="发布订阅模式-观察者模式" tabindex="-1">发布订阅模式+观察者模式 <a class="header-anchor" href="#发布订阅模式-观察者模式" aria-label="Permalink to &quot;发布订阅模式+观察者模式&quot;">​</a></h2><p>如下图所示：</p><img style="width:50%;" src="https://ae01.alicdn.com/kf/Hd0dd34b5adf14ea1a3b9648fa8fa1507b.jpg"><h3 id="观察者模式" tabindex="-1">观察者模式 <a class="header-anchor" href="#观察者模式" aria-label="Permalink to &quot;观察者模式&quot;">​</a></h3><p>观察者和被观察者一般是<code>直接联系</code>的，相互知道对方的存在。</p><p>观察者一般是同步的，被观察者一旦有变化，观察者会立即发生反应</p><p><code>Subject</code> - 被观察者，发布者;</p><p><code>Observer</code> - 观察者，订阅者；</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 被观察者</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> Subject</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  constructor</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">    this</span><span style="color:#ABB2BF;">. </span><span style="color:#E06C75;">observers</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> []; </span><span style="color:#7F848E;font-style:italic;">// 观察者列表</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 添加订阅者</span></span>
<span class="line"><span style="color:#61AFEF;">  add</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">observer</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">observers</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">observer</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 删除...</span></span>
<span class="line"><span style="color:#61AFEF;">  remove</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">observer</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> idx</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">observers</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">findIndex</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">item</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#E06C75;"> item</span><span style="color:#56B6C2;"> ===</span><span style="color:#E06C75;"> observer</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E06C75;">    idx</span><span style="color:#56B6C2;"> &gt;</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;">1</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">observers</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">splice</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">idx</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 通知  全部执行</span></span>
<span class="line"><span style="color:#61AFEF;">  notify</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">boss</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#ABB2BF;">(</span><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> o</span><span style="color:#C678DD;"> of</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">observers</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">      o</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">update</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">boss</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 观察者</span></span>
<span class="line"><span style="color:#C678DD;">class</span><span style="color:#E5C07B;"> Observer</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">  constructor</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">name</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> name</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 目标对象更新时触发的回调，即收到更新通知后的回调</span></span>
<span class="line"><span style="color:#61AFEF;">  update</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">boss</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">boss</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">通知我职位了，我是：</span><span style="color:#C678DD;">\${</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">name</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 实例化目标者</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> subject</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Subject</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 实例化两个观察者</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> obs1</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Observer</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;高级前端开发工程师&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> obs2</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> new</span><span style="color:#61AFEF;"> Observer</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;初级后端开发工程师&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 向目标者添加观察者</span></span>
<span class="line"><span style="color:#E5C07B;">subject</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obs1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">subject</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">add</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">obs2</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//通知</span></span>
<span class="line"><span style="color:#E5C07B;">subject</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">notify</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;HR&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#E5C07B;">subject</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">notify</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;CTO&#39;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><h3 id="发布订阅模式" tabindex="-1">发布订阅模式 <a class="header-anchor" href="#发布订阅模式" aria-label="Permalink to &quot;发布订阅模式&quot;">​</a></h3><p>发布者和订阅者是解耦的，他们是通过一个<code>介质</code>（往往是消息队列）执行代码</p><p>发布订阅模式由于是消息队列代理的存在，往往是异步的</p><p><strong>代码实现</strong></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// 控制中心</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> pubSub</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#E06C75;">  list</span><span style="color:#ABB2BF;">: {},</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 订阅</span></span>
<span class="line"><span style="color:#61AFEF;">  subscribe</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">fn</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">list</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">]) </span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">list</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> [];</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //可能是多个</span></span>
<span class="line"><span style="color:#E5C07B;">    this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">list</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">].</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">fn</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  //取消订阅</span></span>
<span class="line"><span style="color:#61AFEF;">  unsubscribe</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">fn</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    let</span><span style="color:#E06C75;"> fnList</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">list</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">];</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">fnList</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">return</span><span style="color:#D19A66;"> false</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">fn</span><span style="color:#ABB2BF;">) { </span><span style="color:#7F848E;font-style:italic;">// 不传入指定的方法，清空所用 key 下的订阅</span></span>
<span class="line"><span style="color:#E06C75;">      fnList</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">fnList</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    } </span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">     const</span><span style="color:#E5C07B;"> curFn</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;">  fnList</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">filter</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">item</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">index</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">            return</span><span style="color:#E06C75;">  item</span><span style="color:#56B6C2;"> !==</span><span style="color:#E06C75;"> fn</span><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#ABB2BF;">      });</span></span>
<span class="line"><span style="color:#E5C07B;">     this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">list</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">]</span><span style="color:#56B6C2;">=</span><span style="color:#E06C75;">curFn</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">  // 发布</span></span>
<span class="line"><span style="color:#61AFEF;">  publish</span><span style="color:#ABB2BF;">: </span><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">key</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E06C75;font-style:italic;">args</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> fn</span><span style="color:#C678DD;"> of</span><span style="color:#E5C07B;"> this</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">list</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">]) </span><span style="color:#E5C07B;">fn</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">call</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">, ...</span><span style="color:#E06C75;">args</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#61AFEF;"> sub1</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">time</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">  console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`上班了：</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">time</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#61AFEF;"> sub2</span><span style="color:#56B6C2;"> =</span><span style="color:#C678DD;"> function</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;font-style:italic;">time</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">\`下班了：</span><span style="color:#C678DD;">\${</span><span style="color:#E06C75;">time</span><span style="color:#C678DD;">}</span><span style="color:#98C379;">\`</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 订阅</span></span>
<span class="line"><span style="color:#E5C07B;">pubSub</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">subscribe</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;onwork&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">sub1</span><span style="color:#ABB2BF;"> )</span></span>
<span class="line"><span style="color:#E5C07B;">pubSub</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">subscribe</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;onwork&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">sub2</span><span style="color:#ABB2BF;"> )</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 发布</span></span>
<span class="line"><span style="color:#E5C07B;">pubSub</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">publish</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;onwork&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;18:00:00&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 取消订阅</span></span>
<span class="line"><span style="color:#E5C07B;">pubSub</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">unsubscribe</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;onwork&#39;</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><p><strong>DOM 的事件监听是&quot;发布订阅模式&quot;</strong></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#E5C07B;">  wk</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> document</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">getElementById</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;#wk&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 监听回调函数（指定事件）</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> notifyClick</span><span style="color:#ABB2BF;">() {</span></span>
<span class="line"><span style="color:#E5C07B;">    console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;我被点击了&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 添加事件监听</span></span>
<span class="line"><span style="color:#E5C07B;">wk</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">addEventListener</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;click&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">notifyClick</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 用户触发点击, 事件中心派发指定事件</span></span>
<span class="line"><span style="color:#ABB2BF;"> </span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// 取消事件监听</span></span>
<span class="line"><span style="color:#E5C07B;">loginBtn</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">removeEventListener</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;click&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">notifyClick</span><span style="color:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="两种模式的关联和区别" tabindex="-1">两种模式的关联和区别 <a class="header-anchor" href="#两种模式的关联和区别" aria-label="Permalink to &quot;两种模式的关联和区别&quot;">​</a></h3><p>发布订阅模式更灵活，是进阶版的观察者模式，<code>指定</code>对应分发。</p><p>观察者模式维护<code>单一</code>事件对应多个依赖该事件的对象关系；<br> 发布订阅维护<code>多个</code>事件（主题）及依赖各事件（主题）的对象之间的关系；</p><p>观察者模式是目标对象直接触发通知（全部通知），观察对象被迫接收通知。<br> 发布订阅模式多了个中间层（事件中心），由其去管理通知广播（只通知订阅对应事件的对象）；</p><p>观察者模式对象间依赖关系较强，发布订阅模式中对象之间实现真正的解耦。</p><h3 id="参考文档" tabindex="-1">参考文档 <a class="header-anchor" href="#参考文档" aria-label="Permalink to &quot;参考文档&quot;">​</a></h3><p><a href="https://juejin.im/post/5c0a9d9bf265da612909ff1b" target="_blank" rel="noreferrer">观察者模式 vs 发布订阅模式</a></p><p><a href="https://juejin.im/post/5d25a2316fb9a07f04207010" target="_blank" rel="noreferrer">观察者模式与发布订阅模式</a></p><p><a href="https://juejin.im/post/591a4f2a128fe1005cda28df" target="_blank" rel="noreferrer">观察者模式</a></p><h2 id="原型模式" tabindex="-1">原型模式 <a class="header-anchor" href="#原型模式" aria-label="Permalink to &quot;原型模式&quot;">​</a></h2><h2 id="未完待续" tabindex="-1">未完待续....... <a class="header-anchor" href="#未完待续" aria-label="Permalink to &quot;未完待续.......&quot;">​</a></h2>`,32),o=[e];function r(c,t,B,y,i,b){return a(),n("div",null,o)}const u=s(p,[["render",r]]);export{A as __pageData,u as default};
